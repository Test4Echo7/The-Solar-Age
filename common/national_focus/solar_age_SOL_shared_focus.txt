###SOL Rework, The Solar Age, new focuses###
###Damn you, EQS spaghetti code###
###Coded by Test4Echo###

###Sunset joins in on the evil fun###
shared_focus = {
    id = SOL_sunset_awaken
    icon = GFX_goal_sunrise_sparkle
    x = 6
    y = -1

    cost = 10
    allow_branch = { is_EQS_SOL = yes }
    available = {
        has_country_flag = SOL_has_captured_sunset
        OR = {
            has_completed_focus = SOL_empress_protector
            has_completed_focus = SOL_empress_mother
            has_completed_focus = SOL_god_empress
        }
    }
    select_effect = {
        ###Events here later###
        set_temp_variable = {
            bruh = 1
        }
    }
    completion_reward = {
        log = "[GetDateText]: [Root.GetName]: Focus SOL_sunset_awaken"
        set_global_flag = SOL_sunset_converted
        EQS_sunset_shimmer = {
            set_character_name = SOL_sunset_new_name
        }
    }
    ai_will_do = {
        base = 150
        modifier = {
            has_completed_focus = SOL_twilight_ascend
            add = 150
        }
    }
}

###New civil war focuses###
shared_focus = {
	id = SOL_civil_war_measures
	icon = GFX_goal_solar_military_factory
	cost = 5
	ai_will_do = {
		factor = 300
	}
	x = 18
	y = -1
	available = {
		eqs_has_civil_war = yes
	}
	allow_branch = {
		is_EQS_SOL = yes
	}
	bypass = {
		has_civil_war = no
		OR = {
			has_global_flag = equestrian_civil_war_ended
			has_global_flag = equestrian_com_civil_war_ended
			has_global_flag = equestrian_civil_war_daybreaker_ended
		}
		OR = {
			NOT = {
				country_exists = NLR
			}
			NLR = {
				is_subject = yes
			}
		}
		OR = {
			NOT = {
				country_exists = event_target:equestria
			}
			event_target:equestria = {
				is_subject = yes
			}
		}
		ROOT = {
			is_subject = no
		}
	}
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_civil_war_measures"
		###Event of Daybreaker passing the war measures act, which gets thundrous applause, aside from a few, as they democracy die
		add_ideas = SOL_civil_war_measures_idea
	}
	search_filters = { FOCUS_FILTER_ARMY_BONUS FOCUS_FILTER_RESISTANCE FOCUS_FILTER_WAR_SUPPORT FOCUS_FILTER_STABILITY FOCUS_FILTER_POLITICAL }
}

shared_focus = {
    id = SOL_promise_swift_end
    x = -3
    y = 1
    relative_position_id = SOL_civil_war_measures

    cost = 2
    prerequisite = { focus = SOL_civil_war_measures }
    available = {
		eqs_has_civil_war = yes
	}
	allow_branch = {
		is_EQS_SOL = yes
	}
	bypass = {
		has_civil_war = no
		OR = {
			has_global_flag = equestrian_civil_war_ended
			has_global_flag = equestrian_com_civil_war_ended
			has_global_flag = equestrian_civil_war_daybreaker_ended
		}
		OR = {
			NOT = {
				country_exists = NLR
			}
			NLR = {
				is_subject = yes
			}
		}
		OR = {
			NOT = {
				country_exists = event_target:equestria
			}
			event_target:equestria = {
				is_subject = yes
			}
		}
		ROOT = {
			is_subject = no
		}
	}
	completion_reward = {
        log = "[GetDateText]: [Root.GetName]: Focus SOL_promise_swift_end"
        ###Daybreaker hosts a speech outside Canterlot castle, where ponies are frightened of what is happening, and she promises that she will always be with them, unlike her traitor sister, and that they will drive back the forces of darkness and see the light of day shine forever
	}
	ai_will_do = { factor = 150 }
}

shared_focus = {
    id = SOL_crisis_industrial_management
    x = 3
    y = 1
    relative_position_id = SOL_civil_war_measures

    cost = 3
    prerequisite = { focus = SOL_civil_war_measures }
    available = {
		eqs_has_civil_war = yes
	}
	allow_branch = {
		is_EQS_SOL = yes
	}
	bypass = {
		has_civil_war = no
		OR = {
			has_global_flag = equestrian_civil_war_ended
			has_global_flag = equestrian_com_civil_war_ended
			has_global_flag = equestrian_civil_war_daybreaker_ended
		}
		OR = {
			NOT = {
				country_exists = NLR
			}
			NLR = {
				is_subject = yes
			}
		}
		OR = {
			NOT = {
				country_exists = event_target:equestria
			}
			event_target:equestria = {
				is_subject = yes
			}
		}
		ROOT = {
			is_subject = no
		}
	}
    completion_reward = {
        log = "[GetDateText]: [Root.GetName]: Focus SOL_crisis_industrial_management"
        three_random_industrial_complex = yes
        three_random_arms_factory = yes
        add_stability = -0.1
    }
    ai_will_do = { factor = 250 }
}

shared_focus = {
    id = SOL_draw_upon_militia
    x = 0
    y = 1
    relative_position_id = SOL_civil_war_measures

    cost = 4
    prerequisite = { focus = SOL_civil_war_measures }
    mutually_exclusive = { focus = SOL_counter_terrorists }
    available = {
		eqs_has_civil_war = yes
	}
	allow_branch = {
		is_EQS_SOL = yes
	}
	bypass = {
		has_civil_war = no
		OR = {
			has_global_flag = equestrian_civil_war_ended
			has_global_flag = equestrian_com_civil_war_ended
			has_global_flag = equestrian_civil_war_daybreaker_ended
		}
		OR = {
			NOT = {
				country_exists = NLR
			}
			NLR = {
				is_subject = yes
			}
		}
		OR = {
			NOT = {
				country_exists = event_target:equestria
			}
			event_target:equestria = {
				is_subject = yes
			}
		}
		ROOT = {
			is_subject = no
		}
	}
	completion_reward = {
        log = "[GetDateText]: [Root.GetName]: Focus SOL_draw_upon_militia"
        #Militia and idea here
	}
	ai_will_do = { factor = 300 }
}

shared_focus = {
    id = SOL_counter_terrorists
    x = 0
    y = 1
    relative_position_id = SOL_crisis_industrial_management

    cost = 4
    prerequisite = { focus = SOL_crisis_industrial_management }
    mutually_exclusive = { focus = SOL_draw_upon_militia }
    available = {
		eqs_has_civil_war = yes
	}
	allow_branch = {
		is_EQS_SOL = yes
	}
    bypass = {
		has_civil_war = no
		OR = {
			has_global_flag = equestrian_civil_war_ended
			has_global_flag = equestrian_com_civil_war_ended
			has_global_flag = equestrian_civil_war_daybreaker_ended
		}
		OR = {
			NOT = {
				country_exists = NLR
			}
			NLR = {
				is_subject = yes
			}
		}
		OR = {
			NOT = {
				country_exists = event_target:equestria
			}
			event_target:equestria = {
				is_subject = yes
			}
		}
		ROOT = {
			is_subject = no
		}
	}
    completion_reward = {
        log = "[GetDateText]: [Root.GetName]: Focus SOL_counter_terrorists"
        #Idea here
    }
    ai_will_do = { factor = 200 }
}

shared_focus = {
    id = SOL_spending_money
    x = 2
    y = 1
    relative_position_id = SOL_crisis_industrial_management

    cost = 5
    prerequisite = { focus = SOL_crisis_industrial_management }
    available = {
		eqs_has_civil_war = yes
	}
	allow_branch = {
		is_EQS_SOL = yes
	}
    bypass = {
		has_civil_war = no
		OR = {
			has_global_flag = equestrian_civil_war_ended
			has_global_flag = equestrian_com_civil_war_ended
			has_global_flag = equestrian_civil_war_daybreaker_ended
		}
		OR = {
			NOT = {
				country_exists = NLR
			}
			NLR = {
				is_subject = yes
			}
		}
		OR = {
			NOT = {
				country_exists = event_target:equestria
			}
			event_target:equestria = {
				is_subject = yes
			}
		}
		ROOT = {
			is_subject = no
		}
	}
	completion_reward = {
        log = "[GetDateText]: [Root.GetName]: Focus SOL_spending_money"
        #Idea here
	}
	ai_will_do = { factor = 150 }
}

shared_focus = {
    id = SOL_herald_doom
    x = 1
    y = 1
    relative_position_id = SOL_promise_swift_end

    cost = 5
    prerequisite = { focus = SOL_promise_swift_end }
    mutually_exclusive = { focus = SOL_take_everypony }
    available = {
		eqs_has_civil_war = yes
	}
	allow_branch = {
		is_EQS_SOL = yes
	}
    bypass = {
		has_civil_war = no
		OR = {
			has_global_flag = equestrian_civil_war_ended
			has_global_flag = equestrian_com_civil_war_ended
			has_global_flag = equestrian_civil_war_daybreaker_ended
		}
		OR = {
			NOT = {
				country_exists = NLR
			}
			NLR = {
				is_subject = yes
			}
		}
		OR = {
			NOT = {
				country_exists = event_target:equestria
			}
			event_target:equestria = {
				is_subject = yes
			}
		}
		ROOT = {
			is_subject = no
		}
	}
    completion_reward = {
        log = "[GetDateText]: [Root.GetName]: Focus SOL_herald_doom"
        ###Event of a pony preacher for Daybreaker using fear and cursing to fire up ponies to remain hateful of those who would "free" them from Daybreaker's enslavement
    }
    ai_will_do = { factor = 250 }
}

shared_focus = {
    id = SOL_take_everypony
    x = 0
    y = 1
    relative_position_id = SOL_draw_upon_militia

    cost = 5
    prerequisite = { focus = SOL_draw_upon_militia }
    mutually_exclusive = { focus = SOL_herald_doom }
    available = {
		eqs_has_civil_war = yes
	}
	allow_branch = {
		is_EQS_SOL = yes
	}
    bypass = {
		has_civil_war = no
		OR = {
			has_global_flag = equestrian_civil_war_ended
			has_global_flag = equestrian_com_civil_war_ended
			has_global_flag = equestrian_civil_war_daybreaker_ended
		}
		OR = {
			NOT = {
				country_exists = NLR
			}
			NLR = {
				is_subject = yes
			}
		}
		OR = {
			NOT = {
				country_exists = event_target:equestria
			}
			event_target:equestria = {
				is_subject = yes
			}
		}
		ROOT = {
			is_subject = no
		}
	}
	completion_reward = {
        log = "[GetDateText]: [Root.GetName]: Focus SOL_take_everypony"
        #Idea here
        ###Maybe event of a recruiter being forced to pass every single pony she sees, just so that they can get more bodies on the front, even though some of them are cowards, drunks, etc.
	}
	ai_will_do = { factor = 200 }
}

shared_focus = {
	id = SOL_reconquer_equestria
	icon = GFX_goal_solar_unite_equestria
	relative_position_id = SOL_take_everypony
	prerequisite = {
		focus = SOL_herald_doom
		focus = SOL_take_everypony
		focus = SOL_counter_terrorists
	}
	available = {
		is_subject = no
	}
	bypass = {
		all_of = {
			array = core_states
			var:v = {
				owner = {
					OR = {
						tag = ROOT
						is_subject_of = ROOT
						NOT = {
							is_eqs_civil_war_tag = yes
						}
					}
				}
			}
		}
	}
	will_lead_to_war_with = SCS
	will_lead_to_war_with = LSP
	will_lead_to_war_with = BUF
	will_lead_to_war_with = NLR
	will_lead_to_war_with = NMS
	will_lead_to_war_with = CES
	will_lead_to_war_with = VAN
	will_lead_to_war_with = BAL
	will_lead_to_war_with = JUN
	cost = 10
	ai_will_do = {
		factor = 50
		modifier = {
			factor = 0.1
			has_war = yes
		}
	}
	x = 0
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_reconquer_equestria"
		every_other_country = {
			limit = {
				is_eqs_civil_war_tag = yes
				NOT = {
					is_subject_of = ROOT
				}
				NOT = {
					has_war_with = ROOT
				}
				any_owned_state = {
					is_core_of = ROOT
				}
			}
			ROOT = {
				create_wargoal = {
					type = annex_everything
					target = PREV
				}
			}
		}
		if = {
			limit = {
				BUF = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
					}
					NOT = {
						has_war_with = ROOT
					}
				}
			}
			create_wargoal = {
				type = annex_everything
				target = BUF
			}
		}
	}
	search_filters = { FOCUS_FILTER_ANNEXATION }
}

###New Politics! We love Democracy###
shared_focus = {
    id = SOL_waking_dawn_star
    icon = GFX_goal_imperium_solem
    x = 10
    y = -1
    available = {
		is_subject = no
		has_DB_ruler = yes
	}
	cost = 2
	ai_will_do = {
		factor = 200
		modifier = {
            has_war_with = CHN
            factor = 3
		}
		modifier = {
            has_completed_focus = SOL_civil_war_measures
            factor = 3
		}
	}
	allow_branch = {
		is_EQS_SOL = yes
	}
	completion_reward = {
        ###Event of Daybreaker revealing herself to the Canterlot, and she is initially attacked by some of her own soldiers, who she deals with as she proclaims that she will lead the nation to greatness and destruction of the changelings; she is passive until she's shot at
		log = "[GetDateText]: [Root.GetName]: Focus SOL_waking_dawn_star"
		add_political_power = 200
		if = {
			limit = {
				is_faction_leader = no
			}
			create_faction = "SOL_faction"
		}
	}
}

shared_focus = {
    id = SOL_fire_ministers
    x = -2
    y = 1
    relative_position_id = SOL_waking_dawn_star

    cost = 2
    prerequisite = { focus = SOL_waking_dawn_star }
    available = {
        is_subject = no
        has_DB_ruler = yes
    }

    completion_reward = {
       log = "[GetDateText]: [Root.GetName]: Focus SOL_fire_ministers"
       ###Daybreaker secures most of the castle and is confronted by Fancy Pants, who she finds droll, and ends up sacking him, as well as most of her cabinet, and has them all arrested to avoid disruptions
    }
    ai_will_do = { factor = 200 }
}

shared_focus = {
    id = SOL_bluebloods_fealty
    x = 2
    y = 1
    relative_position_id = SOL_waking_dawn_star

    cost = 2
    prerequisite = { focus = SOL_waking_dawn_star }
    available = {
        is_subject = no
        has_DB_ruler = yes
    }

    completion_reward = {
        log = "[GetDateText]: [Root.GetName]: Focus SOL_bluebloods_fealty"
        ###Daybreaker gets hold of Blueblood in his war tent, and appears to him as a fiery demon, which makes him scared enough to basically prostrate himself to her, and swear that he will serve her
    }
    ai_will_do = { factor = 200 }
}

shared_focus = {
    id = SOL_appoint_committee
    x = -2
    y = 1
    relative_position_id = SOL_fire_ministers

    cost = 4
    prerequisite = { focus = SOL_fire_ministers }
    available = {
        is_subject = no
        has_DB_ruler = yes
    }

    completion_reward = {
        log = "[GetDateText]: [Root.GetName]: Focus SOL_appoint_committee"
        #Idea here
    }
    ai_will_do = { factor = 150 }
}

shared_focus = {
    id = SOL_answer_crimes
    x = 0
    y = 1
    relative_position_id = SOL_fire_ministers

    cost = 4
    prerequisite = { focus = SOL_fire_ministers }
    available = {
        is_subject = no
        has_DB_ruler = yes
    }

    completion_reward = {
        log = "[GetDateText]: [Root.GetName]: Focus SOL_answer_crimes"
        ###Event of soldiers being sent in to crack down on a large series of union protests and organized riots in Fillydelphia, after the Fillydelphian mayor also rebelled against Daybreaker, with casualties in the streets once they are attacked
    }
    ai_will_do = { factor = 200 }
}

shared_focus = {
    id = SOL_sweeping_chaff
    x = -1
    y = 1
    relative_position_id = SOL_bluebloods_fealty

    cost = 4
    prerequisite = { focus = SOL_bluebloods_fealty }
    available = {
        is_subject = no
        has_DB_ruler = yes
    }

    completion_reward = {
        log = "[GetDateText]: [Root.GetName]: Focus SOL_sweeping_chaff"
        ###Event overviewing how the loyal aspects of the military went in and started to purge some of the officers and rank and file, which has led to extreme fear within the remaining soldiers, as it should be
    }
    ai_will_do = { factor = 200 }
}

shared_focus = {
    id = SOL_first_feelers
    x = 0
    y = 1
    relative_position_id = SOL_appoint_committee

    cost = 5
    prerequisite = { focus = SOL_appoint_committee }
    available = {
        is_subject = no
        has_DB_ruler = yes
    }

    completion_reward = {
        log = "[GetDateText]: [Root.GetName]: Focus SOL_first_feelers"
        #Advisors here
    }
    ai_will_do = { factor = 150 }
}

shared_focus = {
    id = SOL_break_dissent
    x = 2
    y = 2
    relative_position_id = SOL_fire_ministers

    cost = 5
    prerequisite = { focus = SOL_fire_ministers }
    available = {
        is_subject = no
        has_DB_ruler = yes
    }

    completion_reward = {
        log = "[GetDateText]: [Root.GetName]: Focus SOL_break_dissent"
        ###Event of a news reporter who is on the air on the radio being barged into by some of the military, who are shutting down the station, as they have been determined to have been broadcasting "anti-Harmony propaganda" and are hauled away, with some final statements by a soldier
    }
    ai_will_do = { factor = 200 }
}

shared_focus = {
    id = SOL_plants_in_chaos
    x = 1
    y = 1
    relative_position_id = SOL_sweeping_chaff

    cost = 5
    prerequisite = { focus = SOL_sweeping_chaff }
    available = {
        is_subject = no
        has_DB_ruler = yes
    }

    completion_reward = {
        log = "[GetDateText]: [Root.GetName]: Focus SOL_plants_in_chaos"
        #Idea reduction here
        ###Maybe event of a plant in one of the suspect divisions coming across some truly damning evidence, and barely getting away with it to report
    }
    ai_will_do = { factor = 150 }
}

shared_focus = {
    id = SOL_personal_training
    x = 2
    y = 2
    relative_position_id = SOL_bluebloods_fealty

    cost = 5
    prerequisite = { focus = SOL_bluebloods_fealty }
    available = {
        is_subject = no
        has_DB_ruler = yes
    }

    completion_reward = {
        log = "[GetDateText]: [Root.GetName]: Focus SOL_personal_training"
        ###Daybreaker meets with a tired Blueblood, whom she has been training for the last day, the entire day, without her breaking a sweat, and he is finally starting to get some of the ideas behind what she is teaching him, despite the punishments for failure, which include improving his magic, awareness, and decision making
    }
    ai_will_do = { factor = 100 }
}

shared_focus = {
    id = SOL_reward_loyal
    x = -1
    y = 1
    relative_position_id = SOL_first_feelers

    cost = 5
    prerequisite = { focus = SOL_first_feelers }
    available = {
        is_subject = no
        has_DB_ruler = yes
    }

    completion_reward = {
        log = "[GetDateText]: [Root.GetName]: Focus SOL_reward_loyal"
        ###Daybreaker meets privately with Raven, who is still so busy she doesn't really care that Daybreaker is now leading versus Celestia, since she is still coordinating most of Daybreaker's life, and Daybreaker rewards her for her steadfast loyalty with a new position, although she will still need to be Daybreaker's assistant, which annoys Raven
    }
    ai_will_do = { factor = 100 }
}

shared_focus = {
    id = SOL_arbitrary_judgement
    x = 0
    y = 2
    relative_position_id = SOL_answer_crimes

    cost = 5
    prerequisite = { focus = SOL_answer_crimes }
    mutually_exclusive = { focus = SOL_solidify_merger }
    available = {
        is_subject = no
        has_DB_ruler = yes
    }

    completion_reward = {
        log = "[GetDateText]: [Root.GetName]: Focus SOL_arbitrary_judgement"
        #Reduce ideas
        ###Maybe event of Daybreaker going rapidfire through some different trials, all of which she proclaims as guilty, even though they want to plead their case
    }
    ai_will_do = { factor = 200 }
}

shared_focus = {
    id = SOL_solidify_merger
    x = 1
    y = 1
    relative_position_id = SOL_break_dissent

    cost = 5
    prerequisite = { focus = SOL_break_dissent }
    prerequisite = { focus = SOL_sweeping_chaff }
    mutually_exclusive = { focus = SOL_arbitrary_judgement }
    available = {
        is_subject = no
        has_DB_ruler = yes
    }

    completion_reward = {
        log = "[GetDateText]: [Root.GetName]: Focus SOL_solidify_merger"
        #Idea here
        #Reduce ideas
        ###Maybe event of a couple of mid-level pencil pushers trying to navigate how much more confusing the laws have become, while at the same time, seeing how effective they are, since a couple of ponies just get taken out and shot for breaking a law
    }
    ai_will_do = { factor = 300 }
}

shared_focus = {
    id = SOL_suns_son
    x = 0
    y = 1
    relative_position_id = SOL_personal_training

    cost = 5
    prerequisite = { focus = SOL_personal_training }
    available = {
        is_subject = no
        has_DB_ruler = yes
    }

    completion_reward = {
        log = "[GetDateText]: [Root.GetName]: Focus SOL_suns_son"
        ###Daybreaker oversees his last test, which is choosing between her, and choosing between one of his old suitors, of whom she found pictures in his quarters, and how it is potentially a distraction, and he ultimately chooses Daybreaker, which means, since she was also a staunch anti-Daybreaker pony, she gets to be executed by him, in cold blood
    }
    ai_will_do = { factor = 100 }
}

shared_focus = {
    id = SOL_judge_jury_executioner
    x = 1
    y = 2
    relative_position_id = SOL_first_feelers

    cost = 5
    prerequisite = { focus = SOL_first_feelers }
    prerequisite = { focus = SOL_arbitrary_judgement }
    available = {
        is_subject = no
        has_DB_ruler = yes
    }
    bypass = {
        AND = {
            OR = {
                NOT = { has_war_with = CHN }
                NOT = { country_exists = CHN }
            }
            OR = {
                NOT = { has_war_with = NLR }
                NOT = { country_exists = NLR }
            }
        }
    }

    completion_reward = {
        log = "[GetDateText]: [Root.GetName]: Focus SOL_judge_jury_executioner"
        #Idea here
    }
    ai_will_do = { factor = 150 }
}

shared_focus = {
    id = SOL_take_charge
    x = 2
    y = 1
    relative_position_id = SOL_arbitrary_judgement

    cost = 5
    prerequisite = {
        focus = SOL_arbitrary_judgement
        focus = SOL_solidify_merger
    }
    available = {
        is_subject = no
        has_DB_ruler = yes
    }

    completion_reward = {
        log = "[GetDateText]: [Root.GetName]: Focus SOL_take_charge"
        #Assign field marshal here
        ###Maybe short event of her suiting up for battle with the enemies of the Empire, as she realizes that her ponies are forever lost without her, and they will be guided like the sheep they are
    }
    ai_will_do = { factor = 500 }
}

shared_focus = {
    id = SOL_successor_question
    x = 1
    y = 2
    relative_position_id = SOL_plants_in_chaos

    cost = 5
    prerequisite = { focus = SOL_plants_in_chaos }
    prerequisite = { focus = SOL_solidify_merger }
    available = {
        is_subject = no
        has_DB_ruler = yes
    }

    completion_reward = {
        log = "[GetDateText]: [Root.GetName]: Focus SOL_successor_question"
        ###Event of discussing that there is the unlikely, and disliked, event that if Daybreaker is either wounded and indisposed, or killed, that there needs to be somepony who fills her role; there will only be Raven and Blueblood to choose from initially, but Sunrise and Dawnbreak open up when they become corrupted, if taken later
    }
    ai_will_do = { factor = 100 }
}

shared_focus = {
	id = SOL_Imperium_Solis
	icon = GFX_goal_imperium_solem
	available = {
		is_subject = no
		has_DB_ruler = yes
	}
	#bypass = {}
	cost = 7
	ai_will_do = {
		factor = 200
	}
	allow_branch = {
		is_EQS_SOL = yes
	}
	x = 0
	y = 1
	relative_position_id = SOL_take_charge
	prerequisite = { focus = SOL_take_charge }
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_Imperium_Solis"
		add_political_power = 200
		add_stability = 0.25
		effect_tooltip = {
			every_enemy_country = {
				add_ideas = SOL_enemy_debuff_idea
			}
		}
		hidden_effect = {
			every_enemy_country = {
				add_ideas = SOL_enemy_debuff_idea
			}
		}
		if = {
			limit = {
				is_faction_leader = no
			}
			create_faction = "SOL_faction"
		}
		set_cosmetic_tag = EQS_SOL
	}
	search_filters = { FOCUS_FILTER_ARMY_BONUS FOCUS_FILTER_STABILITY FOCUS_FILTER_POLITICAL }
}

###Revamped Paths###
shared_focus = {
	id = SOL_empress_mother
	icon = GFX_goal_daybreaker_mother
	prerequisite = {
		focus = SOL_Imperium_Solis
	}
	mutually_exclusive = {
		focus = SOL_empress_protector
		focus = SOL_god_empress
	}
	available = {
		is_subject = no
		has_DB_ruler = yes
	}
	select_effect = {
		#just a dummy thing to make it uncancellable
		set_temp_variable = {
			aaaaa = 1
		}
	}
	cost = 5
	ai_will_do = {
		factor = 1000
		modifier = {
			is_historical_focus_on = yes
			factor = 0
		}
	}
	relative_position_id = SOL_Imperium_Solis
	x = -13
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_empress_mother"
		add_country_leader_trait = daybreaker_mother
		custom_effect_tooltip = super_combat_abilities_tt
		hidden_effect = {
			EQS_princess_celestia = {
				set_portraits = {
					civilian = {
						large = "gfx/leaders/EQS/Daybreaker_canon.tga"
					}
					army = {
						large = "gfx/leaders/EQS/Daybreaker_canon.tga"
					}
				}
			}
		}
		country_event = {
			id = solarempire.45
			days = 7
		}
	}
}

shared_focus = {
	id = SOL_harmonys_exemplar
	x = -2
	y = 1
	relative_position_id = SOL_empress_mother

	cost = 5
	prerequisite = { focus = SOL_empress_mother }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_harmonys_exemplar"
		###Event of Daybreaker speaking of all the things that she has done for her ponies, and how that means she is the pure manifestation of Harmony, and that she will do all that she can to better everypony through her
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_Imperial_Corporation_Council
	icon = GFX_goal_solar_corporate_council
	prerequisite = {
		focus = SOL_empress_mother
	}
	mutually_exclusive = { focus = SOL_industrial_hoof }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}
	#bypass = {}
	cost = 5
	ai_will_do = {
		factor = 100
	}
	relative_position_id = SOL_empress_mother
	x = 4
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_Imperial_Corporation_Council"
		add_ideas = SOL_Imperial_Corporation_Council_idea
		add_tech_bonus = {
			name = industrial_bonus
			bonus = 0.5
			uses = 1
			category = industry
		}
	}
	search_filters = { FOCUS_FILTER_INDUSTRY FOCUS_FILTER_RESEARCH }
}

shared_focus = {
	id = SOL_industrial_hoof
	x = 6
	y = 1
	relative_position_id = SOL_empress_mother

	cost = 5
	prerequisite = { focus = SOL_empress_mother }
	mutually_exclusive = { focus = SOL_Imperial_Corporation_Council }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_industrial_hoof"
		#Idea here
	}
	ai_will_do = { factor = 120 }
}

shared_focus = {
	id = SOL_world_opportunity
	x = -2
	y = 1
	relative_position_id = SOL_harmonys_exemplar

	cost = 5
	prerequisite = { focus = SOL_harmonys_exemplar }
	mutually_exclusive = { focus = SOL_land_of_subjects }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_world_opportunity"
		#Idea here
	}
	ai_will_do = { factor = 70 }
}

shared_focus = {
	id = SOL_land_of_subjects
	x = 0
	y = 2
	relative_position_id = SOL_empress_mother

	cost = 5
	prerequisite = { focus = SOL_empress_mother }
	mutually_exclusive = { focus = SOL_world_opportunity }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_land_of_subjects"
		#Idea here
	}
	ai_will_do = { factor = 80 }
}

shared_focus = {
	id = SOL_bed_companies
	x = -1
	y = 1
	relative_position_id = SOL_Imperial_Corporation_Council

	cost = 5
	prerequisite = { focus = SOL_Imperial_Corporation_Council }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_bed_companies"
		#Idea here
		###Maybe event of Daybreaker basically being on a board meeting of some corporation that is in EQS, and pushing to the point that any of their interests become hers, because what she wants is obviously the best for everpony else, especially her
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_ponys_project
	x = 0
	y = 1
	relative_position_id = SOL_industrial_hoof

	cost = 5
	prerequisite = { focus = SOL_industrial_hoof }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_ponys_project"
		#Inform player about decisions here
		###Maybe event of Daybreaker proudly standing before an idea she had of something meant to honor her, or to show her glory, despite how it is draining the Empire's resources, but because she needs it, then she gets it, no matter what other ponies need
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_Maternal_Guidiance
	icon = GFX_goal_solar_maternal_guidance
	prerequisite = {
		focus = SOL_land_of_subjects
	}
	available = {
		is_subject = no
		has_DB_ruler = yes
	}
	cost = 5
	ai_will_do = {
		factor = 100
	}
	relative_position_id = SOL_land_of_subjects
	x = -1
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_Maternal_Guidiance"
		add_ideas = SOL_Maternal_Guidiance_idea
	}
	search_filters = { FOCUS_FILTER_ARMY_BONUS FOCUS_FILTER_WAR_SUPPORT FOCUS_FILTER_STABILITY FOCUS_FILTER_POLITICAL }
}

shared_focus = {
	id = SOL_empresss_bits
	x = -1
	y = 1
	relative_position_id = SOL_bed_companies

	cost = 4
	prerequisite = { focus = SOL_bed_companies }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_empresss_bits"
		two_random_arms_factory = yes
		two_random_industrial_complex = yes
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_innovative_corpo_grant
	x = 0
	y = 2
	relative_position_id = SOL_Imperial_Corporation_Council

	cost = 5
	prerequisite = {
		focus = SOL_Imperial_Corporation_Council
		focus = SOL_industrial_hoof
	}
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_innovative_corpo_grant"
		#Unlock MIO/concern here
	}
	ai_will_do = { factor = 70 }
}

shared_focus = {
	id = SOL_peace_through_war
	x = 0
	y = 2
	relative_position_id = SOL_world_opportunity

	cost = 6
	prerequisite = { focus = SOL_world_opportunity }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_peace_through_war"
		###Event of Daybreaker musing on the oddity that ponies, zebra, changelings, and the rest of the world seems obsessed with desiring peace, but they always fight for it, and she concludes she is the end all and be all of peace, because she will bring it to everypony, partially for her own amusement to see Chrysalis or others gobsmacked
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_Imperial_Investigative_Service
	icon = GFX_goal_solar_intelligence
	prerequisite = {
		focus = SOL_world_opportunity
		focus = SOL_Maternal_Guidiance
	}
	available = {
		is_subject = no
		has_DB_ruler = yes
	}
	cost = 5
	ai_will_do = {
		factor = 100
	}
	relative_position_id = SOL_Maternal_Guidiance
	x = -1
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_Imperial_Investigative_Service"
		###Event of one of the investigators of the IIS suddenly arriving in a business of a pony, and goes about inspecting and intimidating the pony because they believe they are anti-Order rebels, and that if they do not cooperate, the rest of their family or the like will suffer, to otherwise get them into compliance
		#Unlock Harmonic Resistance decisions
		unlock_decision_category_tooltip = SOL_dealing_with_resistance
		if = {
			limit = {
				has_dlc = "La Resistance"
			}
			add_ideas = SOL_Imperial_Investigative_Service_idea_lar
		}
		else = {
			add_ideas = SOL_Imperial_Investigative_Service_idea
		}
		if = {
			limit = {
				has_idea = changeling_spies
			}
			country_event = equestriachn.2
		}
	}
	search_filters = { FOCUS_FILTER_POLITICAL FOCUS_FILTER_RESISTANCE FOCUS_FILTER_STABILITY }
}

shared_focus = {
	id = SOL_imperial_betters
	x = 0
	y = 1
	relative_position_id = SOL_empresss_bits

	cost = 5
	prerequisite = { focus = SOL_empresss_bits }
	prerequisite = { focus = SOL_land_of_subjects }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_imperial_betters"
		#Idea here
	}
	ai_will_do = { factor = 100 }
}

shared_focus = {
	id = SOL_Harmony_through_Order
	icon = GFX_goal_solar_harmony_in_order
	prerequisite = {
		focus = SOL_innovative_corpo_grant
	}
	available = {
		is_subject = no
		has_DB_ruler = yes
	}
	cost = 5
	ai_will_do = {
		factor = 100
	}
	relative_position_id = SOL_innovative_corpo_grant
	x = 0
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_Harmony_through_Order"
		if = {
			limit = {
				has_idea = eqs_order_idea
			}
			swap_ideas = {
				add_idea = eqs_order_idea1
				remove_idea = eqs_order_idea
			}
		}
		else = {
			add_ideas = eqs_order_idea1
		}
	}
	search_filters = { FOCUS_FILTER_ARMY_BONUS FOCUS_FILTER_INDUSTRY FOCUS_FILTER_POLITICAL }
}

shared_focus = {
	id = SOL_sole_alicorn
	x = -1
	y = 1
	relative_position_id = SOL_Imperial_Investigative_Service

	cost = 5
	prerequisite = { focus = SOL_Imperial_Investigative_Service }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_sole_alicorn"
		###Event of a book burning of most of Canterlot's library, led by Twilight, as it is for destroying all evidence that Daybreaker is anything but the only true alicorn (Twilight is "only" a "demi-alicorn") and that she alone controls the day and night, no matter what ponies say about Luna; could include one pony being arrested when they protest destroying history
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_ultimate_leader
	x = 2
	y = 1
	relative_position_id = SOL_Imperial_Investigative_Service

	cost = 5
	prerequisite = {
		focus = SOL_Imperial_Investigative_Service
		focus = SOL_imperial_betters
	}
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_ultimate_leader"
		#Temp
		EQS_princess_celestia = {
			add_trait = { trait = hoof_of_iron }
		}
		###Event of Daybreaker effectively taking additional charge or bossing around even further some armies, and not allowing herself to be questioned at all, since she is the ultimate general in the Imperial Army
	}
	ai_will_do = { factor = 40 }
}

shared_focus = {
	id = SOL_magical_aggression
	x = 1
	y = 1
	relative_position_id = SOL_imperial_betters

	cost = 3
	prerequisite = { focus = SOL_imperial_betters }
	prerequisite = { focus = SOL_Harmony_through_Order }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_magical_aggression"
		add_tech_bonus = {
			name = magical_tech
			bonus = 1
			uses = 2
			category = magical_tech
		}
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_loyals_boon
	x = 0
	y = 1
	relative_position_id = SOL_ultimate_leader

	cost = 6
	prerequisite = { focus = SOL_ultimate_leader }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_loyals_boon"
		#Generals here
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_Firm_but_Fair
	icon = GFX_goal_solar_fair_but_just
	prerequisite = {
		focus = SOL_sole_alicorn
	}
	available = {
		is_subject = no
		has_DB_ruler = yes
	}
	cost = 5
	ai_will_do = {
		factor = 50
	}
	relative_position_id = SOL_sole_alicorn
	x = 1
	y = 2
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_Firm_but_Fair"
		add_ideas = SOL_Firm_but_Fair_idea
	}
	search_filters = { FOCUS_FILTER_MANPOWER FOCUS_FILTER_POLITICAL FOCUS_FILTER_ARMY_BONUS }
}

shared_focus = {
	id = SOL_train_in_excellence
	x = -1
	y = 2
	relative_position_id = SOL_magical_aggression

	cost = 5
	prerequisite = { focus = SOL_magical_aggression }
	mutually_exclusive = { focus = SOL_nopony_greater }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_train_in_excellence"
		#Idea here
	}
	ai_will_do = { factor = 40 }
}

shared_focus = {
	id = SOL_nopony_greater
	x = 1
	y = 2
	relative_position_id = SOL_magical_aggression

	cost = 5
	prerequisite = { focus = SOL_magical_aggression }
	mutually_exclusive = { focus = SOL_train_in_excellence }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_nopony_greater"
		#Idea here
		###Maybe short event about how nopony can hope to match the beauty, grace, strength, and intelligence of Daybreaker, so they are better off learning something that is befitting their lot in life, such as farming or groveling
	}
	ai_will_do = { factor = 100 }
}

shared_focus = {
	id = SOL_Empress_knows_Best
	icon = GFX_goal_solar_empress_knows_best
	prerequisite = {
		focus = SOL_Firm_but_Fair
		focus = SOL_train_in_excellence
		focus = SOL_nopony_greater
	}
	available = {
		is_subject = no
		has_DB_ruler = yes
	}
	cost = 10
	ai_will_do = {
		factor = 200
	}
	relative_position_id = SOL_Firm_but_Fair
	x = 2
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_Empress_knows_Best"
		add_stability = 0.15
		add_political_power = 200
		add_popularity = {
			ideology = fascism
			popularity = 0.1
		}
		###Maybe add a second trait of +0.03 fascism, +10% party stability, +0.1pp, -10% advisor cost and high command cost
		###Event again speaking from Daybreaker's perspective about how she will lead the ponies where they couldn't, because they are simply too simple-minded, stupid, or ignorant to know the truth of life, and that truth is that she is their light, their breath, and nothing can come of their lives except because she guides them; they are simple, but she is not, and she will make sure they are led, as an alicorn should do, and in return, she requires complete loyalty
		###Alternately an event of a pony coming before the Empress, seeking attention on an issue they've been having trouble with and she is incredibly condescending in her tone and implies that it's a waste of her time, and basically only helps once they genuflect enough upon her, and otherwise feed her ego
	}
	search_filters = { FOCUS_FILTER_POLITICAL FOCUS_FILTER_STABILITY }
}

shared_focus = {
	id = SOL_god_empress
	icon = GFX_goal_daybreaker_god
	prerequisite = {
		focus = SOL_Imperium_Solis
	}
	mutually_exclusive = {
		focus = SOL_empress_protector
		focus = SOL_empress_mother
	}
	available = {
		is_subject = no
		has_DB_ruler = yes
	}
	select_effect = {
		#just a dummy thing to make it uncancellable
		set_temp_variable = {
			aaaaa = 1
		}
	}
	cost = 5
	ai_will_do = {
		factor = 1200
	}
	relative_position_id = SOL_Imperium_Solis
	x = 0
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_god_empress"
		add_country_leader_trait = daybreaker_god
		custom_effect_tooltip = super_combat_abilities_tt
		hidden_effect = {
			set_country_leader_ideology = falangism
			if = {
				limit = {
					EQC = {
						is_subject_of = ROOT
						has_government = democratic
						NOT = {
							has_country_flag = EQC_dont_break_free_from_SOL
						}
					}
				}
				random_list = {
					60 = {
					}
					40 = {
						set_country_flag = EQC_dont_break_free_from_SOL
					}
				}
			}
			country_event = {
				id = solarempire.45
				days = 7
			}
		}
		set_faction_name = SOL_romanophile_faction
	}
}

shared_focus = {
	id = SOL_unveil_cultus
	x = 0
	y = 1
	relative_position_id = SOL_god_empress

	cost = 4
	prerequisite = { focus = SOL_god_empress }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_unveil_cultus"
		###Daybreaker hosts the first service of the now front and center Solaris Cultus, with the priestly duties done by Padlock Key, and she inaugarates the first service with a proclamation of her godhood, and that she will guide the world into a new era of light and peace
	}
	ai_will_do = { factor = 300 }
}

shared_focus = {
	id = SOL_solaris_adoratio
	x = -3
	y = 1
	relative_position_id = SOL_unveil_cultus

	cost = 4
	prerequisite = { focus = SOL_unveil_cultus }
	available = {
		has_global_flag = SOL_alpha_bitch_awoken
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_solaris_adoratio"
		###In a grand ceremony, where she proclaims some of the highlights of Sunset's life, she proclaims that Sunset shall be the head of the worship branch of the Solaris Cultus, answering only to Padlock Key, and annoints her in a branding of fire on her shoulder that she is forever Daybreaker's
	}
	ai_will_do = { factor = 200 }
}

shared_focus = {
	id = SOL_solaris_inquisitionis
	icon = GFX_goal_solar_inquisition
	x = 5
	y = 2
	relative_position_id = SOL_god_empress

	cost = 4
	prerequisite = { focus = SOL_god_empress }
	available = {
		has_global_flag = SOL_twilight_converted
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_solaris_inquisitionis"
		###Event of Sunset meeting privately with Daybreaker, who is pleased to offer Twilight an even better position than she had before, which will be the head inquisitor of the Solaris Inquisitionis, her holy inquisition, that will be used to keep Harmony and Order, which Twilight readily accepts, as she is worried that ponies don't understand Daybreaker's desires; it is close to a mother-daughter relationship kind of talk
	}
	ai_will_do = { factor = 250 }
}

shared_focus = {
	id = SOL_suffer_not_heresy
	x = -2
	y = 1
	relative_position_id = SOL_solaris_adoratio

	cost = 5
	prerequisite = { focus = SOL_solaris_adoratio }
	available = {
		has_global_flag = SOL_twilight_converted
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_suffer_not_heresy"
		###Follow some inquisitors as they barge into an office building that has been used for quite a while in Canterlot, declaring that every single pony has been declared a heretic after one was determined to work there, and taint the very labor they intend to do for the Empress, and since none of them reported on the heretic, they are all co-sinners, and will be cleansed with fire; one of the heads (Aurora) happily lights a pony on fire or the like as they try to flee, and sets the entire building on fire
	}
	ai_will_do = { factor = 100 }
}

shared_focus = {
	id = SOL_Mandatory_Temple_Attendance
	icon = GFX_goal_solar_church
	prerequisite = {
		focus = SOL_unveil_cultus
	}
	available = {
		is_subject = no
		has_DB_ruler = yes
	}
	#bypass = {}
	cost = 5
	ai_will_do = {
		factor = 100
	}
	relative_position_id = SOL_unveil_cultus
	x = 0
	y = 2
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_Mandatory_Temple_Attendance"
		###Possibly event of somepony trying to get out of attending a temple service, which a cult member pushes them very hard to attend, to the point of basically flagging a soldier to come and haul them off, if they refuse to go, because they are clearly flirting with heresy
		#swap_ideas = {
		#	add_idea = SOL_Solar_Cult_idea1
		#	remove_idea = SOL_Solar_Cult_idea
		#}
	}
	search_filters = { FOCUS_FILTER_MANPOWER FOCUS_FILTER_ARMY_BONUS FOCUS_FILTER_WAR_SUPPORT FOCUS_FILTER_STABILITY FOCUS_FILTER_INDUSTRY FOCUS_FILTER_POLITICAL FOCUS_FILTER_RESEARCH }
}

shared_focus = {
	id = SOL_inquisitionis_secondary_role
	x = 3
	y = 2
	relative_position_id = SOL_unveil_cultus

	cost = 5
	prerequisite = { focus = SOL_unveil_cultus }
	mutually_exclusive = { focus = SOL_inquisitionis_primary_role}
	available = {
		has_global_flag = SOL_twilight_converted
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_inquisitionis_secondary_role"
		#Idea here
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_inquisitionis_primary_role
	x = 0
	y = 1
	relative_position_id = SOL_solaris_inquisitionis

	cost = 5
	prerequisite = { focus = SOL_solaris_inquisitionis }
	mutually_exclusive = { focus = SOL_inquisitionis_secondary_role }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_inquisitionis_primary_role"
		#Idea here
	}
}

shared_focus = {
	id = SOL_solaris_speculatores
	x = 2
	y = 1
	relative_position_id = SOL_solaris_inquisitionis

	cost = 5
	prerequisite = {
		focus = SOL_solaris_inquisitionis
		focus = SOL_imperial_oversight_board
	}
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_solaris_speculatores"
		#Ideas here
	}
}

shared_focus = {
	id = SOL_Lux_et_Tenebris
	icon = GFX_goal_lux_in_tenebris
	prerequisite = {
		focus = SOL_suffer_not_heresy
		focus = SOL_innovative_corpo_grant
		focus = SOL_ponys_project
	}
	available = {
		is_subject = no
		has_DB_ruler = yes
	}
	cost = 6
	ai_will_do = {
		factor = 100
	}
	relative_position_id = SOL_suffer_not_heresy
	x = -2
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_Lux_et_Tenebris"
		if = {
			limit = {
				has_idea = unicorn_academy
			}
			swap_ideas = {
				add_idea = SOL_Lux_et_Tenebris_idea
				remove_idea = unicorn_academy
			}
		}
		else_if = {
			limit = {
				has_idea = unicorn_academy1
			}
			swap_ideas = {
				add_idea = SOL_Lux_et_Tenebris_idea1
				remove_idea = unicorn_academy1
			}
		}
		else_if = {
			limit = {
				has_idea = unicorn_academy2
			}
			swap_ideas = {
				add_idea = SOL_Lux_et_Tenebris_idea2
				remove_idea = unicorn_academy2
			}
		}
		else = {
			add_ideas = SOL_Lux_et_Tenebris_idea0
		}
		add_tech_bonus = {
			name = unicorn_bonus2
			bonus = 1
			ahead_reduction = 2
			category = magical_tech
		}
	}
	search_filters = { FOCUS_FILTER_MANPOWER FOCUS_FILTER_POLITICAL FOCUS_FILTER_RESEARCH }
}

shared_focus = {
	id = SOL_faith_honor_family
	x = 0
	y = 2
	relative_position_id = SOL_solaris_adoratio

	cost = 5
	prerequisite = { focus = SOL_solaris_adoratio }
	mutually_exclusive = { focus = SOL_Faith_Sacrifice_Worship }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_faith_honor_family"
		#Idea here
	}
	ai_will_do = { factor = 100 }
}

shared_focus = {
	id = SOL_Faith_Sacrifice_Worship
	icon = GFX_goal_solar_worship_sacrifice
	prerequisite = {
		focus = SOL_Mandatory_Temple_Attendance
	}
	mutually_exclusive = { focus = SOL_faith_honor_family }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}
	cost = 5
	ai_will_do = {
		factor = 75
	}
	relative_position_id = SOL_Mandatory_Temple_Attendance
	x = 0
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_Faith_Sacrifice_Worship"
		#swap_ideas = {
		#	add_idea = SOL_Solar_Cult_idea2
		#	remove_idea = SOL_Solar_Cult_idea1
		#}
		custom_effect_tooltip = SOL_Faith_Sacrifice_Worship_tp
		hidden_effect = {
			set_technology = {
				popup = no
				berserker_charge = 1
			}
		}
		hidden_effect = {
			set_rule = {
				can_use_kamikaze_pilots = yes
			}
			set_country_flag = kamikaze_flag
		}
		custom_effect_tooltip = kamikaze_focus_tooltip
	}
	search_filters = { FOCUS_FILTER_MANPOWER FOCUS_FILTER_ARMY_BONUS FOCUS_FILTER_WAR_SUPPORT FOCUS_FILTER_STABILITY FOCUS_FILTER_INDUSTRY FOCUS_FILTER_POLITICAL FOCUS_FILTER_RESEARCH }
}

shared_focus = {
	id = SOL_field_executions
	x = 1
	y = 1
	relative_position_id = SOL_inquisitionis_secondary_role

	cost = 6
	prerequisite = {
		focus = SOL_inquisitionis_secondary_role
		focus = SOL_inquisitionis_primary_role
	}
	available = {
		is_subject = no
		has_DB_ruler = yes
		any_owned_state = {
			NOT = { is_core_of = ROOT }
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_field_executions"
		###Event of an inquisitor (Quasar) being brought forward a suspected heretic, although there is nothing proven, and the pony tries to defend themselves, especially considering they don't recognize the rule of the Solar Empire since they are an occupier, and the inquisitor takes justice into her own hooves, as simply the accusing is enough, especially since they're supsicious already
	}
	ai_will_do = { factor = 40 }
}

shared_focus = {
	id = SOL_State_Personified
	icon = GFX_goal_state_personified
	prerequisite = { focus = SOL_inquisitionis_primary_role }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}
	cost = 5
	ai_will_do = {
		factor = 50
	}
	relative_position_id = SOL_inquisitionis_primary_role
	x = 1
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_State_Personified"
		add_stability = 0.15
		add_political_power = 250
		#Maybe change this to an idea of -10% advisor cost, -15% conscription cost
	}
	search_filters = { FOCUS_FILTER_POLITICAL FOCUS_FILTER_STABILITY }
}

shared_focus = {
	id = SOL_solar_games
	x = 1
	y = 1
	relative_position_id = SOL_Harmony_through_Order

	cost = 5
	prerequisite = {
		focus = SOL_Harmony_through_Order
		focus = SOL_Lux_et_Tenebris
	}
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_solar_games"
		###Event of a fighter in Daybreaker's new Solar Games fighting through different opponents, both animal and pony, just to entertain the crowd and Daybreaker, of whom they gain approval to execute an opponent, just like in Rome
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_raising_generations
	x = 0
	y = 1
	relative_position_id = SOL_faith_honor_family

	cost = 5
	prerequisite = { focus = SOL_faith_honor_family }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_raising_generations"
		###Event of a concerned mother or the like speaking ot another, and having an intervention with the Inquisitionis with one of the other parents of the community, because their child appears to be showing "concerning" beliefs and how they don't follow the Empress's teachings enough, and the other mother tries to argue against it, but her child is ultimately taken and the parent is arrested
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_better_than_best
	x = 0
	y = 1
	relative_position_id = SOL_Faith_Sacrifice_Worship

	cost = 5
	prerequisite = {
		focus = SOL_faith_honor_family
		focus = SOL_Faith_Sacrifice_Worship
	}
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_better_than_best"
		#Add stats to Daybreaker
		EQS_princess_celestia = {
			add_trait = { trait = ponykinds_goddess }
		}
		###Possibly event of Daybreaker taking a lead role in an attack of a heretic stronghold or the like, and she wants to test some of the new spells that she practiced as she needs to see what her soldiers are doing under her command, and also so she can enact some judgement of ponies herself, and she is basically a walking death machine, although it clear she is at her limits protecting herself
	}
	ai_will_do = { factor = 70 }
}

shared_focus = {
	id = SOL_sacricices_from_birth
	x = 0
	y = 2
	relative_position_id = SOL_inquisitionis_secondary_role

	cost = 5
	prerequisite = { focus = SOL_inquisitionis_secondary_role }
	prerequisite = { focus = SOL_Faith_Sacrifice_Worship }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_sacricices_from_birth"
		###Event of a parent trying to keep their foal when an inquisitor and a couple of soldiers come to them to take their foal to become another inquisitor from a very young age, and they are basically forced to give them up, since they were identified as probably a decently strong unicorn to serve Daybreaker, and they are threatened with being declared heretics if they don't give up the foal
	}
	ai_will_do = { factor = 100 }
}

shared_focus = {
	id = SOL_annual_purges
	x = -1
	y = 1
	relative_position_id = SOL_State_Personified

	cost = 5
	prerequisite = { focus = SOL_State_Personified }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_annual_purges"
		###Event of Quasar Pulse moving through the castle, being led by Sunrise Sparkle, to different rooms and dragging some nobles and government officials out, as even though they aren't overtly heretic, they aren't loyal enough, and every year, there will be some who will be purged, so to ensure that only the most loyal to Daybreaker are in government
	}
	ai_will_do = { factor = 40 }
}

shared_focus = {
	id = SOL_enlightened_education
	x = 0
	y = 2
	relative_position_id = SOL_Lux_et_Tenebris

	cost = 6
	prerequisite = { focus = SOL_Lux_et_Tenebris }
	mutually_exclusive = { focus = SOL_tradition_of_worship }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_enlightened_education"
		#Idea here
		###Perhaps an event of a few ponies in school being taught some obvious propaganda of Daybreaker, and questioning it, which leads to first strong whaps, and then actual beatings (they are adults), to ensure that they learn the "truth"
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_tradition_of_worship
	x = -2
	y = 2
	relative_position_id = SOL_faith_honor_family

	cost = 6
	prerequisite = { focus = SOL_faith_honor_family }
	mutually_exclusive = { focus = SOL_enlightened_education }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_tradition_of_worship"
		###Perhaps an event of the worship service of the Cultus, and some of the younger ponies asking questions of the priestess, and ultimately getting forced to agree, since they do see some of the faulty logic about Daybreaker being the center of everything
		#Idea here
	}
	ai_will_do = { factor = 100 }
}

shared_focus = {
	id = SOL_sacrifices_on_assembly_line
	x = 1
	y = 1
	relative_position_id = SOL_raising_generations

	cost = 5
	prerequisite = { focus = SOL_raising_generations }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_sacrifices_on_assembly_line"
		#Idea here
	}
	ai_will_do = { factor = 80 }
}

shared_focus = {
	id = SOL_fodder_troops
	x = -1
	y = 1
	relative_position_id = SOL_sacricices_from_birth

	cost = 5
	prerequisite = { focus = SOL_sacricices_from_birth }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_fodder_troops"
		#Idea here
	}
	ai_will_do = { factor = 80 }
}

shared_focus = {
	id = SOL_combine_church_and_state
	x = 0
	y = 2
	relative_position_id = SOL_State_Personified

	cost = 6
	prerequisite = { focus = SOL_State_Personified }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_combine_church_and_state"
		#Idea here
		###Perhaps an event of a number of ministers being replaced with members of the Adoratio, since they are no longer trusted, or an event of basically a theological matter being placed in government, and being voted on, while also declaring that anything else is heresy, through law, let alone religion
	}
	ai_will_do = { factor = 70 }
}

shared_focus = {
	id = SOL_honorable_guards
	x = 0
	y = 1
	relative_position_id = SOL_tradition_of_worship

	cost = 6
	prerequisite = {
		focus = SOL_tradition_of_worship
		focus = SOL_sacrifices_on_assembly_line
	}
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_honorable_guards"
		#Spawn 3 25-width, max xp infantry-arty divisions, one general of 4 4/4/2/3
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_generals_above_rest
	x = 0
	y = 1
	relative_position_id = SOL_better_than_best

	cost = 7
	prerequisite = { focus = SOL_better_than_best }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_generals_above_rest"
		#Generals here
		###Possibly short event of how there are skilled fighters in the Inquisitionis and the Adoratio who could also serve for the Empress, and that they will happily serve and die for her
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_monsters_of_earth
	x = 0
	y = 3
	relative_position_id = SOL_field_executions

	cost = 6
	prerequisite = {
		focus = SOL_fodder_troops
		focus = SOL_combine_church_and_state
	}
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_monsters_of_earth"
		#Spawn MIO or concern for Sanctum Arms
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_She_Who_Raises_the_Sun
	icon = GFX_goal_solar_the_one_who_raises_the_sun
	prerequisite = {
		focus = SOL_sacrifices_on_assembly_line
		focus = SOL_fodder_troops
	}
	available = {
		is_subject = no
		has_DB_ruler = yes
	}
	cost = 10
	ai_will_do = {
		factor = 200
	}
	relative_position_id = SOL_generals_above_rest
	x = 0
	y = 2
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_She_Who_Raises_the_Sun"
		add_stability = 0.1
		swap_ruler_traits = {
			add = daybreaker_god2
			remove = daybreaker_god
		}
	}
	search_filters = { FOCUS_FILTER_STABILITY }
}

shared_focus = {
	id = SOL_empress_protector
	icon = GFX_goal_daybreaker_protector
	prerequisite = {
		focus = SOL_Imperium_Solis
	}
	mutually_exclusive = {
		focus = SOL_empress_mother
		focus = SOL_god_empress
	}
	available = {
		is_subject = no
		has_DB_ruler = yes
	}
	select_effect = {
		#just a dummy thing to make it uncancellable
		set_temp_variable = {
			aaaaa = 1
		}
	}
	cost = 5
	ai_will_do = {
		factor = 800
		modifier = {
			is_historical_focus_on = yes
			factor = 0
		}
	}
	relative_position_id = SOL_Imperium_Solis
	x = 13
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_empress_protector"
		add_country_leader_trait = daybreaker_protector
		custom_effect_tooltip = super_combat_abilities_tt
		hidden_effect = {
			EQS_princess_celestia = {
				set_portraits = {
					civilian = {
						large = "gfx/leaders/EQS/Daybreaker_savior.tga"
					}
					army = {
						large = "gfx/leaders/EQS/Daybreaker_savior.tga"
					}
				}
			}
			if = {
				limit = {
					EQC = {
						is_subject_of = ROOT
						has_government = democratic
						has_country_flag = EQC_dont_break_free_from_SOL
					}
				}
				random_list = {
					70 = {
					}
					30 = {
						clr_country_flag = EQC_dont_break_free_from_SOL
					}
				}
			}
			country_event = {
				id = solarempire.45
				days = 7
			}
		}
	}
}

shared_focus = {
	id = SOL_law_of_iron
	x = -2
	y = 1
	relative_position_id = SOL_empress_protector

	cost = 4
	prerequisite = { focus = SOL_empress_protector }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_release_slow_witted"
		###Event of Daybreaker going into a government official's office, after visiting others, and coldly sacking him from his duty, despite the apparent good he already did, because he did not help with Equestria's rearmament, and was clearly acting against her ponies' interests
		###Event of a new set of laws tabulated by Daybreaker, signed by Daybreaker, and approved by her government, of various punishments that ponies will expect for even some minor crimes. All results are meant for ponies to help others, for example extensive community service, free labor in construction or factories, etc. Excessively harsh, but beneficial, since she wants to protect her ponies
	}
	ai_will_do = { factor = 100 }
}

shared_focus = {
	id = SOL_required_productivity
	x = 0
	y = 1
	relative_position_id = SOL_empress_protector

	cost = 5
	prerequisite = { focus = SOL_empress_protector }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_required_productivity"
		###Follow a clerk as he tries to navigate some of the new regulations that have been put in place, all of which, if not followed, will lead to some form of imprisonment or the like, as it is clearly anti-Order activities, and he just grows more and more confused as time goes on
		###Follow a government official or noble as he goes to one of his weekly meetings and they instantly start to worry about what they can even say they did to further the benefit of the Empire by the end of it, since they need to have something that will improve ponies' lives, at least in the eyes of Daybreaker, and one eventually suggests some kind of wartime reform regarding social welfare and propaganda, which they agree to, even if it's needlessly extreme in its first iteration, which gets approved
	}
	ai_will_do = { factor = 80 }
}

shared_focus = {
	id = SOL_imperial_oversight_board
	x = -2
	y = 1
	relative_position_id = SOL_law_of_iron

	cost = 4
	prerequisite = { focus = SOL_law_of_iron }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_imperial_oversight_board"
		add_tech_bonus = {
			name = industrial_bonus
			uses = 1
			bonus = 0.75
			ahead_reduction = 0.5
			category = industry
		}
		add_tech_bonus = {
			name = construction_bonus
			uses = 1
			bonus = 0.75
			ahead_reduction = 0.5
			category = construction_tech
		}
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_imperial_bureaucracy
	icon = GFX_goal_solar_buraucracy
	prerequisite = {
		focus = SOL_required_productivity
	}
	available = {
		is_subject = no
		has_DB_ruler = yes
	}
	cost = 5
	ai_will_do = {
		factor = 100
	}
	relative_position_id = SOL_required_productivity
	x = 0
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_imperial_bureaucracy"
		add_ideas = SOL_imperial_bureaucracy_idea
	}
	search_filters = { FOCUS_FILTER_POLITICAL }
}

shared_focus = {
	id = SOL_defence_of_empire_act
	icon = GFX_goal_solar_defence_of_the_empire
	prerequisite = {
		focus = SOL_required_productivity
	}
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	cost = 5
	ai_will_do = {
		factor = 100
	}
	relative_position_id = SOL_required_productivity
	x = 2
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_defence_of_empire_act"
		add_ideas = SOL_defence_of_empire_act_idea
		###Event of Daybreaker defending herself about her single-hoofed Defense of the Empire Act (GT Defensio Luris Imperii), which they rightly say will bring about many lost lives from thsoe required to join the military, but she shames and intimidates them all into agreeing, eventually just doing it by herself anyway, as her ponies are meant to be safe, which this will do, no matter how many lives lost
	}
	search_filters = { FOCUS_FILTER_ARMY_BONUS FOCUS_FILTER_MANPOWER FOCUS_FILTER_INDUSTRY FOCUS_FILTER_ANNEXATION }
}

shared_focus = {
	id = SOL_expand_imperial_arsenals
	x = 0
	y = 1
	relative_position_id = SOL_imperial_oversight_board

	cost = 5
	prerequisite = { focus = SOL_imperial_oversight_board }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_imperial_bureaucracy"
		#Unlock MIO/concern
	}
	ai_will_do = { factor = 80 }
}

shared_focus = {
	id = SOL_government_of_one
	x = 0
	y = 2
	relative_position_id = SOL_law_of_iron

	cost = 5
	prerequisite = { focus = SOL_law_of_iron }
	mutually_exclusive = { focus = SOL_honest_cabinet }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_government_of_one"
		#Idea here
		#Loc should speak about how there has been improvement, but government is needlessly slow, and simply getting out of Daybreaker's way will be the best course of action for improving ponies' lives; let her live as a benevolent dictator
	}
	ai_will_do = { factor = 150 }
}

shared_focus = {
	id = SOL_honest_cabinet
	x = 0
	y = 1
	relative_position_id = SOL_imperial_bureaucracy

	cost = 5
	prerequisite = { focus = SOL_law_of_iron }
	mutually_exclusive = { focus = SOL_government_of_one }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_honest_cabinet"
		#Idea here
	}
	ai_will_do = { factor = 100 }
}

shared_focus = {
	id = SOL_forgiveness_available
	x = 1
	y = 1
	relative_position_id = SOL_solaris_speculatores

	cost = 5
	prerequisite = { focus = SOL_solaris_speculatores }
	prerequisite = { focus = SOL_expand_imperial_arsenals }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_forgiveness_available"
		add_political_power = 200
		add_popularity = {
			ideology = fascism
			popularity = -0.1
		}
		add_stability = -0.05
	}
	ai_will_do = { factor = 40 }
}

shared_focus = {
	id = SOL_legion_of_labor
	icon = GFX_goal_solar_legion_of_labour
	prerequisite = {
		focus = SOL_honest_cabinet
		focus = SOL_government_of_one
	}
	available = {
		is_subject = no
		has_DB_ruler = yes
	}
	cost = 5
	ai_will_do = {
		factor = 100
	}
	relative_position_id = SOL_government_of_one
	x = 1
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_legion_of_labor"
		add_ideas = SOL_legion_of_labor_idea
	}
	search_filters = { FOCUS_FILTER_INDUSTRY FOCUS_FILTER_POLITICAL }
}

shared_focus = {
	id = SOL_walks_of_life
	x = -1
	y = 2
	relative_position_id = SOL_defence_of_empire_act

	cost = 6
	prerequisite = { focus = SOL_defence_of_empire_act }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_walks_of_life"
		###Event of some solarist propaganda about how it is the best duty that one can do to protect others, including laying down one's life in following after Celestia's example of surrendering to Daybreaker so that what needed to be done was done, which others need to mimic to achieve victory against the threats to ponykind
	}
	ai_will_do = { factor = 80 }
}

shared_focus = {
	id = SOL_utilize_element_bearers
	x = 0
	y = 1
	relative_position_id = SOL_forgiveness_available

	cost = 15
	prerequisite = { focus = SOL_forgiveness_available }
	mutually_exclusive = { focus = SOL_reclaim_elements_mantle }
	available = {
		is_subject = no
		has_DB_ruler = yes
		has_country_flag = SOL_captured_element_bearers
	}

	select_effect = {
		#Temp variable fun
		set_temp_variable = { eee = 1 }
		#Have hidden effects for each event
	}
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_utilize_element_bearers"
		###Series of events for corrupting the other Element bearers, or at least making them work for Daybreaker, with specific promises for each bearer, that either plays to their fears, egos, or lusts
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_reclaim_elements_mantle
	x = 1
	y = 2
	relative_position_id = SOL_expand_imperial_arsenals

	cost = 8
	prerequisite = { focus = SOL_expand_imperial_arsenals }
	mutually_exclusive = { focus = SOL_utilize_element_bearers }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_reclaim_elements_mantle"
		###Event of Daybreaker going before a crowd of ponies, as she claims she has reclaimed the Elements of Harmony for herself, and will use them to defend ponies in the face of danger the world over, although they are merely well-crafted forgeries, since she was actually injured when she tried to take the Elements, and has left some faint scarring on her, which they don't notice; she uses her magic to make it appear she is using them by casting a rainbow laser ala S1/S2
	}
	ai_will_do = { factor = 100 }
}

shared_focus = {
	id = SOL_Strong_Imperial_Government
	icon = GFX_goal_solar_strong_government
	prerequisite = {
		focus = SOL_legion_of_labor
	}
	available = {
		is_subject = no
		has_DB_ruler = yes
	}
	cost = 5
	ai_will_do = {
		factor = 80
	}
	relative_position_id = SOL_legion_of_labor
	x = 0
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_Strong_Imperial_Government"
		#Idea here
	}
	search_filters = { FOCUS_FILTER_POLITICAL }
}

shared_focus = {
	id = SOL_ponykinds_savior
	x = 0
	y = 1
	relative_position_id = SOL_walks_of_life

	cost = 6
	prerequisite = { focus = SOL_walks_of_life }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_ponykinds_savior"
		#Temp
		EQS_princess_celestia = {
			add_trait = { trait = savior_of_ponykind }
		}
		###Event of a soldier or two being pinned down by enemy fire, and there is a bit of radio chatter that "she" is gone, and shortly Daybreaker breaks through a barricade or the like to blast most of the attackers, since she was nearby to begin with, and is doing all that she can to protect her ponies
	}
	ai_will_do = { factor = 100 }
}

shared_focus = {
	id = SOL_ultimate_sacrifice
	x = 1
	y = 3
	relative_position_id = SOL_defence_of_empire_act

	cost = 5
	prerequisite = { focus = SOL_defence_of_empire_act }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_ultimate_sacrifice"
		###Event of a pony going about their rather drab day and then suddenly being pressed by some pressgangs that are going about his town to get more ponies to help defend the old and the weak and the sick, but he tries to get out of it by pretending to be lame or the like, but they still take him, since they can tell he's faking
	}
	ai_will_do = { factor = 80 }
}

shared_focus = {
	id = SOL_magics_heart
	x = 0
	y = 1
	relative_position_id = SOL_reclaim_elements_mantle

	cost = 6
	prerequisite = {
		focus = SOL_utilize_element_bearers
		focus = SOL_reclaim_elements_mantle
	}
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_magics_heart"
		###Event of Daybreaker meeting with Twilight, and with Sunset as backup, to press her to lead troops into battle as well, as Twilight argues that she is too busy with her research and her work on keeping anti-Order activities at bay for her to do so, but she's eventually convinced, and later Daybreaker feels some guilt, given she's more viscious than either of them in combat
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_encourage_tattling
	x = 1
	y = 1
	relative_position_id = SOL_Strong_Imperial_Government

	cost = 5
	prerequisite = { focus = SOL_Strong_Imperial_Government }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_encourage_tattling"
		#Idea here
		unlock_decision_category_tooltip = SOL_dealing_with_resistance
	}
	ai_will_do = { factor = 150 }
}

shared_focus = {
	id = SOL_not_own_mistress
	x = 0
	y = 1
	relative_position_id = SOL_ultimate_sacrifice

	cost = 5
	prerequisite = { focus = SOL_ponykinds_savior }
	mutually_exclusive = { focus = SOL_free_minds }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_not_own_mistress"
		#Idea here
		###Maybe event of somepony in a school wanting to go into one avenue of service, but they are dictated by a single test result difference to go into a completely opposite avenue, or the like, or otherwise the teachers determining where they go, instead of the pony
	}
	ai_will_do = { factor = 100 }
}

shared_focus = {
	id = SOL_free_minds
	x = 2
	y = 1
	relative_position_id = SOL_ultimate_sacrifice

	cost = 5
	prerequisite = { focus = SOL_ultimate_sacrifice }
	mutually_exclusive = { focus = SOL_not_own_mistress }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_free_minds"
		#Idea here
		###Maybe event of a pony who is accused of not being orderly enough being grilled, then released, because they aren't clearly anti-order, but are warned to be careful, which makes them a bit perturbed, but they carry on anyway
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_help_themselves
	x = 0
	y = 1
	relative_position_id = SOL_encourage_tattling

	cost = 5
	prerequisite = { focus = SOL_encourage_tattling }
	mutually_exclusive = { focus = SOL_Protect_the_Weak }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_help_themselves"
		#Idea here
		###Maybe have an event of a pony who is running low on cash or the like, or is homeless, going to a shelter, where he is helped, but at the same time, required to help others as he can do it as a way of improving himself, and eventually hopefully getting a job so he won't be a leech
	}
	ai_will_do = { factor = 100 }
}

shared_focus = {
	id = SOL_Protect_the_Weak
	icon = GFX_goal_solar_care_for_weak
	prerequisite = {
		focus = SOL_not_own_mistress
		focus = SOL_free_minds
	}
	mutually_exclusive = { focus = SOL_help_themselves }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}
	cost = 5
	ai_will_do = {
		factor = 120
	}
	relative_position_id = SOL_not_own_mistress
	x = 1
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_Protect_the_Weak"
		add_ideas = SOL_Protect_the_Weak_idea
		###Event of somepony is a bit more well off than others in Fillydelphia being broken into by soldiers of the Imperial Army and while he tries to figure out what is going on, most of his belongings are taken, as they will be used to help other ponies who are more needy than him, but they leave enough for him to survive, if significantly poorer
	}
	search_filters = { FOCUS_FILTER_ARMY_BONUS FOCUS_FILTER_INDUSTRY FOCUS_FILTER_STABILITY FOCUS_FILTER_WAR_SUPPORT }
}

shared_focus = {
	id = SOL_Freedom_from_Fear
	icon = GFX_goal_solar_phoenix_defence
	prerequisite = {
		focus = SOL_help_themselves
		focus = SOL_Protect_the_Weak
	}
	available = {
		is_subject = no
		has_DB_ruler = yes
	}
	cost = 10
	ai_will_do = {
		factor = 100
	}
	relative_position_id = SOL_help_themselves
	x = -1
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_Freedom_from_Fear"
		add_political_power = 70
		add_stability = 0.1
		add_ideas = SOL_Freedom_from_Fear_idea
		###Event of Daybreaker learning from her officials of a murder in the nobility or the like, and she goes on a small hunt for who she believes to be the murderer, and takes justice into her own hooves as the protector of all ponies
	}
	search_filters = { FOCUS_FILTER_POLITICAL FOCUS_FILTER_RESISTANCE FOCUS_FILTER_WAR_SUPPORT FOCUS_FILTER_STABILITY }
}

###Conquest time###
shared_focus = {
	id = SOL_reconquer_cry
	icon = GFX_goal_solar_attack_cry
	prerequisite = {
		focus = SOL_She_Who_Raises_the_Sun
		focus = SOL_Empress_knows_Best
		focus = SOL_Freedom_from_Fear
	}
	available = {
		is_subject = no
		if = {
			limit = {
				NOT = {
					has_country_flag = sol_wartime_change
				}
			}
			has_completed_focus = SOL_reconquer_equestria
		}
	}
	bypass = {
		CRY = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
	}
	will_lead_to_war_with = CRY
	cost = 10
	ai_will_do = {
		factor = 35
		modifier = {
			factor = 0.1
			has_war = yes
		}
	}
	relative_position_id = SOL_She_Who_Raises_the_Sun
	x = -8
	y = 2
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_reconquer_cry"
		create_wargoal = {
			type = annex_everything
			target = CRY
		}
	}
	search_filters = { FOCUS_FILTER_ANNEXATION }
}

shared_focus = {
	id = SOL_pan_pony_empire
	x = -2
	y = 2
	relative_position_id = SOL_She_Who_Raises_the_Sun

	cost = 6
	prerequisite = {
		focus = SOL_Empress_knows_Best
		focus = SOL_She_Who_Raises_the_Sun
		focus = SOL_Freedom_from_Fear
	}
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_pan_pony_empire"
		#Idea here
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_alicorn_weapons
	x = 2
	y = 2
	relative_position_id = SOL_She_Who_Raises_the_Sun

	cost = 8
	prerequisite = {
		focus = SOL_Empress_knows_Best
		focus = SOL_She_Who_Raises_the_Sun
		focus = SOL_Freedom_from_Fear
	}
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_alicorn_weapons"
		#Unlock decisions here
		unlock_decision_category_tooltip = EQS_wunderwaffen_category
		set_country_flag = SOL_wunderwaffen_unlocked
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_reconquer_stg
	icon = GFX_goal_solar_attack_stg
	prerequisite = {
		focus = SOL_She_Who_Raises_the_Sun
		focus = SOL_Empress_knows_Best
		focus = SOL_Freedom_from_Fear
	}
	available = {
		is_subject = no
		if = {
			limit = {
				NOT = {
					has_country_flag = sol_wartime_change
				}
			}
			has_completed_focus = SOL_reconquer_equestria
		}
	}
	bypass = {
		STG = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
		STL = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
	}
	will_lead_to_war_with = STG
	will_lead_to_war_with = STL
	cost = 10
	ai_will_do = {
		factor = 35
		modifier = {
			factor = 0.1
			has_war = yes
		}
	}
	relative_position_id = SOL_She_Who_Raises_the_Sun
	x = 8
	y = 2
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_reconquer_stg"
		if = {
			limit = {
				country_exists = STG
			}
			create_wargoal = {
				type = annex_everything
				target = STG
			}
		}
		if = {
			limit = {
				country_exists = STL
			}
			create_wargoal = {
				type = annex_everything
				target = STL
			}
		}
	}
	search_filters = { FOCUS_FILTER_ANNEXATION }
}

shared_focus = {
	id = SOL_core_cry
	icon = GFX_goal_solar_break_cry
	prerequisite = {
		focus = SOL_reconquer_cry
	}
	available = {
		CRY = {
			custom_trigger_tooltip = {
				tooltip = owns_all_passable_cores_original_subject_tt
				hidden_trigger = {
					all_of = {
						array = CRY.original_cores
						var:v = {
							OR = {
								impassable = yes
								is_owned_by = ROOT
								owner = {
									is_subject_of = ROOT
								}
							}
						}
					}
				}
			}
		}
	}
	cost = 15
	ai_will_do = {
		factor = 35
	}
	relative_position_id = SOL_reconquer_cry
	x = -1
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_core_cry"
		every_state = {
			limit = {
				# we could and should iterate over an array, but that would give us no tooltip
				is_in_array = {
					array = CRY.original_cores
					value = THIS
				}
			}
			add_core_of = ROOT
		}
	}
	search_filters = { FOCUS_FILTER_ANNEXATION }
}

shared_focus = {
	id = SOL_core_stg
	icon = GFX_goal_solar_break_stg
	prerequisite = {
		focus = SOL_reconquer_stg
	}
	available = {
		STG = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
		STL = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}
	cost = 15
	ai_will_do = {
		factor = 35
	}
	relative_position_id = SOL_reconquer_stg
	x = 1
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_core_stg"
		every_state = {
			limit = {
				OR = {
					is_core_of = STG
					is_core_of = STL
				}
			}
			add_core_of = ROOT
		}
	}
	search_filters = { FOCUS_FILTER_ANNEXATION }
}

shared_focus = {
	id = SOL_industrial_heartland
	x = 0
	y = 2
	relative_position_id = SOL_core_stg

	cost = 15
	prerequisite = { focus = SOL_core_stg }
	mutually_exclusive = { focus = SOL_expand_reach }
	available = {
		is_subject = no
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_core_stg"
		153 = {
			add_resource = {
				type = steel
				amount = 20
			}
			add_resource = {
				type = tungsten
				amount = 15
			}
			add_extra_state_shared_building_slots = 2
			add_building_construction = {
				type = industrial_complex
				level = 2
				instant_build = yes
			}
		}
		166 = {
			add_resource = {
				type = steel
				amount = 10
			}
			add_extra_state_shared_building_slots = 2
			add_building_construction = {
				type = industrial_complex
				level = 2
				instant_build = yes
			}
		}
		57 = {
			add_resource = {
				type = steel
				amount = 10
			}
			add_resource = {
				type = tungsten
				amount = 15
			}
			add_extra_state_shared_building_slots = 2
			add_building_construction = {
				type = industrial_complex
				level = 2
				instant_build = yes
			}
		}
		332 = {
			add_extra_state_shared_building_slots = 2
			add_building_construction = {
				type = industrial_complex
				level = 2
				instant_build = yes
			}
		}
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_conquer_drg
	icon = GFX_goal_solar_attack_drg
	prerequisite = {
		focus = SOL_reconquer_stg
		focus = SOL_reconquer_cry
	}
	available = {
		is_subject = no
	}
	bypass = {
		DRG = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
	}
	will_lead_to_war_with = DRG
	cost = 10
	ai_will_do = {
		factor = 35
	}
	relative_position_id = SOL_reconquer_cry
	x = -3
	y = 2
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_conquer_drg"
		create_wargoal = {
			type = annex_everything
			target = DRG
		}
	}
	search_filters = { FOCUS_FILTER_ANNEXATION }
}

shared_focus = {
	id = SOL_evict_hoarders
	icon = GFX_goal_solar_attack_drg
	x = -1
	y = 1
	relative_position_id = SOL_conquer_drg

	cost = 7
	prerequisite = { focus = SOL_conquer_drg }
	mutually_exclusive = { focus = SOL_elite_laborers }
	available = {
		is_subject = no
		DRG = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_evict_hoarders"
		###Event of some Solar troops going into the dragon islands, where Ember has managed to hole up in one area with some dragons, and them fighting through the dragons to get them out of the isles, or kill them in the process, and there is one combat with Ember, which eventually overpowers her, since she's only one dragon
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_elite_laborers
	icon = GFX_goal_solar_attack_drg
	x = 1
	y = 1
	relative_position_id = SOL_conquer_drg

	cost = 5
	prerequisite = { focus = SOL_conquer_drg }
	mutually_exclusive = { focus = SOL_evict_hoarders }
	available = {
		is_subject = no
		DRG = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_elite_laborers"
		###Event of a dragon trying to escape their prison camp, where they are being used to mine crystals for Daybreaker's forces, and ultimately being captured and executed, since they're clearly of no use any longer
	}
	ai_will_do = { factor = 35 }
}

shared_focus = {
	id = SOL_conquer_chn
	icon = GFX_goal_solar_attack_chn
	prerequisite = {
		focus = SOL_reconquer_stg
		focus = SOL_reconquer_cry
	}
	available = {
		is_subject = no
	}
	bypass = {
		CHN = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
		CCN = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
	}
	will_lead_to_war_with = CHN
	will_lead_to_war_with = CCN
	cost = 10
	ai_will_do = {
		factor = 35
		modifier = {
			factor = 0.1
			has_war = yes
		}
	}
	relative_position_id = SOL_reconquer_cry
	x = 5
	y = 2
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_conquer_chn"
		if = {
			limit = {
				country_exists = CHN
			}
			create_wargoal = {
				type = annex_everything
				target = CHN
			}
		}
		if = {
			limit = {
				country_exists = CCN
			}
			create_wargoal = {
				type = annex_everything
				target = CCN
			}
		}
	}
	search_filters = { FOCUS_FILTER_ANNEXATION }
}

shared_focus = {
	id = SOL_put_in_place
	x = -1
	y = 1
	relative_position_id = SOL_conquer_chn

	cost = 5
	prerequisite = { focus = SOL_conquer_chn }
	available = {
		is_subject = no
		CHN = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
		CCN = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_conquer_chn"
		###Event of some changelings being rounded up or the like to be tabulated, then put to work as different chattel slaves, as punishment for their plans for ever toppling the Solar Empire, and they are also deprived of any and all emotions, which means they must subsist off normal food, which is even worse for them
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_deserved_humiliation
	x = 1
	y = 1
	relative_position_id = SOL_conquer_chn

	cost = 5
	prerequisite = { focus = SOL_conquer_chn }
	available = {
		is_subject = no
		#259 = { is_owned_by = ROOT }
		#309 = { is_owned_by = ROOT }
		#262 = { is_owned_by = ROOT }
		#252 = { is_owned_by = ROOT }
		CHN = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
		CCN = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_deserved_humiliation"
		###Daybreaker gathers the various queens of the main hives of the Changeling Lands, to give them a short, mocking speech about how they threw in their lot with the wrong changeling, and that she will see all that they held dear destroyed, as she uses magic to showcase what is happening to each the different hives as punishment, which involves much destruction
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_final_insult
	x = 0
	y = 2
	relative_position_id = SOL_conquer_chn

	cost = 5
	prerequisite = { focus = SOL_conquer_chn }
	available = {
		is_subject = no
		#251 = { is_owned_by = ROOT }
		CHN = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
		CCN = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_final_insult"
		###Daybreaker meets with Chrysalis, who is imprisoned like an animal, which Daybreaker claims she is, and Daybreaker has a one-sided, and incredibly furious and aggressive conversation about how Chrysalis will be treated, and what her punishment will be for defying her, although she at the same time thanks Chrysalis for helping motivate her ponies to follow her, as an ironic twist
	}
	ai_will_do = { factor = 70 }
}

shared_focus = {
	id = SOL_establish_worker_hives
	x = 0
	y = 2
	relative_position_id = SOL_put_in_place

	cost = 7
	prerequisite = { focus = SOL_put_in_place }
	mutually_exclusive = { focus = SOL_keep_pets }
	available = {
		is_subject = no
		CHN = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
		CCN = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_establish_worker_hives"
		#Idea here
	}
	ai_will_do = { factor = 70 }
}

shared_focus = {
	id = SOL_keep_pets
	x = 0
	y = 2
	relative_position_id = SOL_deserved_humiliation

	cost = 7
	prerequisite = { focus = SOL_deserved_humiliation }
	mutually_exclusive = { focus = SOL_establish_worker_hives }
	available = {
		is_subject = no
		CHN = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
		CCN = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_keep_pets"
		#Idea here
		add_stability = -0.15
	}
}

shared_focus = {
	id = SOL_lebensraum
	x = 0
	y = 2
	relative_position_id = SOL_final_insult

	cost = 10
	prerequisite = { focus = SOL_final_insult }
	prerequisite = {
		focus = SOL_establish_worker_hives
		focus = SOL_keep_pets
	}
	available = {
		is_subject = no
		CHN = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
		CCN = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
		#246 = { is_owned_by = ROOT }
		#291 = { is_owned_by = ROOT }
		#248 = { is_owned_by = ROOT }
		#316 = { is_owned_by = ROOT }
		#319 = { is_owned_by = ROOT }
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_lebensraum"
		###Event of some pony settlers and some Militarium troops marching into one of the larger changeling hives in the southern reaches and beginning to go on a purge and expelling of changelings, since it is their land that they are taking, according to them
	}
}

shared_focus = {
	id = SOL_conquer_ole
	icon = GFX_goal_solar_attack_ole
	prerequisite = {
		focus = SOL_reconquer_stg
		focus = SOL_reconquer_cry
	}
	available = {
		is_subject = no
	}
	bypass = {
		OLE = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
	}
	will_lead_to_war_with = OLE
	cost = 10
	ai_will_do = {
		factor = 35
		modifier = {
			factor = 0.1
			has_war = yes
		}
	}
	relative_position_id = SOL_reconquer_stg
	x = -5
	y = 2
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_conquer_ole"
		create_wargoal = {
			type = annex_everything
			target = OLE
		}
	}
	search_filters = { FOCUS_FILTER_ANNEXATION }
}

shared_focus = {
	id = SOL_deer_shipwrights
	x = -2
	y = 1
	relative_position_id = SOL_conquer_ole

	cost = 5
	prerequisite = { focus = SOL_conquer_ole }
	available = {
		is_subject = no
		NOT = { country_exists = OLE }
		any_state = {
			is_core_of = OLE
			is_owned_by = ROOT
			is_coastal = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_deer_shipwrights"
		#Idea here
	}
	ai_will_do = { factor = 40 }
}

shared_focus = {
	id = SOL_reclaim_seaddle
	x = 0
	y = 1
	relative_position_id = SOL_conquer_ole

	cost = 5
	prerequisite = { focus = SOL_conquer_ole }
	available = {
		is_subject = no
		OLE = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_reclaim_seaddle"
		###Event of a number of deer trying to chase off some ponies who come to kick them out of their homes or the like, or a fight against installing a pony governor, as the Empire seeks to reclaim Seaddle after it was lost to the vikings hundreds of years ago, which makes the deer even more ticked off
		224 = { add_core_of = ROOT }
		add_stability = 0.1
	}
	ai_will_do = { factor = 70 }
}

shared_focus = {
	id = SOL_yoink_more_land
	x = 1
	y = 1
	relative_position_id = SOL_reclaim_seaddle

	cost = 6
	prerequisite = { focus = SOL_reclaim_seaddle }
	available = {
		is_subject = no
		#296 = { is_owned_by = ROOT }
		#218 = { is_owned_by = ROOT }
		#219 = { is_owned_by = ROOT }
		#216 = { is_owned_by = ROOT }
		#217 = { is_owned_by = ROOT }
		#69 = { is_owned_by = ROOT }
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_yoink_more_land"
		###Event of some ponies dealing with a domestic deer issue, since they are now in direct control of the laws there, and they put it down rather harshly, since they are told they need to become like ponies to keep their right to the land, which irritates the deer
	}
	ai_will_do = { factor = 40 }
}

shared_focus = {
	id = SOL_tap_into_forests
	x = 3
	y = 2
	relative_position_id = SOL_conquer_ole

	cost = 6
	prerequisite = { focus = SOL_conquer_ole }
	available = {
		is_subject = no
		OLE = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_tap_into_forests"
		189 = {
			add_resource = {
				type = oil
				amount = 12
			}
		}
		210 = {
			add_resource = {
				type = oil
				amount = 8
			}
		}
		215 = {
			add_resource = {
				type = tungsten
				amount = 10
			}
		}
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_figurehead_monarch
	x = 1
	y = 2
	relative_position_id = SOL_deer_shipwrights

	cost = 7
	prerequisite = { focus = SOL_deer_shipwrights }
	prerequisite = { focus = SOL_reclaim_seaddle }
	mutually_exclusive = { focus = SOL_destroy_deer_monarchy }
	available = {
		is_subject = no
		#76 = { is_owned_by = ROOT }
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_figurehead_monarch"
		###Event of Daybreaker of meeting with a bound Velvet to let her know that her lucky day has arrived, and that she will be set free, so long as she does exactly what Daybreaker wants, as she will be the figurehead of the Empire to the deer, so they can stay in line; and she will make sure that it happens, since she will have a garrison stationed in Hjortland at all times, and Velvet sees no way she can resist
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_destroy_deer_monarchy
	x = 0
	y = 1
	relative_position_id = SOL_tap_into_forests

	cost = 10
	prerequisite = { focus = SOL_tap_into_forests }
	mutually_exclusive = { focus = SOL_figurehead_monarch }
	available = {
		is_subject = no
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_destroy_deer_monarchy"
		###Event of Velvet living her new normal life, as a simple deer in Hjortland, and she has a rather drab job in the pony administration to help with some of the transitions, and it pains her to no end to see how her great nation has fallen under the iron hoof of Daybreaker
	}
	ai_will_do = { factor = 80 }
}

shared_focus = {
	id = SOL_conquer_grf
	icon = GFX_goal_solar_attack_grf
	prerequisite = {
		focus = SOL_reconquer_stg
		focus = SOL_reconquer_cry
	}
	available = {
		is_subject = no
	}
	bypass = {
		GRF = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
		GFF = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
	}
	will_lead_to_war_with = GRF
	will_lead_to_war_with = GFF
	cost = 10
	ai_will_do = {
		factor = 35
		modifier = {
			factor = 0.1
			has_war = yes
		}
	}
	relative_position_id = SOL_reconquer_stg
	x = 3
	y = 2
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_conquer_grf"
		if = {
			limit = {
				country_exists = GRF
			}
			create_wargoal = {
				type = annex_everything
				target = GRF
			}
		}
		if = {
			limit = {
				country_exists = GFF
			}
			create_wargoal = {
				type = annex_everything
				target = GFF
			}
		}
	}
	search_filters = { FOCUS_FILTER_ANNEXATION }
}

shared_focus = {
	id = SOL_expand_reach
	x = 0
	y = 1
	relative_position_id = SOL_conquer_grf

	cost = 8
	prerequisite = { focus = SOL_conquer_grf }
	mutually_exclusive = { focus = SOL_industrial_heartland }
	available = {
		GRF = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
		GFF = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_expand_reach"
		#Effect here
	}
	ai_will_do = { factor = 70 }
}

shared_focus = {
	id = SOL_delve_shelves
	x = 0
	y = 1
	relative_position_id = SOL_expand_reach

	cost = 7
	prerequisite = { focus = SOL_expand_reach }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_delve_shelves"
		243 = {
			add_resource = {
				type = oil
				amount = 15
			}
		}
		288 = {
			add_resource = {
				type = oil
				amount = 20
			}
		}
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_northern_armory
	x = 0
	y = 2
	relative_position_id = SOL_delve_shelves

	cost = 7
	prerequisite = { focus = SOL_delve_shelves }
	mutually_exclusive = { focus = SOL_bases_under_ice }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_delve_shelves"
		243 = {
			add_extra_state_shared_building_slots = 2
			add_building_construction = {
				type = arms_factory
				level = 2
				instant_build = yes
			}
			add_building_construction = {
				type = air_base
				level = 4
				instant_build = yes
			}
		}
		329 = {
			add_building_construction = {
				type = air_base
				level = 1
				instant_build = yes
			}
		}
		242 = {
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = arms_factory
				level = 1
				instant_build = yes
			}
			add_building_construction = {
				type = air_base
				level = 2
				instant_build = yes
			}
		}
		239 = {
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = arms_factory
				level = 1
				instant_build = yes
			}
			add_building_construction = {
				type = air_base
				level = 3
				instant_build = yes
			}
		}
	}
	ai_will_do = { factor = 80 }
}

shared_focus = {
	id = SOL_island_vacation
	x = 0
	y = 2
	relative_position_id = SOL_conquer_drg

	cost = 5
	prerequisite = { focus = SOL_conquer_drg }
	available = {
		is_subject = no
	}
	bypass = {
		NOT = {
			OR = {
				country_exists = PCB
				has_war_with = ROOT
				is_subject_of = ROOT
			}
		}
	}
	will_lead_to_war_with = PCB

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_island_vacation"
		if = {
			limit = {
				country_exists = PCB
			}
			create_wargoal = {
				type = annex_everything
				target = PCB
			}
		}
	}
	ai_will_do = { factor = 30 }
}

shared_focus = {
	id = SOL_resort_of_sun
	x = 0
	y = 2
	relative_position_id = SOL_island_vacation

	cost = 7
	prerequisite = { focus = SOL_island_vacation }
	mutually_exclusive = { focus = SOL_beasts_burden }
	available = {
		is_subject = no
		PCB = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_resort_of_sun"
		###Event of Daybreaker on a bit of a vacation from the war, although she is still doing some government stuff or the like, and she finds the entire thing quite relaxing, especially as she uses the sun as her personal sunbathing device, which is making the country overly hot, to the point of harming other ponies
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_conquer_yak
	icon = GFX_goal_solar_attack_yak
	prerequisite = {
		focus = SOL_reconquer_stg
		focus = SOL_reconquer_cry
	}
	available = {
		is_subject = no
	}
	bypass = {
		YAK = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
		JAK = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
	}
	will_lead_to_war_with = YAK
	will_lead_to_war_with = JAK
	cost = 10
	ai_will_do = {
		factor = 35
	}
	relative_position_id = SOL_reconquer_cry
	x = 0
	y = 4
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_conquer_yak"
		if = {
			limit = {
				country_exists = YAK
			}
			create_wargoal = {
				type = annex_everything
				target = YAK
			}
		}
		if = {
			limit = {
				country_exists = JAK
			}
			create_wargoal = {
				type = annex_everything
				target = JAK
			}
		}
	}
	search_filters = { FOCUS_FILTER_ANNEXATION }
}

shared_focus = {
	id = SOL_beasts_burden
	x = -1
	y = 2
	relative_position_id = SOL_conquer_yak

	cost = 7
	prerequisite = { focus = SOL_conquer_yak }
	mutually_exclusive = { focus = SOL_resort_of_sun }
	available = {
		is_subject = no
		YAK = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
		JAK = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_beasts_burden"
		###Rutherford is forced with the rest of his yak brethren to start serving in the factories for the Solar Empire, as they are seen as little more than backwards and uncouth, and he tries to smash one of his overseers, but it soon gets retribution from the rest in charge
	}
	ai_will_do = { factor = 70 }
}

shared_focus = {
	id = SOL_conquer_north
	icon = GFX_goal_solar_attack_north
	prerequisite = {
		focus = SOL_reconquer_stg
		focus = SOL_reconquer_cry
	}
	available = {
		is_subject = no
	}
	bypass = {
		PLB = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
		PNG = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
	}
	will_lead_to_war_with = PLB
	will_lead_to_war_with = PNG
	cost = 10
	ai_will_do = {
		factor = 35
	}
	relative_position_id = SOL_reconquer_stg
	x = 0
	y = 4
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_conquer_north"
		if = {
			limit = {
				country_exists = PLB
			}
			create_wargoal = {
				type = annex_everything
				target = PLB
			}
		}
		if = {
			limit = {
				country_exists = PNG
			}
			create_wargoal = {
				type = annex_everything
				target = PNG
			}
		}
	}
	search_filters = { FOCUS_FILTER_ANNEXATION }
}

shared_focus = {
	id = SOL_bases_under_ice
	x = 1
	y = 2
	relative_position_id = SOL_conquer_north

	cost = 6
	prerequisite = { focus = SOL_conquer_north }
	mutually_exclusive = { focus = SOL_northern_armory }
	available = {
		PNG = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
		PLB = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_conquer_north"
		325 = {
			add_extra_state_shared_building_slots = 2
			add_building_construction = {
				type = dockyard
				level = 2
				instant_build = yes
			}
			add_building_construction = {
				type = naval_base
				level = 3
				instant_build = yes
				province = 13115
			}
			add_building_construction = {
				type = naval_base
				level = 2
				instant_build = yes
				province = 12801
			}
		}
		62 = {
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = dockyard
				level = 1
				instant_build = yes
			}
			add_building_construction = {
				type = naval_base
				level = 2
				instant_build = yes
				province = 13094
			}
		}
		272 = {
			add_building_construction = {
				type = naval_base
				level = 1
				instant_build = yes
				province = 7543
			}
		}
		290 = {
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = dockyard
				level = 1
				instant_build = yes
			}
			add_building_construction = {
				type = naval_base
				level = 2
				province = 1831
			}
		}
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_conquer_GRI
	icon = GFX_goal_solar_attack_griffonia
	prerequisite = { focus = SOL_conquer_chn }
	prerequisite = { focus = SOL_conquer_drg }
	prerequisite = { focus = SOL_conquer_ole }
	prerequisite = { focus = SOL_conquer_grf }
	prerequisite = { focus = SOL_conquer_north }
	prerequisite = { focus = SOL_conquer_yak }
	available = {
		is_subject = no
	}
	bypass = {
		GRD = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
		382 = {
			owner = {
				OR = {
					tag = ROOT
					is_subject_of = ROOT
				}
			}
		}
	}
	will_lead_to_war_with = GRI
	cost = 10
	ai_will_do = {
		factor = 10
		modifier = {
			factor = 0.1
			has_war = yes
		}
	}
	relative_position_id = SOL_She_Who_Raises_the_Sun
	x = 0
	y = 9
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_conquer_GRI"
		if = {
			limit = {
				country_exists = GRD
			}
			create_wargoal = {
				type = annex_everything
				target = GRD
			}
		}
		else = {
			382 = {
				owner = {
					ROOT = {
						create_wargoal = {
							type = annex_everything
							target = PREV
						}
					}
				}
			}
		}
	}
}

shared_focus = {
	id = SOL_wayward_foals
	x = -10
	y = 3
	relative_position_id = SOL_conquer_GRI

	cost = 5
	prerequisite = { focus = SOL_conquer_GRI }
	available = {
		is_subject = no
	}
	bypass = {
		RIV = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
	}
	will_lead_to_war_with = RIV

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_wayward_foals"
		if = {
			limit = { country_exists = RIV }
			create_wargoal = {
				target = RIV
				type = annex_everything
			}
		}
	}
	ai_will_do = { factor = 35 }
}

shared_focus = {
	id = SOL_imperial_art_project
	x = 0
	y = 1
	relative_position_id = SOL_wayward_foals

	cost = 5
	prerequisite = { focus = SOL_wayward_foals }
	available = {
		RIV = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_imperial_art_project"
		#Effect here
	}
	ai_will_do = { factor = 30 }
}

shared_focus = {
	id = SOL_harmonys_last_gasp
	x = 2
	y = 1
	relative_position_id = SOL_wayward_foals

	cost = 5
	prerequisite = { focus = SOL_wayward_foals }
	available = {
		RIV = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_harmonys_last_gasp"
		###Event of a fwe RIV members and River Swirl attempting to flee the country, to try and find someplace safe in which they can carry on the mission of RIV, but they are soon captured by the military, who hold them for anti-Order activities, and to be used as a display for the rest of RIV
	}
	ai_will_do = { factor = 40 }
}

shared_focus = {
	id = SOL_integrate_CHS
	x = -2
	y = 2
	relative_position_id = SOL_wayward_foals

	cost = 5
	prerequisite = { focus = SOL_wayward_foals }
	available = {
		RIV = { all_cores_owned_by_ROOT_or_subject = yes }
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_integrate_CHS"
		#Idea here
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_doghouse
	x = -1
	y = 2
	relative_position_id = SOL_imperial_art_project

	cost = 5
	prerequisite = { focus = SOL_imperial_art_project }
	mutually_exclusive = { focus = SOL_mountain_treasure }
	available = {
		DMT = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_doghouse"
		#Effect here
		###Maybe event of Daybreaker having a bit of a session with trying to break the DMT leader, either the father or the daughter, and somewhat enjoying it for their inferiority and the trouble diamond dogs have caused elsewhere in the world
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_land_of_rising_sun
	x = -1
	y = 1
	relative_position_id = SOL_harmonys_last_gasp

	cost = 5
	prerequisite = { focus = SOL_imperial_art_project }
	prerequisite = { focus = SOL_harmonys_last_gasp }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_land_of_rising_sun"
		#Idea here
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_mountain_treasure
	x = 0
	y = 1
	relative_position_id = SOL_land_of_rising_sun

	cost = 5
	prerequisite = { focus = SOL_land_of_rising_sun }
	mutually_exclusive = { focus = SOL_doghouse }
	available = {
		DMT = { all_cores_owned_by_ROOT_or_subject = yes }
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_mountain_treasure"
		###Event of an Imperial overseer making sure that the diamond dogs are doing all they can to dig out as many resources as possible to continue to feed the Imperial war machine now and forevermore, and is overly harsh to his subjects
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_eastern_brethren
	x = 2
	y = 2
	relative_position_id = SOL_harmonys_last_gasp

	cost = 6
	prerequisite = { focus = SOL_harmonys_last_gasp }
	mutually_exclusive = { focus = SOL_continue_research }
	available = {
		RIV = { all_cores_owned_by_ROOT_or_subject = yes }
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_eastern_brethren"
		#Effect here
	}
	ai_will_do = { factor = 100 }
}

shared_focus = {
	id = SOL_last_scatterings
	x = -8
	y = 1
	relative_position_id = SOL_conquer_GRI

	cost = 5
	prerequisite = { focus = SOL_conquer_GRI }
	available = { is_subject = no }
	bypass = {
		FBK = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
		FIR = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
		WAT = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
		NTR = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
	}
	will_lead_to_war_with = FBK
	will_lead_to_war_with = FIR
	will_lead_to_war_with = WAT
	will_lead_to_war_with = NTR

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_last_scatterings"
		if = {
			limit = { country_exists = FBK }
			create_wargoal = {
				type = annex_everything
				target = FBK
			}
		}
		if = {
			limit = { country_exists = FIR }
			create_wargoal = {
				type = annex_everything
				target = FIR
			}
		}
		if = {
			limit = { country_exists = WAT }
			create_wargoal = {
				type = annex_everything
				target = WAT
			}
		}
		if = {
			limit = { country_exists = NTR }
			create_wargoal = {
				type = annex_everything
				target = NTR
			}
		}
	}
	ai_will_do = { factor = 30 }
}

shared_focus = {
	id = SOL_misguided_solarists
	x = -6
	y = 1
	relative_position_id = SOL_conquer_GRI

	cost = 5
	prerequisite = { focus = SOL_conquer_GRI }
	available = { is_subject = no }
	bypass = {
		MGY = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT\
			}
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_misguided_solarists"
		if = {
			limit = { country_exists = MGY }
			create_wargoal = {
				type = annex_everything
				target = MGY
			}
		}
	}
	ai_will_do = { factor = 35 }
}

shared_focus = {
	id = SOL_second_coming
	x = 1
	y = 1
	relative_position_id = SOL_misguided_solarists

	cost = 5
	prerequisite = { focus = SOL_misguided_solarists }
	available = {
		MGY = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_second_coming"
		###Daybreaker visits the ancient town of Somnambula, where the oldest pyramid of them all is, not the Sphynx one, though, and proclaims that everypony should bow to her, as she is the Dawn Star, the second coming of an ancient Maregyptian deity (just a corruption of Celestia), and she uses her power of raising the sun and her magic to intimidate them all as word spreads of this supposed second coming
		###The tale of the Dawn Star is a corruption of Celestia and Luna helping the ancient Maregyptians with ridding themselves of various Egyptian legendary creatures, which earned them worship, although at the time they both tried to dissuade it
	}
	ai_will_do = { factor = 80 }
}

shared_focus = {
	id = SOL_imperial_province_solaria
	x = -2
	y = 2
	relative_position_id = SOL_misguided_solarists

	cost = 8
	prerequisite = { focus = SOL_misguided_solarists }
	mutually_exclusive = { focus = SOL_ports_of_zebrica }
	available = {
		MGY = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_misguided_solarists"
		#Effect here
	}
	ai_will_do = { factor = 40 }
}

shared_focus = {
	id = SOL_ports_of_zebrica
	x = 0
	y = 2
	relative_position_id = SOL_misguided_solarists

	cost = 5
	prerequisite = { focus = SOL_misguided_solarists }
	mutually_exclusive = { focus = SOL_imperial_province_solaria }
	available = {
		MGY = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_ports_of_zebrica"
		#Effect here
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_lost_southern_souls
	x = 2
	y = 1
	relative_position_id = SOL_ports_of_zebrica

	cost = 5
	prerequisite = {
		focus = SOL_imperial_province_solaria
		focus = SOL_ports_of_zebrica
	}
	available = {
		is_subject = no
	}
	bypass = {
		MTO = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
		AES = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
		KAR = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_lost_southern_souls"
		if = {
			limit = { country_exists = MTO }
			create_wargoal = {
				target = MTO
				type = annex_everything
			}
		}
		if = {
			limit = { country_exists = AES }
			create_wargoal = {
				target = AES
				type = annex_everything
			}
		}
		if = {
			limit = { country_exists = KAR }
			create_wargoal = {
				target = KAR
				type = puppet_wargoal_focus
			}
		}
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_civilize_backwaters
	x = 0
	y = 1
	relative_position_id = SOL_lost_southern_souls

	cost = 5
	prerequisite = { focus = SOL_lost_southern_souls }
	mutually_exclusive = { focus = SOL_imperial_breadbasket }
	available = {
		MTO = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
		AES = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
		KAR = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_civilize_backwaters"
		#Effect here
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_imperial_breadbasket
	x = 2
	y = 1
	relative_position_id = SOL_lost_southern_souls

	cost = 5
	prerequisite = { focus = SOL_lost_southern_souls }
	mutually_exclusive = { focus = SOL_civilize_backwaters }
	available = {
		MTO = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
		AES = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
		KAR = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_imperial_breadbasket"
		#Idea here
	}
	ai_will_do = { factor = 70 }
}

shared_focus = {
	id = SOL_land_of_fiery_sun
	x = -3
	y = 1
	relative_position_id = SOL_conquer_GRI

	cost = 5
	prerequisite = { focus = SOL_conquer_GRI }
	available = {
		is_subject = no
	}
	bypass = {
		KIR = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
		NVA = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
		KHM = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
		KXN = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_land_of_fiery_sun"
		if = {
			limit = { country_exists = KIR }
			create_wargoal = {
				target = KIR
				type = puppet_wargoal_focus
			}
		}
		if = {
			limit = { country_exists = NVA }
			create_wargoal = {
				target = NVA
				type = puppet_wargoal_focus
			}
		}
		if = {
			limit = { country_exists = KHM }
			create_wargoal = {
				target = KHM
				type = puppet_wargoal_focus
			}
		}
		if = {
			limit = { country_exists = KXN }
			create_wargoal = {
				target = KXN
				type = puppet_wargoal_focus
			}
		}
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_artisans_of_empress
	x = 0
	y = 2
	relative_position_id = SOL_land_of_fiery_sun

	cost = 6
	prerequisite = { focus = SOL_land_of_fiery_sun }
	available = {
		KIR = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
		NVA = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
		KHM = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
		KXN = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_artisans_of_empress"
		#Idea here
		###Maybe event of Autumn or another kirin being required to do some propaganda art of Daybreaker so that they can be used to more effectively control the new lands of Kiria, or perhaps have her posing for a new sculpture or the like
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_embodiments_of_flame
	x = 2
	y = 1
	relative_position_id = SOL_artisans_of_empress

	cost = 6
	prerequisite = { focus = SOL_artisans_of_empress }
	mutually_exclusive = { focus = SOL_theory_masters }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_embodiments_of_flame"
		#Idea here
		###Event of some nirik soldiers going in on some rebels or the like, who used to be their friends, and also leading Imperial soldiers, which just leaves them in awe, since they are basically miniature armies in and of themselves, since they can use their fire and magic much more effectively than a normal pony while enraged
	}
	ai_will_do = { factor = 90 }
}

shared_focus = {
	id = SOL_theory_masters
	x = 4
	y = 1
	relative_position_id = SOL_artisans_of_empress

	cost = 6
	prerequisite = { focus = SOL_artisans_of_empress }
	mutually_exclusive = { focus = SOL_embodiments_of_flame }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_theory_masters"
		#Idea here
		###Event of basically some Sun Tzu like statements and the like from kirin philosophers for the Daybreaker and her military, revolving around flame, fire, and magic
	}
}

shared_focus = {
	id = SOL_imperial_guidance
	x = -1
	y = 1
	relative_position_id = SOL_conquer_GRI

	cost = 6
	prerequisite = { focus = SOL_conquer_GRI }
	available = {
		is_subject = no
		GRD = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_imperial_guidance"
		###Daybreaker goes through Griffenheim, and she is clearly despised by every single griffon that she sees, but she doesn't care, as she meets the council of nobles in the city, to state that the Griffoniches Reich will forever be a client state of the Solar Empire, as they will ensure that GRI has a proper reverence to her, and that it would be best to comply
	}
	ai_will_do = { factor = 75 }
}

shared_focus = {
	id = SOL_military_exchange
	x = -1
	y = 1
	relative_position_id = SOL_imperial_guidance

	cost = 5
	prerequisite = { focus = SOL_imperial_guidance }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_military_exchange"
		#Idea here
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_griffon_birthplace
	x = 0
	y = 2
	relative_position_id = SOL_conquer_GRI

	cost = 8
	prerequisite = { focus = SOL_conquer_GRI }
	available = {
		is_subject = no
		389 = {
			owner = {
				OR = {
					tag = EQS
					is_subject_of = ROOT
				}
			}
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_griffon_birthplace"
		389 = {
			add_extra_state_shared_building_slots = 4
			add_building_construction = {
				type = industrial_complex
				level = 2
				instant_build = yes
			}
			add_building_construction = {
				type = arms_factory
				level = 2
				instant_build = yes
			}
		}
	}
	ai_will_do = { factor = 70 }
}

shared_focus = {
	id = SOL_second_sanctum
	x = -1
	y = 1
	relative_position_id = SOL_griffon_birthplace

	cost = 6
	prerequisite = { focus = SOL_griffon_birthplace }
	mutually_exclusive = { focus = SOL_monument_to_empires }
	available = {
		is_subject = no
		389 = {
			is_owned_by = ROOT
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_second_sanctum"
		save_current_manpower = yes
		389 = {
			add_core_of = ROOT
			add_extra_state_shared_building_slots = 3
			add_resource = {
				type = crystals
				amount = 16
			}
			add_manpower = -243890
		}
		restore_current_manpower = yes
		add_stability = -0.15
		###Possibly event of running griffons out of Griffonstone and already turning some of its architecture into pony architecture, and erecting a statue of Daybreaker to point how she has conquered the griffons
	}
	ai_will_do = {
		factor = 60
		modifier = {
			has_completed_focus = SOL_empress_protector
			factor = 0.5
		}
		modifier = {
			has_completed_focus = SOL_god_empress
			factor = 1.5
		}
	}
}

shared_focus = {
	id = SOL_monument_to_empires
	x = 1
	y = 1
	relative_position_id = SOL_griffon_birthplace

	cost = 6
	prerequisite = { focus = SOL_griffon_birthplace }
	mutually_exclusive = { focus = SOL_second_sanctum }
	available = {
		is_subject = no
		389 = {
			owner = {
				tag = EQS
				is_subject_of = ROOT
			}
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_monument_to_empires"
		389 = {
			add_extra_state_shared_building_slots = 2
		}
		add_political_power = 100
		#Griffon advisors here
		###Possibly an event of Daybreaker watching as a monument to her is put up, and she is accosted by Gruff, but instead just shows him how the Grover statue is staying, and also that it is going to be a testament to how the two empires will accomplish great things together, although he thinks it a bunch of crap
	}
	ai_will_do = {
		factor = 40
		modifier = {
			has_completed_focus = SOL_empress_protector
			factor = 2.5
		}
		modifier = {
			has_completed_focus = SOL_god_empress
			factor = 0.5
		}
	}
}

shared_focus = {
	id = SOL_educate_kaiser
	x = 1
	y = 1
	relative_position_id = SOL_conquer_GRI

	cost = 8
	prerequisite = { focus = SOL_conquer_GRI }
	mutually_exclusive = { focus = SOL_last_grover }
	available = {
		is_subject = no
		GRD = {
			all_cores_owned_by_ROOT_or_subject = yes
			NOT = { has_country_leader = { character = GRI_emperor_grover_vi ruling_only = yes } }
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_educate_kaiser"
		###Event of Daybreaker walking into Grover VI's bed chambers, as he by now is a teen at least, and she speaks with him that she will now lead as the regent of GRI, and she will educate him in the proper teaching of being an emperor, and that she will also make sure he learns his place, which intimidates him (he will ask where the current regent is, and Daybreaker will say they're "indisposed"), although he tries to stand up against her and remain strong, which she promises will be broken
		###Will allow for him to be eventually made Kaiser like for either normal regents
		country_event = solarreworked.120
	}
	ai_will_do = { factor = 70 }
}

shared_focus = {
	id = SOL_last_grover
	x = 3
	y = 1
	relative_position_id = SOL_conquer_GRI

	cost = 5
	prerequisite = { focus = SOL_conquer_GRI }
	mutually_exclusive = { focus = SOL_educate_kaiser }
	available = {
		is_subject = no
		GRD = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
		389 = {
			owner = {
				OR = {
					tag = ROOT
					is_subject_of = ROOT
				}
			}
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_last_grover"
		###Daybreaker marches into the palace in Griffonstone, where the current regent, a representative from Griffonstone, and Grover VI are all waiting for her, and it is a clearly forced display, as there are only a few nobles here and there, and they all look furious, and after a short speech about how she will lead better than a bird ever could, she has Grover and the regent acknowledge their abdication, and passing the throne to her, and she is crowned with Grover's crown, which earns cries of despair
		###Will anger every other griffon nation that still exists on Griffonia
		country_event = solarreworked.121
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_almost_pony
	x = 6
	y = 1
	relative_position_id = SOL_conquer_GRI

	cost = 5
	prerequisite = { focus = SOL_conquer_GRI }
	available = { is_subject = no }
	bypass = {
		EMR = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
		SDF = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
		SDS = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
		SDC = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
		SDL = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
		YMN = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_almost_pony"
		if = {
			limit = { country_exists = EMR }
			create_wargoal = {
				target = EMR
				type = puppet_wargoal_focus
			}
		}
		if = {
			limit = { country_exists = SDL }
			create_wargoal = {
				target = SDL
				type = puppet_wargoal_focus
			}
		}
		if = {
			limit = { country_exists = SDS }
			create_wargoal = {
				target = SDS
				type = puppet_wargoal_focus
			}
		}
		if = {
			limit = { country_exists = SDC }
			create_wargoal = {
				target = SDC
				type = puppet_wargoal_focus
			}
		}
		if = {
			limit = { country_exists = SDF }
			create_wargoal = {
				target = SDF
				type = puppet_wargoal_focus
			}
		}
		if = {
			limit = { country_exists = YMN }
			create_wargoal = {
				target = YMN
				type = puppet_wargoal_focus
			}
		}
	}
	ai_will_do = { factor = 30 }
}

shared_focus = {
	id = SOL_decadence_shattered
	x = 0
	y = 1
	relative_position_id = SOL_almost_pony

	cost = 5
	prerequisite = { focus = SOL_almost_pony }
	available = {
		SDL = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
		SDC = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
		SDF = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
		SDS = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
		EMR = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_decadence_shattered"
		###Event of Daybreaker meeting with the prince of Saddle Arabia, who is a bit of a nervous wreck after being held for so long by the civil war, and she acts condescending that he can rule again, but he'll have to do what she wants, and will have to cut out most of the spending, since she wants an actually useful puppet, which he barely agrees to, since he would rather live
		SDL = {
			get_current_government_type = yes
		}
		if = {
			limit = {
				SDL = {
					exists = yes
					all_cores_owned_by_ROOT_or_subject = yes
					is_subject_of = EQS
				}
			}
			if = {
				limit = {
					SDC = {
						exists = yes
						is_subject_of = ROOT
					}
				}
				SDL = {
					annex_country = {
						target = SDC
					}
				}
			}
			if = {
				limit = {
					SDF = {
						exists = yes
						is_subject_of = ROOT
					}
				}
				SDL = {
					annex_country = {
						target = SDF
					}
				}
			}
			if = {
				limit = {
					SDS = {
						exists = yes
						is_subject_of = ROOT
					}
				}
				SDL = {
					annex_country = {
						target = SDS
					}
				}
			}
			if = {
				limit = {
					EMR = {
						exists = yes
						is_subject_of = EQS
					}
				}
				SDL = {
					annex_country = {
						target = EMR
					}
				}
			}
		}
		else = {
			release_autonomy = {
				target = SDL
				autonomy_state = autonomy_reichsprotectorate
				freedom_level = 0.5
			}
			if = {
				limit = {
					SDL = {
						exists = yes
						is_subject_of = ROOT
					}
					if = {
						limit = {
							SDC = {
								exists = yes
								is_subject_of = ROOT
							}
						}
						SDL = {
							annex_country = {
								target = SDC
							}
						}
					}
					if = {
						limit = {
							SDF = {
								exists = yes
								is_subject_of = ROOT
							}
						}
						SDL = {
							annex_country = {
								target = SDF
							}
						}
					}
					if = {
						limit = {
							SDS = {
								exists = yes
								is_subject_of = ROOT
							}
						}
						SDL = {
							annex_country = {
								target = SDS
							}
						}
					}
					if = {
						limit = {
							EMR = {
								exists = yes
								is_subject_of = ROOT
							}
						}
						SDL = {
							annex_country = {
								target = EMR
							}
						}
					}
				}
			}
		}
		SDL = {
			set_cosmetic_tag = SDL_SOL
			set_previous_government_type = yes
		}
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_gold_of_sands
	x = -2
	y = 1
	relative_position_id = SOL_decadence_shattered

	cost = 5
	prerequisite = { focus = SOL_decadence_shattered }
	available = {
		SDL = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_gold_of_sands"
		826 = {
			add_resource = {
				type = oil
				amount = 30
			}
		}
		845 = {
			add_resource = {
				type = oil
				amount = 10
			}
		}
		861 = {
			add_resource = {
				type = oil
				amount = 15
			}
		}
		870 = {
			add_resource = {
				type = oil
				amount = 25
			}
		}
		847 = {
			add_resource = {
				type = oil
				amount = 20
			}
		}
	}
	ai_will_do = { factor = 70 }
}

shared_focus = {
	id = SOL_eastern_calipha
	x = 2
	y = 1
	relative_position_id = SOL_decadence_shattered

	cost = 6
	prerequisite = { focus = SOL_decadence_shattered }
	available = {
		YMN = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_eastern_calipha"
		###Daybreaker takes to the airwaves from Yemane, where she has pronounced herself the new calipha of one of the old religions of the Saddle Arabian area, and that she will inflict hamr upon those who defy her, as she is the sun itself to guide them, and otherwise promises their doom if they do not obey
		YMN = {
			get_current_government_type = yes
		}
		if = {
			limit = { YMN = { exists = no } }
			release_autonomy = {
				target = YMN
				autonomy_state = autonomy_reichsprotectorate
				freedom_level = 0.33
			}
		}
		YMN = {
			set_previous_government_type = yes
			set_cosmetic_tag = YMN_SOL
		}
	}
	ai_will_do = { factor = 40 }
}

shared_focus = {
	id = SOL_mutant_lake
	x = 0
	y = 1
	relative_position_id = SOL_gold_of_sands

	cost = 5
	prerequisite = { focus = SOL_gold_of_sands }
	available = {
		is_subject = no
	}
	bypass = {
		REE = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
		HMR = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
		OSQ = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
		MTA = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_mutant_lake"
		if = {
			limit = { country_exists = REE }
			create_wargoal = {
				type = puppet_wargoal_focus
				target = REE
			}
		}
		if = {
			limit = { country_exists = HMR }
			create_wargoal = {
				type = puppet_wargoal_focus
				target = HMR
			}
		}
		if = {
			limit = { country_exists = OSQ }
			create_wargoal = {
				type = puppet_wargoal_focus
				target = OSQ
			}
		}
		if = {
			limit = { country_exists = MTA }
			create_wargoal = {
				type = puppet_wargoal_focus
				target = MTA
			}
		}
	}
	ai_will_do = { factor = 30 }
}

shared_focus = {
	id = SOL_magic_hit_squads
	x = -2
	y = 1
	relative_position_id = SOL_mutant_lake

	cost = 9
	prerequisite = { focus = SOL_mutant_lake }
	mutually_exclusive = { focus = SOL_raid_archives }
	available = {
		REE = { all_cores_owned_by_ROOT_or_subject = yes }
		OSQ = { all_cores_owned_by_ROOT_or_subject = yes }
		HMR = { all_cores_owned_by_ROOT_or_subject = yes }
		MTA = { all_cores_owned_by_ROOT_or_subject = yes }
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_magic_hit_squads"
		###Event of somepony who has wronged Daybreaker, or perhaps one more rebel, is trying to run away after he had been almost killed by the hit squad, until he is stopped hwne some appear in a teleportation spell, and they let him have his last words as they use fire magic to consume him entirely
	}
	ai_will_do = { factor = 40 }
}

shared_focus = {
	id = SOL_raid_archives
	x = 0
	y = 1
	relative_position_id = SOL_mutant_lake

	cost = 9
	prerequisite = { focus = SOL_mutant_lake }
	mutually_exclusive = { focus = SOL_magic_hit_squads }
	available = {
		REE = { all_cores_owned_by_ROOT_or_subject = yes }
		OSQ = { all_cores_owned_by_ROOT_or_subject = yes }
		HMR = { all_cores_owned_by_ROOT_or_subject = yes }
		MTA = { all_cores_owned_by_ROOT_or_subject = yes }
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_raid_archives"
		###Event of Daybreaker leading an army to attack The Cave, where the artifacts of Maretonia are kept, and she gets into combat with the MTA leader, who is their most powerful mage, and she gets into a proper challenge with him, and almost loses out, aside from her playing dirty to get in, and she ultimately wins, and mocks him as he perishes
	}
	ai_will_do = { factor = 100 }
}

shared_focus = {
	id = SOL_attack_bat
	icon = GFX_goal_SOL_batnation
	prerequisite = { focus = SOL_conquer_GRI }
	available = {
		is_subject = no
	}
	bypass = {
		BAT = {
			OR = {
				exists = no
				is_subject_of = ROOT
				has_war_with = ROOT
			}
		}
	}
	will_lead_to_war_with = BAT
	cost = 10
	ai_will_do = {
		factor = 35
	}
	relative_position_id = SOL_conquer_GRI
	x = 10
	y = 3
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_attack_bat"
		if = {
			limit = {
				country_exists = BAT
			}
			create_wargoal = {
				type = annex_everything
				target = BAT
			}
		}
	}
	search_filters = { FOCUS_FILTER_ANNEXATION }
}

shared_focus = {
	id = SOL_natural_state
	x = -2
	y = 1
	relative_position_id = SOL_attack_bat

	cost = 5
	prerequisite = { focus = SOL_attack_bat }
	available = {
		BAT = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_natural_state"
		###Event of either inquisitors or just radical followers of Daybreaker going into a town of thestrals, in a night condoned by the governing body of BAT, to scare, drive out, or kill the bats of Zebrica, as lessons for them rebelling for so long against Daybreaker, which leads to extensive loss of life for the thestrals
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_reborn_in_fire
	x = 2
	y = 1
	relative_position_id = SOL_attack_bat

	cost = 5
	prerequisite = { focus = SOL_attack_bat }
	available = {
		BAT = { all_cores_owned_by_ROOT_or_subject = yes }
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_reborn_in_fire"
		###Event of a representative of Daybreaker, probably Sunrise Sparkle, leading a mass purge of the bats, starting with some of the BAT leaders, who are all defiant of her, and then by tearing down monuments and the like, which leads to large-scale destruction across BAT
	}
	ai_will_do = { factor = 100 }
}

shared_focus = {
	id = SOL_no_sinner_alive
	x = -1
	y = 2
	relative_position_id = SOL_attack_bat

	cost = 10
	prerequisite = { focus = SOL_attack_bat }
	mutually_exclusive = { focus = SOL_special_treatment }
	available = {
		has_completed_focus = SOL_god_empress
		BAT = { all_cores_owned_by_ROOT_or_subject = yes }
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_no_sinner_alive"
		###Follow a soldier as he prepares to go in on one of the larger cities in BAT, as orders have come down that they will finally inflict the last of the wounds necessary to inflict total retribution on BAT, and he grows more upset and sickened as it is clearly a thestralcide, and even if he despises them, he thinks that it would be wiser to just use them than executed them all
	}
	ai_will_do = { factor = 30 }
}

shared_focus = {
	id = SOL_special_treatment
	x = 1
	y = 2
	relative_position_id = SOL_attack_bat

	cost = 5
	prerequisite = { focus = SOL_attack_bat }
	mutually_exclusive = { focus = SOL_no_sinner_alive }
	available = {
		BAT = { all_cores_owned_by_ROOT_or_subject = yes }
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_special_treatment"
		#Effect here
		###Maybe event speaking about how the thestrals can still be useful, and that they need to be monitored and can more easily be done so by the IIS/Solaris Speculatores, and that a client state will be erected in it to compensate for no longer having direct control
	}
	ai_will_do = { factor = 70 }
}

shared_focus = {
	id = SOL_light_into_darkness
	x = -1
	y = 1
	relative_position_id = SOL_no_sinner_alive

	cost = 6
	prerequisite = { focus = SOL_natural_state }
	prerequisite = { focus = SOL_no_sinner_alive }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_light_into_darkness"
		#Idea here
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_re_educate_foals
	x = 1
	y = 2
	relative_position_id = SOL_reborn_in_fire

	cost = 10
	prerequisite = { focus = SOL_reborn_in_fire }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_re_educate_foals"
		add_stability = -0.1
		add_political_power = -125
		#Advisors here
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_continue_research
	x = -2
	y = 2
	relative_position_id = SOL_natural_state

	cost = 6
	prerequisite = { focus = SOL_natural_state }
	mutually_exclusive = { focus = SOL_eastern_brethren }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_continue_research"
		#Idea here
	}
	ai_will_do = { factor = 100 }
}

shared_focus = {
	id = SOL_pax_solaris
	x = 0
	y = 7
	relative_position_id = SOL_conquer_GRI

	cost = 10
	prerequisite = {
		focus = SOL_eastern_brethren
		focus = SOL_continue_research
	}
	available = {
		has_completed_focus = SOL_wayward_foals
		has_completed_focus = SOL_attack_bat
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_pax_solaris"
		###Daybreaker finally has a day to herself, as the world is at peace at last, and she looks to a map of her empire, and how ponies from all walks of life had been made safe under her, and she believes that she has accomplished her goal, and she will lead all of ponykind into prosperity forever
	}
	ai_will_do = { factor = 1000 }
}

###Imperial Diplomacy###
shared_focus = {
	id = SOL_imperial_diplomatic_corps
	x = 0
	y = -1

	cost = 5
	available = {
		is_subject = no
		has_DB_ruler = yes
		OR = {
			has_global_flag = SOL_twilight_converted
			has_global_flag = SOL_sunset_converted
		}
	}
	allow_branch = { is_EQS_SOL = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_imperial_diplomatic_corps"
		add_political_power = 50
		custom_effect_tooltip = SOL_nice_empress_tt
		#Possibly show off decisions or the like
	}
	ai_will_do = {
		factor = 40
		modifier = {
			has_completed_focus = SOL_empress_protector
			factor = 2
		}
		modifier = {
			has_completed_focus = SOL_god_empress
			factor = 1.5
		}
		modifier = {
			has_completed_focus = SOL_empress_mother
			factor = 2.5
		}
	}
}

shared_focus = {
	id = SOL_sustenance_workers
	x = -1
	y = 1
	relative_position_id = SOL_imperial_diplomatic_corps

	cost = 6
	prerequisite = { focus = SOL_imperial_diplomatic_corps }
	available = {
		is_subject = no
		has_DB_ruler = yes
		custom_trigger_tooltip = {
			tooltip = SOL_all_diplomats_busy_please_call_again_later_tt
			OR = {
				NOT = { has_country_flag = SOL_twilight_away }
				NOT = { has_country_flag = SOL_sunset_away }
			}
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_sustenance_workers"
		###Event of choosing who to send, which then gives DRG an event of said diplomat arriving and trying to get them to kneel
	}
	ai_will_do = {
		factor = 20
		modifier = {
			has_war = no
			factor = 2.5
		}
	}
}

shared_focus = {
	id = SOL_insurance_policies
	x = 1
	y = 1
	relative_position_id = SOL_imperial_diplomatic_corps

	cost = 6
	prerequisite = { focus = SOL_imperial_diplomatic_corps }
	available = {
		is_subject = no
		has_DB_ruler = yes
		custom_trigger_tooltip = {
			tooltip = SOL_all_diplomats_busy_please_call_again_later_tt
			OR = {
				NOT = { has_country_flag = SOL_twilight_away }
				NOT = { has_country_flag = SOL_sunset_away }
			}
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_insurance_policies"
		###Event of choosing who to send, and also an event for YAK on the promise of support against any threats to them, so long as they give all resource rights for their resources, or provide materiel support in Daybreaker's own wars, as mercs
	}
	ai_will_do = {
		factor = 20
		modifier = {
			has_war = no
			factor = 2.5
		}
	}
}

shared_focus = {
	id = SOL_oil_existence
	x = -2
	y = 2
	relative_position_id = SOL_imperial_diplomatic_corps

	cost = 6
	prerequisite = { focus = SOL_imperial_diplomatic_corps }
	available = {
		is_subject = no
		has_DB_ruler = yes
		custom_trigger_tooltip = {
			tooltip = SOL_all_diplomats_busy_please_call_again_later_tt
			OR = {
				NOT = { has_country_flag = SOL_twilight_away }
				NOT = { has_country_flag = SOL_sunset_away }
			}
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_oil_existence"
		###Event of choosing who to send and later an event for PNG and PLB, demanding they provide either access to their resources, including all their oil, or provide experts for resource extraction, or naval expertise for continued existence
	}
	ai_will_do = {
		factor = 20
		modifier = {
			has_war = no
			factor = 2.5
		}
	}
}

shared_focus = {
	id = SOL_griffon_fealty
	x = 2
	y = 2
	relative_position_id = SOL_imperial_diplomatic_corps

	cost = 6
	prerequisite = { focus = SOL_imperial_diplomatic_corps }
	available = {
		is_subject = no
		has_DB_ruler = yes
		custom_trigger_tooltip = {
			tooltip = SOL_all_diplomats_busy_please_call_again_later_tt
			OR = {
				NOT = { has_country_flag = SOL_twilight_away }
				NOT = { has_country_flag = SOL_sunset_away }
			}
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_griffon_fealty"
		###Event of choosing who to send and then an event for GRF demanding that they contribute toward the war efforts on Equus by providing their troops or by providing military leadership
	}
	ai_will_do = {
		factor = 20
		modifier = {
			has_war = no
			factor = 2.5
		}
	}
}

shared_focus = {
	id = SOL_reich_relations
	x = 0
	y = 3
	relative_position_id = SOL_imperial_diplomatic_corps

	cost = 10
	prerequisite = { focus = SOL_imperial_diplomatic_corps }
	available = {
		is_subject = no
		has_DB_ruler = yes
		custom_trigger_tooltip = {
			tooltip = SOL_all_hands_on_deck_tt
			NOT = { has_country_flag = SOL_twilight_away }
			NOT = { has_country_flag = SOL_sunset_away }
		}
	}

	#Select effect of three events of negotiations, as both Sunset and Twilight are sent

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_imperial_relations"
		#Show off idea here, if they accept it
		custom_effect_tooltip = SOL_griffons_like_tt
	}
	ai_will_do = {
		factor = 30
		modifier = {
			OR = {
				NOT = { has_completed_focus = SOL_sustenance_workers }
				NOT = { has_completed_focus = SOL_oil_existence }
				NOT = { has_completed_focus = SOL_insurance_policies }
				NOT = { has_completed_focus = SOL_griffon_fealty }
			}
			factor = 0
		}
		modifier = {
			NOT = { country_exists = CHN }
			factor = 1.33
		}
		modifier = {
			has_war = no
			factor = 3
		}
	}
}

###Crystal Empire###
shared_focus = {
	id = SOL_increase_presense_inCRY
	icon = GFX_goal_crystal_empire_sub
	cost = 5
	ai_will_do = {
		factor = 100
	}
	bypass = {
		OR = {
			NOT = {
				country_exists = CRY
			}
			has_war_with = CRY
		}
	}
	prerequisite = {
		focus = examine_the_situation
	}
	allow_branch = {
		is_EQS_SOL = yes
	}
	available = {
		eqs_not_has_civil_war = yes
		OR = {
			has_completed_focus = SOL_empress_protector
			has_completed_focus = SOL_empress_mother
			has_completed_focus = SOL_god_empress
		}
		CRY = {
			has_war = no
			OR = {
				is_subject = no
				is_subject_of = ROOT
			}
		}
	}
	relative_position_id = examine_the_situation
	x = -11
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_increase_presense_inCRY"
		if = {
			limit = {
				CRY = {
					is_subject_of = ROOT
				}
			}
			CRY = {
				add_autonomy_ratio = {
					value = -0.03
				}
				if = {
					limit = {
						NOT = {
							has_global_flag = CRY_puppet_chosen
						}
						NOT = {
							has_country_flag = CRY_solar_governorship
						}
						has_global_flag = SOL_twilight_converted
					}
					ROOT = {
						country_event = solarempire.131
					}
				}
			}
		}
		else_if = {
			limit = {
				OR = {
					NOT = {
						has_global_flag = SOL_twilight_converted
					}
					CRY = {
						has_country_leader = { character = CRY_princess_mi_amore_cadenza ruling_only = yes }
					}
				}
			}
			CRY = {
				country_event = {
					id = solarempire.27
					days = 1
				}
			}

		}
		else = {
			#country_event = solarempiresparkles.1
			###Country event of Twilight stating that she wants to deal with this issue personally, since Cadance is family, and she should listen to Twilight, which Daybreaker ultimately agrees to
			add_war_support = 0.05
			add_political_power = 50
		}
	}
	search_filters = { FOCUS_FILTER_TFV_AUTONOMY }
}

shared_focus = {
	id = SOL_follow_sunrise_plan
	x = -1
	y = 1
	relative_position_id = SOL_increase_presense_inCRY

	cost = 4
	prerequisite = { focus = SOL_increase_presense_inCRY }
	mutually_exclusive = { focus = SOL_gesture_of_strength }
	available = {
		is_subject = no
		has_DB_ruler = yes
		CRY = {
			has_war = no
			OR = {
				is_subject = no
				NOT = { is_subject_of = ROOT }
			}
		}
	}
	bypass = {
		OR = {
			NOT = { country_exists = CRY }
			has_war_with = CRY
			CRY = { is_subject_of = ROOT }
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_follow_sunrise_plan"
		#Have her do vanilla infiltration mission
	}
	ai_will_do = { factor = 40 }
}

shared_focus = {
	id = SOL_gesture_of_strength
	x = 1
	y = 1
	relative_position_id = SOL_increase_presense_inCRY

	cost = 4
	prerequisite = { focus = SOL_increase_presense_inCRY }
	mutually_exclusive = { focus = SOL_follow_sunrise_plan }
	available = {
		is_subject = no
		has_DB_ruler = yes
		CRY = {
			has_war = no
			OR = {
				is_subject = no
				NOT = { is_subject_of = ROOT }
			}
		}
	}
	bypass = {
		OR = {
			NOT = { country_exists = CRY }
			has_war_with = CRY
			CRY = { is_subject_of = ROOT }
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_gesture_of_strength"
		###Event of Daybreaker speaking with Twilight about how she must use the strength of the Empire to intimidate Cadance, not just use her guile, and Twilight takes that to heart before the vanilla grand display event
	}
	ai_will_do = {
		factor = 30
		modifier = {
			has_completed_focus = SOL_god_empress
			factor = 3.33
		}
	}
}

shared_focus = {
	id = Crystal_Fair
	icon = GFX_goal_crystal_fair
	cost = 5
	dynamic = yes
	cancel_if_invalid = yes
	continue_if_invalid = no
	ai_will_do = { factor = 40 }
	prerequisite = {
		focus = SOL_follow_sunrise_plan
		focus = SOL_gesture_of_strength
		focus = increase_presense_inCRY
	}
	available = {
		eqs_not_has_civil_war = yes
		is_subject = no
		CRY = {
			OR = { is_subject_of = ROOT is_in_faction_with = ROOT }
			has_civil_war = no
		}
	}
	bypass = {
		CRY = {
			has_focus_tree = crystal_empire_solar_focus
			has_focus_tree = crystal_empire_lunar_focus
		}
	}
	relative_position_id = examine_the_situation
	x = -4
	y = 2
	offset = {
		x = -7
		y = 1
		trigger = { is_EQS_SOL = yes }
	}
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus Crystal_Fair"
		add_political_power = 150
		hidden_effect = {
			if = {
				limit = { is_original_EQS = yes }
				news_event = news.4
			}
		}
	}
	search_filters = { FOCUS_FILTER_POLITICAL }
}

shared_focus = {
	id = SOL_expel_night_witch
	x = 1
	y = 1
	relative_position_id = Crystal_Fair

	cost = 5
	prerequisite = { focus = Crystal_Fair }
	allow_branch = { is_EQS_SOL = yes }
	available = {
		is_subject = no
		has_DB_ruler = yes
		OR = {
			has_completed_focus = SOL_Imperial_Investigative_Service
			has_completed_focus = SOL_solaris_speculatores
		}
		NOT = { has_global_flag = NLR_spawned }
		CRY = { has_character = EQS_princess_luna }
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_expel_night_witch"
		###Event of Daybreaker preparing a plan with her chief of intelligence to find and capture Luna, who is still running a campaign of resistance against the Solar Empire, and she is incredibly frustrated with how she has not been able to yet, and is adamant they must find her
		#Unlock operation if LR, decision if not
		#Will have another event at end of decision/op of Daybreaker getting into combat with Luna to capture her
	}
	ai_will_do = {
		factor = 150
	}
}

shared_focus = {
	id = rainbow_falls_resort
	icon = GFX_goal_rainbow_falls
	cost = 6
	dynamic = yes
	ai_will_do = { factor = 30 }
	prerequisite = {
		focus = Crystal_Fair
	}
	available = {
		eqs_not_has_civil_war = yes
		is_subject = no
		98 = {
			owner = { OR = { tag = ROOT is_subject_of = ROOT is_in_faction_with = ROOT } }
			controller = { OR = { tag = ROOT is_subject_of = ROOT is_in_faction_with = ROOT } }
		}
	}
	cancel_if_invalid = yes
	continue_if_invalid = no
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus rainbow_falls_resort"
		98 = {
			owner = { add_political_power = 150 }
			add_extra_state_shared_building_slots = 3
			add_building_construction = {
				type = industrial_complex
				level = 3
				instant_build = yes
			}
		}
	}
	search_filters = { FOCUS_FILTER_INDUSTRY }
	relative_position_id = Crystal_Fair
	x = 1
	y = 1
	offset = {
		x = 3
		y = 0
		trigger = { is_EQS_SOL = yes }
	}
}

shared_focus = {
	id = SOL_family_visits
	x = -3
	y = 2
	relative_position_id = Crystal_Fair

	cost = 5
	prerequisite = { focus = Crystal_Fair }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}
	allow_branch = { is_EQS_SOL = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_family_visits"
		###Event of Daybreaker going to visit Cadance and family, and they are under house arrest, with magic inhibitors put on them, and Daybreaker basically makes fun of it, and also makes a few intimidating remarks around Flurry and her health, as she acts like Cadance is hurting her by being so cold to her (as in Daybreaker)
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = industry_crystal_emp
	icon = GFX_goal_cry_factory_cel
	cost = 6
	ai_will_do = { factor = 30 }
	prerequisite = {
		focus = Crystal_Fair
	}
	available = {
		eqs_not_has_civil_war = yes
		is_subject = no
		53 = {
			owner = { OR = { tag = ROOT is_subject_of = ROOT is_in_faction_with = ROOT } }
			controller = { OR = { tag = ROOT is_subject_of = ROOT is_in_faction_with = ROOT } }
		}
		144 = {
			owner = { OR = { tag = ROOT is_subject_of = ROOT is_in_faction_with = ROOT } }
			controller = { OR = { tag = ROOT is_subject_of = ROOT is_in_faction_with = ROOT } }
		}
	}
	cancel_if_invalid = yes
	continue_if_invalid = no
	relative_position_id = Crystal_Fair
	x = -1
	y = 1
	offset = {
		x = 0
		y = 1
		trigger = { is_EQS_SOL = yes }
	}
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus industry_crystal_emp"
		53 = { add_extra_state_shared_building_slots = 3
			add_building_construction = {
				type = industrial_complex
				level = 3
				instant_build = yes
			}
		}
		144 = { add_extra_state_shared_building_slots = 3
			add_building_construction = {
				type = arms_factory
				level = 3
				instant_build = yes
			}
		}
	}
}

shared_focus = {
	id = SOL_update_northern_tactics
	x = -2
	y = 1
	relative_position_id = rainbow_falls_resort

	cost = 8
	prerequisite = { focus = rainbow_falls_resort }
	allow_branch = { is_EQS_SOL = yes }
	available = {
		is_subject = no
		has_DB_ruler = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_update_northern_tactics"
		###Maybe event for doing some kind of war games exercise between SOL and CRY soldiers
		CRY = {
			add_doctrine_cost_reduction = {
				name = land_doc_bonus
				uses = 3
				cost_reduction = 0.5
				category = land_doctrine
			}
		}
		army_experience = 30
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_establish_crystal_legion
	x = 0
	y = 1
	relative_position_id = rainbow_falls_resort

	cost = 5
	prerequisite = { focus = rainbow_falls_resort }
	allow_branch = { is_EQS_SOL = yes }
	available = {
		is_subject = no
		has_DB_ruler = yes
		command_power > 39.99
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_establish_crystal_legion"
		add_command_power = -40
		CRY = {
			#Spawn divisions here
			add_war_support = 0.1
		}
	}
	ai_will_do = { factor = 40 }
}

shared_focus = {
	id = SOL_monarchy_compliance
	x = -1
	y = 1
	relative_position_id = SOL_family_visits

	cost = 7
	prerequisite = { focus = SOL_family_visits }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_monarchy_compliance"
		###Daybreaker meets again with Cadance, who is still under house arrest, and speaks further about some of her plans for the Crystal Empire, which upsets Cadance, especially since she is perturbed about how much Celestia has changed and Daybreaker makes one final mention of what would happen if Cadance disobeys her or her representatives as a threat
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_appoint_economic_advisors
	x = 1
	y = 1
	relative_position_id = industry_crystal_emp

	cost = 6
	prerequisite = { focus = industry_crystal_emp }
	allow_branch = { is_EQS_SOL = yes }
	mutually_exclusive = { focus = SOL_retire_old_guard }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_appoint_economic_advisors"
		#Advisors and idea here
		###Maybe event of a number of ponies from the Solar Empire coming to replace their Crystal counterparts, after they are taken away for anti-Order propaganda or the like
	}
	ai_will_do = { factor = 70 }
}

shared_focus = {
	id = SOL_retire_old_guard
	x = 0
	y = 1
	relative_position_id = SOL_update_northern_tactics

	cost = 6
	prerequisite = { focus = SOL_update_northern_tactics }
	mutually_exclusive = { focus = SOL_appoint_economic_advisors }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_retire_old_guard"
		#Generals and idea here
		###Event of Shining Armor being brought before a tribunal, and him making a defense of himself, and although they can't kill him for fear of angering the entire Crystal Empire, they do sack him of his position
	}
	ai_will_do = { factor = 80 }
}

shared_focus = {
	id = SOL_rouse_godhood
	x = 0
	y = 1
	relative_position_id = SOL_monarchy_compliance

	cost = 10
	prerequisite = { focus = SOL_monarchy_compliance }
	available = {
		has_completed_focus = SOL_god_empress
		custom_trigger_tooltip = {
			tooltip = SOL_flurry_old_enough_tt
			date > 1011.1.1
		}
	}

	###Select effect of a few events for taking and corrupting Flurry
	###Should only be two corruption events, but there will be one for a young Flurry, a teen Flurry, or an adult Flurry, possibly a middling young Flurry, so up to eight events

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_rouse_godhood"
		###Event summarizing Flurry's ascendance
	}
	ai_will_do = { factor = 75 }
}

shared_focus = {
	id = SOL_cadance_university
	x = 1
	y = 2
	relative_position_id = SOL_family_visits

	cost = 7
	prerequisite = { focus = SOL_family_visits }
	mutually_exclusive = { focus = SOL_gleaming_armor_arsenals }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_cadance_university"
		#Idea is -15% RS, +0.1pp
		CRY = {
			if = {
				limit = { amount_research_slots < 5 }
				add_research_slot = 1
			}
		}
	}
	ai_will_do = { factor = 70 }
}

shared_focus = {
	id = SOL_gleaming_armor_arsenals
	x = 0
	y = 2
	relative_position_id = SOL_establish_crystal_legion

	cost = 7
	prerequisite = { focus = SOL_establish_crystal_legion }
	mutually_exclusive = { focus = SOL_cadance_university }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_gleaming_armor_arsenals"
		#Concern or MiO here
	}
	ai_will_do = { factor = 80 }
}

shared_focus = {
	id = SOL_imperial_mind
	x = 0
	y = 2
	relative_position_id = SOL_appoint_economic_advisors

	cost = 8
	prerequisite = { focus = SOL_appoint_economic_advisors }
	prerequisite = { focus = SOL_cadance_university }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_imperial_mind"
		#Idea here
	}
	ai_will_do = { factor = 80 }
}

shared_focus = {
	id = SOL_imperial_guardian
	x = 0
	y = 2
	relative_position_id = SOL_retire_old_guard

	cost = 8
	prerequisite = { focus = SOL_retire_old_guard }
	prerequisite = { focus = SOL_gleaming_armor_arsenals }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_imperial_guardian"
		#Idea here
	}
}

shared_focus = {
	id = crystalcity_university
	icon = GFX_goal_cryacademy
	cost = 10.00
	ai_will_do = { factor = 30 }
	relative_position_id = industry_crystal_emp
	x = 1
	y = 1
	dynamic = yes
	prerequisite = {
		focus = industry_crystal_emp
	}
	search_filters = { FOCUS_FILTER_INDUSTRY }
	prerequisite = {
		focus = rainbow_falls_resort
	}
	available = {
		eqs_not_has_civil_war = yes
		is_subject = no
		CRY = {
			OR = { is_subject_of = ROOT is_in_faction_with = ROOT }
			capital_scope = { is_controlled_by = PREV }
		}
	}
	cancel_if_invalid = yes
	continue_if_invalid = no
	allow_branch = {
		is_EQS_SOL = no
	}
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus crystalcity_university"
		add_political_power = 100
		CRY = {
			if = {
				limit = { amount_research_slots < 5 }
				add_research_slot = 1
			}
			add_ideas = CRY_EQS_techshare
		}
	}
	search_filters = { FOCUS_FILTER_POLITICAL FOCUS_FILTER_RESEARCH }
}

###Bats? Bats! BAAAAATS!###
shared_focus = {
	id = SOL_bat_problems
	icon = GFX_goal_bat
	cost = 3
	ai_will_do = {
		factor = 150
	}
	relative_position_id = examine_the_situation
	x = -6
	y = 1
	prerequisite = {
		focus = examine_the_situation
	}
	allow_branch = {
		is_EQS_SOL = yes
	}
	available = {
		has_country_flag = SOL_bat_problems_flag
		has_war = no
		OR = {
			has_completed_focus = SOL_empress_protector
			has_completed_focus = SOL_empress_mother
			has_completed_focus = SOL_god_empress
		}
	}
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_bat_problems"
		###Event of the military going in to put down a riot by the bats, and otherwise having to deal with their issues, and Daybreaker resolving to deal with it in the most appropriate punishment possible; should be a bit of war support and command power
		#if = {
		#	limit = {
		#		has_completed_focus = SOL_empress_protector
		#	}
		#	country_event = solarempire.40
		#}
		#else_if = {
		#	limit = {
		#		has_completed_focus = SOL_empress_mother
		#	}
		#	country_event = solarempire.41
		#}
		#else_if = {
		#	limit = {
		#		has_completed_focus = SOL_god_empress
		#	}
		#	country_event = solarempire.42
		#}
	}
}

shared_focus = {
	id = SOL_what_homes
	icon = GFX_goal_bat
	x = -2
	y = 1
	relative_position_id = SOL_bat_problems

	cost = 5
	prerequisite = { focus = SOL_bat_problems }
	available = { has_war = no }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_what_homes"
		###Event of soldiers going in to seize land that the thestrals currently occupy, which leads to conflict and a number of dead thestrals; should give also 1 building slot in a couple of places or compliance
	}
	ai_will_do = { factor = 70 }
}

shared_focus = {
	id = SOL_what_jobs
	icon = GFX_goal_bat
	x = 2
	y = 1
	relative_position_id = SOL_bat_problems

	cost = 5
	prerequisite = { focus = SOL_bat_problems }
	available = { has_war = no }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_what_jobs"
		###Event of some thestrals being kicked out or locked out of their old place of work, including ones that they actually owned, and them fighting with some of the guard to try and in, and failing; should be alos a couple of factories provided as well as the pp
	}
	ai_will_do = { factor = 70 }
}

shared_focus = {
	id = SOL_burn_bats
	icon = GFX_goal_bat
	x = 1
	y = 1
	relative_position_id = SOL_what_homes

	cost = 7
	prerequisite = { focus = SOL_what_homes }
	mutually_exclusive = { focus = SOL_useful_servants }
	available = { has_war = no }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_burn_bats"
		###Event like the vanilla God-Empress burning event, except follow the vigilantes stirred up by faithful ponies to Daybreaker to wipe out the filth of darkness; have the same effect as vanilla, but also +10% ST
	}
	ai_will_do = {
		factor = 50
		modifier = {
			has_completed_focus = SOL_god_empress
			factor = 5
		}
	}
}

shared_focus = {
	id = SOL_useful_servants
	icon = GFX_goal_bat
	x = -1
	y = 1
	relative_position_id = SOL_what_jobs

	cost = 7
	prerequisite = { focus = SOL_what_jobs }
	mutually_exclusive = { focus = SOL_burn_bats }
	available = { has_war = no }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_useful_servants"
		###Event a thestral being forcibly taken into service for the armed forces, since they can be used as both fodder and night scouts (with appropriate detonation enchantments if they try to flee), and she tries to fight it off, but is ultimately taken anyway, after basically being treated like a raging animal
	}
	ai_will_do = { factor = 100 }
}

###Peurto Caballo gets the CRY treatment###
shared_focus = {
	id = SOL_change_management
	x = 13
	y = 1
	relative_position_id = examine_the_situation

	cost = 5
	prerequisite = { focus = examine_the_situation }
	available = {
		eqs_not_has_civil_war = yes
		OR = {
			has_completed_focus = SOL_empress_protector
			has_completed_focus = SOL_empress_mother
			has_completed_focus = SOL_god_empress
		}
		PCB = {
			has_war = no
			OR = {
				is_subject = no
				is_subject_of = ROOT
			}
		}
	}
	allow_branch = { is_EQS_SOL = yes }
	bypass = {
		OR = {
			NOT = {
				country_exists = PCB
			}
			has_war_with = PCB
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_change_management"
		###Event of PCB getting a letter from SOL about how they have one chance to return to their faction as a dominion if they submit then and there, since they could easily be wiped out if Daybreaker wished, which they have an option to accept or reject
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_communist_examples
	x = -1
	y = 1
	relative_position_id = SOL_change_management

	cost = 5
	prerequisite = { focus = SOL_change_management }
	mutually_exclusive = { focus = SOL_coercion_campaign }
	available = {
		eqs_not_has_civil_war = yes
		OR = {
			has_completed_focus = SOL_empress_protector
			has_completed_focus = SOL_empress_mother
			has_completed_focus = SOL_god_empress
		}
		PCB = {
			has_war = no
			OR = {
				is_subject = no
				is_subject_of = ROOT
			}
		}
	}
	bypass = {
		OR = {
			NOT = {
				country_exists = PCB
			}
			has_war_with = PCB
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_communist_examples"
		###Event of some soldiers from SOL coming into PCB to effectively purge every single communist supporter that is in the capital city as well as elsewhere in the country, and it leads to hundreds of thousands dead to eliminate that threat forever
	}
	ai_will_do = { factor = 80 }
}

shared_focus = {
	id = SOL_coercion_campaign
	x = 1
	y = 1
	relative_position_id = SOL_change_management

	cost = 5
	prerequisite = { focus = SOL_change_management }
	mutually_exclusive = { focus = SOL_communist_examples }
	available = {
		eqs_not_has_civil_war = yes
		OR = {
			has_completed_focus = SOL_empress_protector
			has_completed_focus = SOL_empress_mother
			has_completed_focus = SOL_god_empress
		}
		PCB = {
			has_war = no
			OR = {
				is_subject = no
				is_subject_of = ROOT
			}
		}
	}
	bypass = {
		OR = {
			NOT = {
				country_exists = PCB
			}
			has_war_with = PCB
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_coercion_campaign"
		###Event of propaganda about how the communist dream is nothing more than suffering, exaggerating what happened in Stalliongrad, and further making it appear like the Castro expy will only kill them all, but if they serve the Empress they will be prosperous and safe
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_naval_staging_grounds
	x = 0
	y = 1
	relative_position_id = SOL_coercion_campaign

	cost = 6
	prerequisite = {
		focus = SOL_communist_examples
		focus = SOL_coercion_campaign
	}
	available = {
		PCB = { all_cores_owned_by_ROOT_or_subject = yes }
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_naval_staging_grounds"
		1193 = {
			add_extra_state_shared_building_slots = 2
			add_building_construction = {
				type = dockyard
				level = 2
				instant_build = yes
			}
			add_building_construction = {
				type = air_base
				level = 2
				instant_build = yes
			}
			add_building_construction = {
				type = naval_base
				level = 4
				instant_build = yes
				province = 20703
			}
		}
		1194 = {
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = dockyard
				level = 1
				instant_build = yes
			}
			add_building_construction = {
				type = air_base
				level = 1
				instant_build = yes
			}
			add_building_construction = {
				type = naval_base
				level = 1
				instant_build = yes
				province = 20724
			}
		}
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_plumb_mountain_depths
	x = -1
	y = 1
	relative_position_id = SOL_naval_staging_grounds

	cost = 8
	prerequisite = { focus = SOL_naval_staging_grounds }
	available = {
		PCB = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_plumb_mountain_depths"
		1193 = {
			add_resource = {
				type = chromium
				amount = 10
			}
			add_resource = {
				type = aluminium
				amount = 12
			}
			add_resource = {
				type = tungsten
				amount = 12
			}
		}
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_isle_of_sun
	x = 0
	y = 1
	relative_position_id = SOL_plumb_mountain_depths

	cost = 10
	prerequisite = { focus = SOL_plumb_mountain_depths }
	available = {
		PCB = {
			exists = no
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_isle_of_sun"
		1193 = {
			add_core_of = ROOT
		}
		1194 = {
			add_core_of = ROOT
		}
	}
	ai_will_do = { factor = 90 }
}

###EQC Internal Affairs###
shared_focus = {
	id = SOL_force_jet_sets_hoof
	x = 18
	y = 1
	relative_position_id = examine_the_situation

	cost = 5
	prerequisite = { focus = examine_the_situation }
	available = {
		eqs_not_has_civil_war = yes
		OR = {
			has_completed_focus = SOL_empress_protector
			has_completed_focus = SOL_empress_mother
			has_completed_focus = SOL_god_empress
		}
		EQC = {
			has_war = no
			OR = {
				is_subject = no
				is_subject_of = ROOT
			}
		}
	}
	allow_branch = { is_EQS_SOL = yes }
	bypass = {
		OR = {
			NOT = {
				country_exists = EQC
			}
			has_war_with = EQC
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_force_jet_sets_hoof"
		###Event of EQC receiving a notice from the Empire that it is now the crown colony of the Imperium of the Sun, and will be expected to follow, which will prompt whether to leave or stay, since they are rather far away
	}
	ai_will_do = { factor = 80 }
}

shared_focus = {
	id = SOL_ensuring_loyalty
	x = 0
	y = 1
	relative_position_id = SOL_force_jet_sets_hoof

	cost = 3
	prerequisite = { focus = SOL_force_jet_sets_hoof }
	available = {
		eqs_not_has_civil_war = yes
		EQC = {
			has_war = no
			is_subject_of = ROOT
		}
	}
	bypass = {
		OR = {
			NOT = { country_exists = EQC }
			has_war_with = EQC
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_ensuring_loyalty"
		###Event of Arcane Nova arriving in EQC, on a ship and a small procession of Imperial soldiers, to meet with Jet Set and explain that she is going to be ensuring loyalty and providing the Empress with information of every decision made, to ensure that the colony remains part of the Empire, and that he will have to watch his moves, since he was tied to the old regime
	}
	ai_will_do = { factor = 70 }
}

shared_focus = {
	id = SOL_smooth_transitions
	x = -2
	y = 1
	relative_position_id = SOL_ensuring_loyalty

	cost = 4
	prerequisite = { focus = SOL_ensuring_loyalty }
	mutually_exclusive = { focus = SOL_faiths_reward }
	available = {
		eqs_not_has_civil_war = yes
		EQC = {
			has_war = no
			is_subject_of = ROOT
		}
	}
	bypass = {
		OR = {
			NOT = { country_exists = EQC }
			has_war_with = EQC
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_smooth_transitions"
		#Effect here
		###Maybe event of Jet Set being called back to Canterlot so that he can have a meeting with Daybreaker, who has been informed that so far he has remained loyal, and that he can continue to remain the governor general, but if he thinks about betraying her trust, she will ensure that the entire colony is wiped out as a response to his insult
	}
	ai_will_do = {
		factor = 30
		modifier = {
			has_completed_focus = SOL_empress_protector
			factor = 3
		}
	}
}

shared_focus = {
	id = SOL_faiths_reward
	x = 2
	y = 1
	relative_position_id = SOL_ensuring_loyalty

	cost = 4
	prerequisite = { focus = SOL_ensuring_loyalty }
	mutually_exclusive = { focus = SOL_smooth_transitions }
	available = {
		eqs_not_has_civil_war = yes
		EQC = {
			has_war = no
			is_subject_of = ROOT
		}
	}
	bypass = {
		OR = {
			NOT = { country_exists = EQC }
			has_war_with = EQC
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_faiths_reward"
		#Effect here
		###Maybe event of Arcane Nova coming in to arrest Jet Set, as he is too much of a risk to the Empress's plans, and that he will be placed under house arrest until he is determined to be loyal or not; either way, he will be forever relieved of his post as governor general, and she appreciates the attractive accommodations he has, and otherwise it a bit playful in her arrest
	}
	ai_will_do = {
		factor = 50
		modifier = {
			has_completed_focus = SOL_god_empress
			factor = 2
		}
	}
}

shared_focus = {
	id = SOL_empresss_eyes
	x = -1
	y = 1
	relative_position_id = SOL_smooth_transitions

	cost = 3
	prerequisite = { focus = SOL_smooth_transitions }
	available = {
		EQC = {
			is_subject_of = ROOT
			has_country_leader = { character = EQC_jet_set ruling_only = yes }
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_empresss_eyes"
		EQC = {
			add_stability = 0.1
		}
		add_political_power = -50
	}
	ai_will_do = { factor = 40 }
}

shared_focus = {
	id = SOL_lost_colony
	x = 2
	y = 1
	relative_position_id = SOL_smooth_transitions

	cost = 7
	prerequisite = {
		focus = SOL_smooth_transitions
		focus = SOL_faiths_reward
	}
	available = {
		is_subject = no
	}
	bypass = {
		EQC = {
			exists = no
			is_subject_of = ROOT
			has_war_with = ROOT
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_lost_colony"
		create_wargoal = {
			target = EQC
			type = puppet_wargoal_focus
		}
	}
	ai_will_do = { factor = 70 }
}

shared_focus = {
	id = SOL_personnel_support
	x = 2
	y = 2
	relative_position_id = SOL_faiths_reward

	cost = 7
	prerequisite = { focus = SOL_faiths_reward }
	prerequisite = { focus = SOL_lost_colony }
	available = {
		EQC = { is_subject_of = ROOT }
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_personnel_support"
		add_war_support = 0.05
		#Effects here
		###Maybe a short event of EQC receiving the new generals with Arcane Nova meeting them with speaking on the state of the country and how they will need to enforce law
	}
	ai_will_do = { factor = 70 }
}

shared_focus = {
	id = SOL_homegrown_plan
	x = 0
	y = 1
	relative_position_id = SOL_empresss_eyes

	cost = 6
	prerequisite = { focus = SOL_empresss_eyes }
	mutually_exclusive = { focus = SOL_debt_council }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_homegrown_plan"
		#Idea here
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_debt_council
	x = -1
	y = 1
	relative_position_id = SOL_lost_colony

	cost = 6
	prerequisite = { focus = SOL_lost_colony }
	mutually_exclusive = { focus = SOL_homegrown_plan }
	available = {
		EQC = { all_cores_owned_by_ROOT_or_subject = yes }
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_debt_council"
		#Idea here
	}
	ai_will_do = { factor = 80 }
}

shared_focus = {
	id = SOL_flush_dregs
	x = 1
	y = 1
	relative_position_id = SOL_lost_colony

	cost = 5
	prerequisite = { focus = SOL_lost_colony }
	available = {
		EQC = {
			has_country_flag = SOL_mane_six_fled
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_flush_dregs"
		#Decision or op here, with an event of Astrum Solus (who is a spy either way) meeting with the leader of the EQC (possibly just make it Arcane Nova either way) to begin planning the op to take out the M6, who have been her main mission for a year or more, which makes her incredibly passionate to finally get them
	}
	ai_will_do = { factor = 100 }
}

shared_focus = {
	id = SOL_griffon_workers
	x = 1
	y = 1
	relative_position_id = SOL_debt_council

	cost = 7
	prerequisite = { focus = SOL_debt_council }
	available = {
		EQC = {
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_griffon_workers"
		EQC = {
			three_random_industrial_complex = yes
			three_random_industrial_complex = yes
		}
	}
	ai_will_do = { factor = 40 }
}

shared_focus = {
	id = SOL_strip_mine_bauxite
	x = 2
	y =2
	relative_position_id = SOL_lost_colony

	cost = 6
	prerequisite = { focus = SOL_lost_colony }
	available = {
		EQC = {
			is_subject_of = ROOT
			all_cores_owned_by_ROOT_or_subject = yes
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_strip_mine_bauxite"
		355 = {
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = industrial_complex
				level = 1
				instant_build = yes
			}
			add_resource = {
				type = aluminium
				amount = 20
			}
		}
		357 = {
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = industrial_complex
				level = 1
				instant_build = yes
			}
			add_resource = {
				type = aluminium
				amount = 10
			}
		}
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_church_of_day
	x = 1
	y = 1
	relative_position_id = SOL_personnel_support

	cost = 5
	prerequisite = { focus = SOL_personnel_support }
	mutually_exclusive = { focus = SOL_united_goal }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_church_of_day"
		#Idea here
		###Maybe event of Arcane hosting the first service of Daybreaker, whether or not she's the God-Empress, since Arcane reveres Daybreaker as a goddess regardless, and she has the fire and brimstone of an aggressive preacher promising death for thsoe who rebel against her and also for the surrounding nations of EQC
	}
	ai_will_do = {
		factor = 40
		modifier = {
			has_completed_focus = SOL_god_empress
			factor = 2
		}
	}
}

shared_focus = {
	id = SOL_united_goal
	x = 3
	y = 1
	relative_position_id = SOL_personnel_support

	cost = 5
	prerequisite = { focus = SOL_personnel_support }
	mutually_exclusive = { focus = SOL_church_of_day }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_personnel_support"
		#Idea here
		###Maybe event of Arcane working with some ponies from Canterlot regarding some passing of laws in EQC, even though she doesn't see the need for them, since it only makes her job harder, but it helps make the Empress's easier, so she begrudgingly agrees to it
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_allies_in_high_places
	x = -2
	y = 1
	relative_position_id = SOL_homegrown_plan

	cost = 6
	prerequisite = { focus = SOL_homegrown_plan }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_allies_in_high_places"
		#Advisors here
		add_stability = 0.05
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_expand_sunset_university
	x = 1
	y = 1
	relative_position_id = SOL_homegrown_plan

	cost = 8
	prerequisite = {
		focus = SOL_homegrown_plan
		focus = SOL_debt_council
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_expand_sunset_university"
		if = {
			limit = {
				EQC = { amount_research_slots < 5}
			}
			EQC = { add_research_slot = 1 }
		}
		#Idea here
	}
	ai_will_do = { factor = 90 }
}

shared_focus = {
	id = SOL_prisoner_restructuring
	x = -1
	y = 1
	relative_position_id = SOL_united_goal

	cost = 6
	prerequisite = {
		focus = SOL_church_of_day
		focus = SOL_united_goal
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_prisoner_restructuring"
		###Event of a political prisoner who is currently laboring in a work gang as pennance for his transgressions finds an opening to escape and tries to do so, leading to a small chase before he is trapped and forced to surrender, and his workload becomes even worse because of it
	}
	ai_will_do = { factor = 70 }
}

shared_focus = {
	id = SOL_homeland_investments
	x = 2
	y = 1
	relative_position_id = SOL_allies_in_high_places

	cost = 5
	prerequisite = { focus = SOL_allies_in_high_places }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_homeland_investments"
		#Effect here
	}
	ai_will_do = { factor = 30 }
}

shared_focus = {
	id = SOL_station_legions
	x = -1
	y = 1
	relative_position_id = SOL_strip_mine_bauxite

	cost = 5
	prerequisite = { focus = SOL_strip_mine_bauxite }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_station_legions"
		#Effect here
		EQC = {
			add_war_support = 0.1
		}
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_cadet_militarium
	x = -1
	y = 2
	relative_position_id = SOL_personnel_support

	cost = 5
	prerequisite = { focus = SOL_personnel_support }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_cadet_militarium"
		#Idea here
	}
}

shared_focus = {
	id = SOL_refuge_in_sun
	x = 0
	y = 2
	relative_position_id = SOL_allies_in_high_places

	cost = 6
	prerequisite = { focus = SOL_allies_in_high_places }
	mutually_exclusive = { focus = SOL_economic_opportunity }
	mutually_exclusive = { focus = SOL_world_station }
	mutually_exclusive = { focus = SOL_joint_military_expeditions }

	completion_reward = {
		356 = {
			add_manpower = 100382
		}
		362 = {
			add_manpower = 72930
		}
		359 = {
			add_manpower = 28347
		}
		354 = {
			add_manpower = 22895
		}
		#Idea here
		###Maybe event of some colonists from SOL arriving to then force some of the griffon minorities so they can use their land instead, forcing them to be destitute
	}
	ai_will_do = { factor = 40 }
}

shared_focus = {
	id = SOL_economic_opportunity
	x = 0
	y = 2
	relative_position_id = SOL_expand_sunset_university

	cost = 6
	prerequisite = { focus = SOL_expand_sunset_university }
	mutually_exclusive = { focus = SOL_refuge_in_sun }
	mutually_exclusive = { focus = SOL_world_station }
	mutually_exclusive = { focus = SOL_joint_military_expeditions }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_economic_opportunity"
		###Event of number of megacorps moving their headquarters to the lands of EQC, since they have found multiple ways to abuse the tax code to make more money, so that they do not have to give back as much to Daybreaker, since they still chafe under her
	}
	ai_will_do = { factor = 40 }
}

shared_focus = {
	id = SOL_world_station
	x = 1
	y = 1
	relative_position_id = SOL_station_legions

	cost = 6
	prerequisite = { focus = SOL_station_legions }
	mutually_exclusive = { focus = SOL_refuge_in_sun }
	mutually_exclusive = { focus = SOL_economic_opportunity }
	mutually_exclusive = { focus = SOL_joint_military_expeditions }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_world_station"
		###Event of some sailors finally getting shore leave and causing a bit of havoc on the mainland of EQC, probably as some kind of report, or of the CO of the sailors coming in to get them out of lockup
	}
	ai_will_do = { factor =  50 }
}

shared_focus = {
	id = SOL_joint_military_expeditions
	x = 3
	y = 2
	relative_position_id = SOL_strip_mine_bauxite

	cost = 6
	prerequisite = { focus = SOL_strip_mine_bauxite }
	prerequisite = { focus = SOL_prisoner_restructuring }
	mutually_exclusive = { focus = SOL_refuge_in_sun }
	mutually_exclusive = { focus = SOL_economic_opportunity }
	mutually_exclusive = { focus = SOL_world_station }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_joint_military_expeditions"
		###Maybe event of some imperial and EQC soldiers getting into a bit of a competition on a training exercise, which ends up getting into a proper skirmish with some of the griffons nearby, and they both end up promising to keep it even in score
	}
	ai_will_do = { factor = 80 }
}

###Ministry of Defense Additions###
shared_focus = {
	id = SOL_airfields
	icon = GFX_goal_eqs_airfields_central
	cost = 5
	ai_will_do = { factor = 70 }
	prerequisite = {
		focus = Ministry_of_defense
	}
	allow_branch = { is_EQS_SOL = yes }
	relative_position_id = Ministry_of_defense
	x = 3
	y = 1
	bypass = { has_completed_focus = EQS_airfields }
	available = {
		132 = { is_controlled_by = ROOT }
		170 = { is_controlled_by = ROOT }
		129 = { is_controlled_by = ROOT }
		131 = { is_controlled_by = ROOT }
		146 = {
			controller = {
				OR = { tag = ROOT is_subject_of = ROOT is_in_faction_with = ROOT }
			}
		}
		70 = { is_controlled_by = ROOT }
		74 = { is_controlled_by = ROOT }
	}
	continue_if_invalid = no
	cancel_if_invalid = yes
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_airfields"
		132 = {
			add_building_construction = {
				type = air_base
				level = 1
				instant_build = yes
			}
		}
		170 = {
			add_building_construction = {
				type = air_base
				level = 1
				instant_build = yes
			}
		}
		129 = {
			add_building_construction = {
				type = air_base
				level = 1
				instant_build = yes
			}
		}
		131 = {
			add_building_construction = {
				type = air_base
				level = 1
				instant_build = yes
			}
		}
		146 = {
			add_building_construction = {
				type = air_base
				level = 1
				instant_build = yes
			}
		}
		70 = {
			add_building_construction = {
				type = air_base
				level = 1
				instant_build = yes
			}
		}
		74 = {
			add_building_construction = {
				type = air_base
				level = 1
				instant_build = yes
			}
		}
	}
	search_filters = { FOCUS_FILTER_INDUSTRY }

}

shared_focus = {
	id = SOL_airfields2
	icon = GFX_goal_eqs_airfields_south
	cost = 5
	ai_will_do = { factor = 20 }
	prerequisite = {
		focus = Ministry_of_defense
	}
	allow_branch = { is_EQS_SOL = yes }
	relative_position_id = Ministry_of_defense
	x = -3
	y = 1
	available = {
		38 = { is_controlled_by = ROOT }
		114 = { is_controlled_by = ROOT }
		111 = { is_controlled_by = ROOT }
		22 = { is_controlled_by = ROOT }
		116 = { is_controlled_by = ROOT }
		12 = { is_controlled_by = ROOT }
	}
	bypass = { has_completed_focus = EQS_airfields2 }
	continue_if_invalid = no
	cancel_if_invalid = yes
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_airfields2"
		38 = {
			add_building_construction = {
				type = air_base
				level = 1
				instant_build = yes
			}
		}
		114 = {
			add_building_construction = {
				type = air_base
				level = 1
				instant_build = yes
			}
		}
		111 = {
			add_building_construction = {
				type = air_base
				level = 1
				instant_build = yes
			}
		}
		22 = {
			add_building_construction = {
				type = air_base
				level = 1
				instant_build = yes
			}
		}
		116 = {
			add_building_construction = {
				type = air_base
				level = 1
				instant_build = yes
			}
		}
		12 = {
			add_building_construction = {
				type = air_base
				level = 1
				instant_build = yes
			}
		}
	}
	search_filters = { FOCUS_FILTER_INDUSTRY }
}

shared_focus = {
	id = SOL_canterbbean_grinder
	x = -2
	y = 2
	relative_position_id = Ministry_of_defense

	cost = 5
	prerequisite = { focus = Ministry_of_defense }
	available = {
		4 = {
			is_controlled_by = ROOT
		}
		1195 = {
			is_controlled_by = ROOT
		}
	}
	allow_branch = { is_EQS_SOL = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_canterbbean_grinder"
		1195 = {
			add_building_construction = {
				type = naval_base
				level = 2
				instant_build = yes
				province = 20720
			}
			add_building_construction = {
				type = naval_base
				level = 1
				instant_build = yes
				province = 20699
			}
			add_building_construction = {
				type = naval_base
				level = 1
				instant_build = yes
				province = 20706
			}
			add_building_construction = {
				type = air_base
				level = 1
				instant_build = yes
			}
		}
		4 = {
			add_building_construction = {
				type = naval_base
				level = 1
				instant_build = yes
				province = 3838
			}
			add_building_construction = {
				type = naval_base
				level = 1
				instant_build = yes
				province = 11755
			}
			add_building_construction = {
				type = naval_base
				level = 1
				instant_build = yes
				province = 4913
			}
			add_building_construction = {
				type = air_base
				level = 1
				instant_build = yes
			}
		}
	}
	ai_will_do = { factor = 55 }
}

shared_focus = {
	id = SOL_vanhoover_stations
	x = 2
	y = 2
	relative_position_id = Ministry_of_defense

	cost = 5
	prerequisite = { focus = Ministry_of_defense }
	allow_branch = { is_EQS_SOL = yes }
	available = {
		14 = { is_controlled_by = ROOT }
		45 = { is_controlled_by = ROOT }
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_vanhoover_stations"
		14 = {
			add_building_construction = {
				type = naval_base
				level = 2
				instant_build = yes
				province = 585
			}
			add_building_construction = {
				type = naval_base
				level = 1
				instant_build = yes
				province = 1141
			}
			add_building_construction = {
				type = air_base
				level = 2
				instant_build = yes
			}
			add_building_construction = {
				type = coastal_bunker
				level = 2
				instant_build = yes
				province = 585
			}
			add_building_construction = {
				type = coastal_bunker
				level = 1
				instant_build = yes
				province = 1141
			}
			add_building_construction = {
				type = bunker
				level = 1
				instant_build = yes
				province = 717
			}
		}
		45 = {
			 add_building_construction = {
				type = naval_base
				level = 2
				instant_build = yes
				province = 7077
			 }
			 add_building_construction = {
				type = coastal_bunker
				level = 2
				instant_build = yes
				province = 7077
			 }
		}
	}
	ai_will_do = {
		factor = 60
		modifier = {
			CHN = { is_justifying_wargoal_against = ROOT }
			factor = 1.5
		}
		modifier = {
			AND = {
				has_war_with = CHN
				has_full_control_of_state = 14
			}
			factor = 3
		}
	}
}

shared_focus = {
	id = SOL_changeling_menace
	x = 0
	y = 3
	icon = GFX_goal_generic_changeling
	relative_position_id = Ministry_of_defense

	cost = 6
	prerequisite = { focus = Ministry_of_defense }
	allow_branch = { is_EQS_SOL = yes }
	bypass = {
		OR = {
			CHN = {
				OR = {
					exists = no
					has_war_with = ROOT
					is_subject = yes
				}
			}
			hidden_trigger = { has_completed_focus = worrisome_changelings}
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_changeling_menace"
		add_political_power = 150
		add_war_support = 0.025
		if = {
			limit = {
				172 = { is_controlled_by = ROOT }
			}
			172 = {
				add_building_construction = {
					type = air_base
					level = 2
					instant_build = yes
				}
			}
		}
		if = {
			limit = {
				136 = { is_controlled_by = ROOT }
			}
			136 = {
				add_building_construction = {
					type = air_base
					level = 2
					instant_build = yes
				}
			}
		}
	}
	ai_will_do = { factor = 80 }
	search_filters = { FOCUS_FILTER_WAR_SUPPORT FOCUS_FILTER_POLITICAL FOCUS_FILTER_INDUSTRY }
}

shared_focus = {
	id = SOL_north_naval_games
	x = 0
	y = 2
	relative_position_id = SOL_airfields2

	cost = 5
	prerequisite = {
		focus = SOL_airfields2
		focus = SOL_canterbbean_grinder
	}
	available = {
		OR = {
			241 = { is_controlled_by = ROOT }
			67 = { is_controlled_by = ROOT }
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_north_naval_games"
		#Idea here
	}
	ai_will_do = {
		base = 50
		modifier = {
			has_war = no
			factor = 0
		}
		modifier = {
			any_country = {
				is_justifying_wargoal_against = ROOT
			}
			add = 50
		}
	}
}

shared_focus = {
	id = SOL_operation_wasserkoenigin
	x = -1
	y = 3
	relative_position_id = SOL_airfields2

	cost = 5
	prerequisite = {
		focus = SOL_airfields2
		focus = SOL_canterbbean_grinder
	}
	available = {
		OR = {
			1195 = { is_controlled_by = ROOT }
			4 = { is_controlled_by = ROOT }
			221 = { is_controlled_by = ROOT }
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_operation_wasserkoenigin"
		#Idea here
		###Maybe event of the operation going underway, to practice naval invasions, and the ponies involved having some kind of miscommunication, which leads to one of the battleships inflicting serious friendly fire, which some are more concerned about than others
	}
	ai_will_do = {
		base = 60
		modifier = {
			has_war = no
			factor = 0
		}
		modifier = {
			any_country = {
				is_justifying_wargoal_against = ROOT
				num_naval_factories > 0
			}
			add = 60
		}
	}
}

shared_focus = {
	id = SOL_variegated_survival_training
	x = 1
	y = 2
	relative_position_id = SOL_vanhoover_stations

	cost = 5
	prerequisite = {
		focus = SOL_vanhoover_stations
		focus = SOL_airfields
	}
	available = {
		85 = { is_controlled_by = ROOT }
		23 = { is_controlled_by = ROOT }
		80 = { is_controlled_by = ROOT }
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_variegated_survival_training"
		#Idea here
	}
	ai_will_do = {
		base = 70
		modifier = {
			has_war = no
			factor = 0
		}
	}
}

shared_focus = {
	id = SOL_canterlot_fort_line
	x = -1
	y = 2
	relative_position_id = SOL_changeling_menace

	cost = 5
	prerequisite = { focus = SOL_changeling_menace }
	available = {
		3 = { is_fully_controlled_by = ROOT }
		2 = { is_fully_controlled_by = ROOT }
		103 = { is_fully_controlled_by = ROOT }
		OR = {
			CHN = {
				OR = {
					exists = no
					is_subject_of = ROOT
				}
			}
			surrender_progress > 0.25
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_canterlot_fort_line"
		add_war_support = -0.1
		3 = {
			add_building_construction = {
				type = bunker
				level = 4
				instant_build = yes
				province = 179
			}
			add_building_construction = {
				type = bunker
				level = 2
				instant_build = yes
				province = 6975
			}
			add_building_construction = {
				type = bunker
				level = 2
				instant_build = yes
				province = 3764
			}
			add_building_construction = {
				type = bunker
				level = 1
				instant_build = yes
				province = 1173
			}
			add_building_construction = {
				type = bunker
				level = 1
				instant_build = yes
				province = 9738
			}
		}
		2 = {
			add_building_construction = {
				type = bunker
				level = 3
				instant_build = yes
				province = 9741
			}
			add_building_construction = {
				type = bunker
				level = 1
				instant_build = yes
				province = 776
			}
		}
		103 = {
			add_building_construction = {
				type = bunker
				level = 3
				instant_build = yes
				province = 6609
			}
			add_building_construction = {
				type = bunker
				level = 2
				instant_build = yes
				province = 6784
			}
		}
	}
	ai_will_do = {
		base = 60
		modifier = {
			has_war = no
			factor = 0
		}
		modifier = {
			surrender_progress > 0.35
			factor = 2.5
		}
	}
}

shared_focus = {
	id = SOL_combined_arms_exercises
	x = 1
	y = 4
	relative_position_id = SOL_airfields

	cost = 6
	prerequisite = {
		focus = SOL_vanhoover_stations
		focus = SOL_airfields
	}
	available = {
		3 = { is_fully_controlled_by = ROOT }
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_combined_arms_exercises"
		#Idea here
		###Maybe event of a group of soldiers following in a combined arms exercise for how to deal with breaching a changeling city, and they go a bit overboard in the amount of destruction they do
	}
	ai_will_do = {
		factor = 50
		modifier = {
			has_war = yes
			factor = 1.5
		}
	}
}

shared_focus = {
	id = SOL_defense_in_order
	x = 0
	y = 1
	relative_position_id = SOL_canterlot_fort_line

	cost = 6
	prerequisite = { focus = SOL_canterlot_fort_line }
	mutually_exclusive = { focus = SOL_tactics_of_destruction }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_defense_in_order"
		#Idea here
	}
	ai_will_do = { factor = 75 }
}

shared_focus = {
	id = SOL_tactics_of_destruction
	x = -1
	y = 2
	relative_position_id = SOL_variegated_survival_training

	cost = 6
	prerequisite = { focus = SOL_variegated_survival_training }
	mutually_exclusive = { focus = SOL_defense_in_order }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_tactics_of_destruction"
		#Idea here
	}
	ai_will_do = { factor = 90 }
}

###Military Focuses###
shared_focus = {
	id = SOL_modernize_relic
	icon = GFX_focus_generic_little_entente
	x = 51
	y = -1

	cost = 3
	available = { has_completed_focus = SOL_Imperium_Solis }
	allow_branch = {
		is_EQS_SOL = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_modernize_relic"
		army_experience = 20
		air_experience = 10
		navy_experience = 10
	}
	search_filters = { FOCUS_FILTER_ARMY_BONUS FOCUS_FILTER_AIRFORCE_BONUS FOCUS_FILTER_NAVY_BONUS }
	ai_will_do = { factor = 100 }
}

shared_focus = {
	id = SOL_establish_solaris_militarium
	x = -14
	y = 1
	relative_position_id = SOL_modernize_relic

	cost = 3
	prerequisite = { focus = SOL_modernize_relic }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_modernize_relic"
		army_experience = 30
	}
	ai_will_do = { factor = 150 }
}

shared_focus = {
	id = SOL_inspect_officers
	x = -2
	y = 1
	relative_position_id = SOL_establish_solaris_militarium

	cost = 3
	prerequisite = { focus = SOL_establish_solaris_militarium }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_inspect_officers"
		army_experience = 10
		add_political_power = 25
		add_manpower = -10000
		###Event maybe of a military police officer inspecting or raiding an officer's quarters and finding supposedly damning evidence for anti-Daybreaker activities or working with the harmonic resistance
	}
	ai_will_do = { factor = 100 }
}

shared_focus = {
	id = SOL_encourage_troops
	x = 2
	y = 1
	relative_position_id = SOL_establish_solaris_militarium

	cost = 3
	prerequisite = { focus = SOL_establish_solaris_militarium }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_modernize_relic"
		add_command_power = 50
		add_manpower = -25000
		###Event maybe of Daybreaker personally visiting some of the suspected disloyal troops, and using a couple as an example of what happens to traitors, since there is one that she knows is working with harmonists, who she uses as an example, which she first shows by an item or two from his barracks, and how it also affects the rest of his fellow soldiers, too
	}
	ai_will_do = { factor = 100 }
}

shared_focus = {
	id = SOL_break_out_blueprints
	x = -2
	y = 1
	relative_position_id = SOL_inspect_officers

	cost = 3
	prerequisite = { focus = SOL_inspect_officers }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_break_out_blueprints"
		add_tech_bonus = {
			name = armor_bonus
			uses = 1
			bonus = 1
			category = armor
		}
	}
	ai_will_do = { factor = 75 }
}

shared_focus = {
	id = SOL_rearrange_command
	x = 1
	y = 1
	relative_position_id = SOL_inspect_officers

	cost = 3
	prerequisite = { focus = SOL_inspect_officers }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_rearrange_command"
		#Idea here
	}
	ai_will_do = { factor = 100 }
}

shared_focus = {
	id = SOL_imperial_factory_tour
	x = 0
	y = 1
	relative_position_id = SOL_encourage_troops

	cost = 3
	prerequisite = { focus = SOL_encourage_troops }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_imperial_factory_tour"
		add_tech_bonus = {
			name = infantry_bonus
			uses = 1
			bonus = 1
			category = infantry_weapons
		}
	}
	ai_will_do = { factor = 75 }
}

shared_focus = {
	id = SOL_motivate_engineers
	x = 2
	y = 1
	relative_position_id = SOL_encourage_troops

	cost = 3
	prerequisite = { focus = SOL_encourage_troops }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_motivate_engineers"
		add_tech_bonus = {
			name = support_bonus
			uses = 1
			bonus = 1
			category = support_tech
		}
	}
	ai_will_do = { factor = 100 }
}

shared_focus = {
	id = SOL_prevent_embarrassments
	x = 0
	y = 1
	relative_position_id = SOL_break_out_blueprints

	cost = 4
	prerequisite = { focus = SOL_break_out_blueprints }
	mutually_exclusive = { focus = SOL_traitors_reward }
	mutually_exclusive = { focus = SOL_sun_shines }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_prevent_embarrassments"
		###Event of one of the generals who would be affected by the purge route being shown to his new office or the like, with some rather demeaning and simple work that will keep him busy, and out of the eye of the public, while still be somewhat useful
	}
	ai_will_do = { factor = 150 }
}

shared_focus = {
	id = SOL_traitors_reward
	x = 0
	y = 1
	relative_position_id = SOL_rearrange_command

	cost = 4
	prerequisite = { focus = SOL_rearrange_command }
	prerequisite = { focus = SOL_imperial_factory_tour }
	mutually_exclusive = { focus = SOL_prevent_embarrassments }
	mutually_exclusive = { focus = SOL_sun_shines }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_traitors_reward"
		###Event of Daybreaker executing one of the generals who get purged, listing of a long list of crimes, both real and fabricated, and accusing them as a harmonist conspirator, before applied a death by flame
	}
	ai_will_do = { factor = 250 }
}

shared_focus = {
	id = SOL_sun_shines
	icon = GFX_goal_solar_phoenix
	x = 0
	y = 1
	relative_position_id = SOL_imperial_factory_tour

	cost = 4
	prerequisite = { focus = SOL_motivate_engineers }
	mutually_exclusive = { focus = SOL_prevent_embarrassments }
	mutually_exclusive = { focus = SOL_traitors_reward }
	available = {
		OR = {
			has_completed_focus = SOL_empress_mother
			has_completed_focus = SOL_empress_protector
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_sun_shines"
		###Event of a general being brought forth in front of Daybreaker, who lists off a list of supposed crimes committed by them, and how she could easily have them executed and be done with it, but she is merciful, and she will overlook them for complete loyalty, and if they ever betray that mercy, she will see them suffer before their death, which gets them to agree
	}
	ai_will_do = { factor = 150 }
}

shared_focus = {
	id = SOL_new_officers
	icon = GFX_goal_eqs_military_cooperation
	cost = 7
	ai_will_do = {
		factor = 150
	}
	prerequisite = {
		focus = SOL_prevent_embarrassments
		focus = SOL_traitors_reward
		focus = SOL_sun_shines
	}
	relative_position_id = SOL_traitors_reward
	x = 0
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_new_officers"
		country_event = solarempire.11
		custom_effect_tooltip = equestria_advisors
		custom_effect_tooltip = equestria_generals
	}
}

###Grand Battleplan###
shared_focus = {
	id = SOL_safest_methods
	icon = GFX_goal_generic_position_armies
	cost = 3
	ai_will_do = {
		factor = 80
	}
	available = {
		has_completed_focus = SOL_empress_protector
	}
	prerequisite = {
		focus = SOL_new_officers
	}
	mutually_exclusive = {
		focus = SOL_hoof_of_empress
		focus = SOL_imperial_workhorses
		focus = SOL_mage_army
	}
	relative_position_id = SOL_new_officers
	x = -7
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_safest_methods"
		add_doctrine_cost_reduction = {
			name = cat_grand_battle_plan
			cost_reduction = 0.5
			uses = 1
			category = cat_grand_battle_plan
		}
	}
	search_filters = { FOCUS_FILTER_RESEARCH }
}

shared_focus = {
	id = SOL_byzantine_supply
	x = -2
	y = 1
	relative_position_id = SOL_safest_methods

	cost = 5
	prerequisite = { focus = SOL_safest_methods }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_byzantine_supply"
		###An event of a soldier's request for some kind of field supply kit being approved, but with statements on how long it will take, after filling out additional forms a through h, in triplicate, and also ensuring that his CO also signs, in triplicate, and then promises delivery in a matter of moments, through magic
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_digging_earth
	x = 0
	y = 1
	relative_position_id = SOL_safest_methods

	cost = 4
	prerequisite = { focus = SOL_safest_methods }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_digging_earth"
		add_tech_bonus = {
			name = engineers_bonus
			uses = 2
			bonus = 1
			category = engineers_tech
		}
	}
	ai_will_do = { factor = 40 }
}

shared_focus = {
	id = SOL_combined_defenses
	x = 1
	y = 1
	relative_position_id = SOL_byzantine_supply

	cost = 6
	prerequisite = { focus = SOL_byzantine_supply }
	prerequisite = { focus = SOL_digging_earth }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_combined_defenses"
		add_tech_bonus = {
			name = infantry_bonus
			bonus = 1
			uses = 2
			category = infantry_weapons
		}
		add_tech_bonus = {
			name = motorized_bonus
			bonus = 3
			uses = 1
			category = motorized_equipment
		}
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_efficient_clearing
	x = 0
	y = 1
	relative_position_id = SOL_combined_defenses

	cost = 7
	prerequisite = { focus = SOL_combined_defenses }
	mutually_exclusive = { focus = SOL_strike_iron }
	available = {
		has_war = yes
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_efficient_clearing"
		###Event of a pony going in with a flamethrower into the trenches of the enemy, and being spotted very quickly, having a panicked moment, and then starting their flamethrower, and watching in horror, since they didn't want to use such a clearly barbaric weapon, as it cleans effectively the entire trench in front of them
	}
	ai_will_do = { factor = 80 }
}

shared_focus = {
	id = SOL_generational_leaps
	x = 0
	y = 1
	relative_position_id = SOL_efficient_clearing

	cost = 5
	prerequisite = { focus = SOL_efficient_clearing }
	available = { has_war = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_generational_leaps"
		#Idea here
	}
	ai_will_do = { factor = 50 }
}

###Superior Firepower###
shared_focus = {
	id = SOL_hoof_of_empress
	icon = GFX_goal_generic_army_artillery
	cost = 3
	ai_will_do = {
		factor = 80
	}
	available = {
		has_completed_focus = SOL_empress_mother
	}
	prerequisite = {
		focus = SOL_new_officers
	}
	mutually_exclusive = {
		focus = SOL_safest_methods
		focus = SOL_imperial_workhorses
		focus = SOL_mage_army
	}
	relative_position_id = SOL_new_officers
	x = -3
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_hoof_of_empress"
		add_doctrine_cost_reduction = {
			name = cat_superior_firepower
			cost_reduction = 0.5
			uses = 2
			category = cat_superior_firepower
		}
	}
	search_filters = { FOCUS_FILTER_RESEARCH }
}

shared_focus = {
	id = SOL_showering_battlefield
	icon = GFX_goal_generic_army_artillery2
	cost = 4
	ai_will_do = {
		factor = 30
	}
	prerequisite = {
		focus = SOL_hoof_of_empress
	}
	relative_position_id = SOL_hoof_of_empress
	x = 0
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_showering_battlefield"
		add_tech_bonus = {
			name = artillery_bonus
			bonus = 1
			uses = 2
			category = artillery
		}
	}
	search_filters = { FOCUS_FILTER_RESEARCH }
}

shared_focus = {
	id = SOL_combined_assaults
	icon = GFX_goal_generic_army_motorized
	cost = 6
	ai_will_do = {
		factor = 40
	}
	prerequisite = {
		focus = SOL_showering_battlefield
	}
	mutually_exclusive = { focus = SOL_invincible_spotlights }
	relative_position_id = SOL_showering_battlefield
	x = 0
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_combined_assaults"
		add_tech_bonus = {
			name = infantry_bonus
			bonus = 1
			uses = 1
			category = infantry_weapons
		}
		add_tech_bonus = {
			name = motorized_bonus
			bonus = 1
			uses = 2
			category = cat_mechanized_equipment
			category = motorized_equipment
			ahead_reduction = 0.5
		}
	}
	search_filters = { FOCUS_FILTER_RESEARCH }
}

shared_focus = {
	id = SOL_holy_napalm_applications
	x = -1
	y = 1
	relative_position_id = SOL_combined_assaults

	cost = 5
	prerequisite = { focus = SOL_combined_assaults }
	available = { has_war = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_holy_napalm_applications"
		#Idea here
		###Maybe event of some of the first napalm shell strike tests, and how they are incredibly effective, and also completely and utterly mentally scarring for the operators as they see their handiwork, which has left swaths of a battlefield completely aflame, and later reports indicate how burnt the soldiers were that were killed, which horrifies them
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_war_games
	icon = GFX_goal_generic_army_doctrines
	cost = 7
	ai_will_do = {
		factor = 45
	}
	prerequisite = {
		focus = SOL_holy_napalm_applications
	}
	prerequisite = { focus = SOL_mundane_magic }
	relative_position_id = SOL_holy_napalm_applications
	x = 1
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_war_games"
		#Idea here
		add_doctrine_cost_reduction = {
			name = cat_superior_firepower
			cost_reduction = 0.5
			uses = 1
			category = cat_superior_firepower
		}
	}
	search_filters = { FOCUS_FILTER_RESEARCH }
}

###Mass Assault###
shared_focus = {
	id = SOL_imperial_workhorses
	icon = GFX_goal_generic_more_territorial_claims
	cost = 3
	ai_will_do = {
		factor = 80
	}
	available = {
		has_completed_focus = SOL_god_empress
	}
	prerequisite = {
		focus = SOL_new_officers
	}
	mutually_exclusive = {
		focus = SOL_hoof_of_empress
		focus = SOL_safest_methods
		focus = SOL_mage_army
	}
	relative_position_id = SOL_new_officers
	x = 3
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_imperial_workhorses"
		add_doctrine_cost_reduction = {
			name = cat_mass_assault
			cost_reduction = 0.5
			uses = 2
			category = cat_mass_assault
		}
	}
	search_filters = { FOCUS_FILTER_RESEARCH }
}

shared_focus = {
	id = SOL_accept_truth
	icon = GFX_goal_generic_army_tanks
	cost = 4
	ai_will_do = {
		factor = 60
	}
	prerequisite = {
		focus = SOL_imperial_workhorses
	}
	relative_position_id = SOL_imperial_workhorses
	x = -1
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_accept_truth"
		add_tech_bonus = {
			name = armor_bonus
			bonus = 1
			uses = 2
			category = armor
		}
	}
	search_filters = { FOCUS_FILTER_RESEARCH }
}

shared_focus = {
	id = SOL_operational_art
	icon = GFX_goal_generic_army_doctrines
	cost = 3
	ai_will_do = {
		factor = 30
	}
	prerequisite = {
		focus = SOL_accept_truth
	}
	mutually_exclusive = { focus = SOL_streamlined_firearms }
	relative_position_id = SOL_accept_truth
	x = 0
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_operational_art"
		add_doctrine_cost_reduction = {
			name = cat_mass_assault
			cost_reduction = 0.5
			uses = 1
			category = cat_mass_assault
		}
	}
	search_filters = { FOCUS_FILTER_RESEARCH }
}

shared_focus = {
	id = SOL_streamlined_firearms
	icon = GFX_goal_continuous_reduce_training_time
	cost = 5
	ai_will_do = {
		factor = 60
	}
	prerequisite = {
		focus = SOL_accept_truth
	}
	mutually_exclusive = { focus = SOL_operational_art }
	relative_position_id = SOL_accept_truth
	x = 2
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_streamlined_firearms"
		###Potentially an event of how much has been gutted from what to include in a gun, although it's nothing essential, so that the guns are basically just nothing more than sticks with some basic parts and the like to throw bullets at the enemy
		add_ideas = SOL_pb_inf_idea
	}
	search_filters = { FOCUS_FILTER_ARMY_BONUS }
}

shared_focus = {
	id = SOL_only_statistics
	x = -1
	y = 2
	relative_position_id = SOL_operational_art

	cost = 5
	prerequisite = { focus = SOL_operational_art }
	available = { has_war = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_only_statistics"
		#Idea here
		###Maybe event of reports of how many have been killed in some of the latest conflicts, but how there are so many more which can be taken from their families to happily serve the God-Empress and die keeping her safe and the hope of Order and Harmony alive; the ponies aren't even acknowledged as sentient beings, merely tools
	}
	ai_will_do = { factor = 75 }
}

shared_focus = {
	id = SOL_melt_shroud
	x = 1
	y = 1
	relative_position_id = SOL_operational_art

	cost = 6
	prerequisite = {
		focus = SOL_operational_art
		focus = SOL_streamlined_firearms
	}
	available = { has_war = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_melting_shroud"
		#Idea here
		###Maybe event of some soldiers going along with a flame tank division through an urban area, and being ambushed but soon dispatching of the ambushers with the help of the tanks, after the killed operator is taken out to then be driven by somepony else and melt all those that oppose them
	}
	ai_will_do = { factor = 75 }
}

shared_focus = {
	id = SOL_reduced_standards
	x = 1
	y = 2
	relative_position_id = SOL_streamlined_firearms

	cost = 5
	prerequisite = { focus = SOL_streamlined_firearms }
	available = { has_war = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_reduced_standards"
		###Event of a soldier on the battlefield after his gun jammed, and he manages to find another gun that is on a dead comrade, but that breaks after firing once, and then soon finding another, and another, each with their own problems, which may lead to a few dead foes, but still leaves him defenseless in the end
		#Idea here
	}
	ai_will_do = { factor = 50 }
}

###Mage Army###
shared_focus = {
	id = SOL_mage_army
	icon = GFX_goal_generic_special_forces
	cost = 4
	ai_will_do = {
		factor = 60
	}
	prerequisite = {
		focus = SOL_new_officers
	}
	mutually_exclusive = {
		focus = SOL_hoof_of_empress
		focus = SOL_safest_methods
		focus = SOL_imperial_workhorses
	}
	relative_position_id = SOL_new_officers
	x = 7
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_mage_army"
		add_doctrine_cost_reduction = {
			name = land_doc_bonus
			cost_reduction = 0.33
			uses = 2
			category = land_doctrine
		}
	}
	search_filters = { FOCUS_FILTER_RESEARCH }
}

shared_focus = {
	id = SOL_mysterious_magic
	icon = GFX_goal_continuous_research
	cost = 5
	ai_will_do = {
		factor = 50
	}
	prerequisite = {
		focus = SOL_mage_army
	}
	relative_position_id = SOL_mage_army
	x = 1
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_mysterious_magic"
		add_tech_bonus = {
			name = unicorn_bonus2
			bonus = 1.25
			uses = 2
			category = magical_tech
		}
	}
	search_filters = { FOCUS_FILTER_RESEARCH }
}

shared_focus = {
	id = SOL_evocation_schools
	x = 0
	y = 1
	relative_position_id = SOL_mysterious_magic

	cost = 6
	prerequisite = { focus = SOL_mysterious_magic }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_evocation_schools"
		###Event of a unicorn learning fire magic at one of Daybreaker's new schools, which leads to both awe and fear, as they test some of their skills on some test dummies, which are utterly consumed; they are quite good at fire magic, which worries their teachers, since they almost seem to be enjoying it
	}
	ai_will_do = { factor = 75 }
}

shared_focus = {
	id = SOL_magitech_integration
	icon = GFX_focus_secret_rearmament
	cost = 5
	ai_will_do = {
		factor = 70
	}
	prerequisite = {
		focus = SOL_mysterious_magic
	}
	relative_position_id = SOL_mysterious_magic
	x = 2
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_magitech_integration"
		add_ideas = SOL_pb_magic_idea
	}
}

shared_focus = {
	id = SOL_magical_adaptations
	icon = GFX_goal_generic_army_doctrines
	cost = 7
	ai_will_do = {
		factor = 30
	}
	prerequisite = {
		focus = SOL_evocation_schools
	}
	mutually_exclusive = { focus = SOL_mighty_hoofs }
	available = { has_war = yes }
	relative_position_id = SOL_evocation_schools
	x = 0
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_magical_adaptations"
		add_doctrine_cost_reduction = {
			name = land_doc_bonus
			cost_reduction = 0.33
			uses = 2
			category = land_doctrine
		}
	}
	search_filters = { FOCUS_FILTER_RESEARCH }
}

shared_focus = {
	id = SOL_next_gen_spells
	x = 0
	y = 2
	relative_position_id = SOL_magitech_integration

	cost = 6
	prerequisite = { focus = SOL_magical_adaptations }
	prerequisite = { focus = SOL_magitech_integration }
	available = { has_war = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_next_gen_spells"
		###Event of a scientist or two recording their thoughts on the new spell crystals being used in the prototype MEWs, which they record coldly on how it affects flesh, bone, and other aspects of a pony's body, and also how there's only a slight chance of explosion in the operator's face, but can give some nice scars to talk about with the mares (or stallions if a mare)
	}
	ai_will_do = { factor = 70 }
}

###Open Doctrine Paths###
shared_focus = {
	id = SOL_communication_key
	x = 2
	y = 1
	relative_position_id = SOL_digging_earth

	cost = 4
	prerequisite = {
		focus = SOL_digging_earth
		focus = SOL_showering_battlefield
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_communication_key"
		add_tech_bonus = {
			name = electronics_bonus
			uses = 2
			bonus = 1
			category = electronics
		}
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_strike_iron
	x = -1
	y = 1
	relative_position_id = SOL_communication_key

	cost = 6
	prerequisite = { focus = SOL_communication_key }
	mutually_exclusive = { focus = SOL_efficient_clearing }
	available = { has_war = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_strike_iron"
		###An event of some troops desperately trying to fight back against an enemy assault of their lines, and asking where their reinforcements are at, and as the enemy continues to advance, they believe that they'll be overrun, before the cavalry arrives with motorized divisions and start to push back the opposing forces (has to be generic)
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_rapid_reloads
	x = 3
	y = 1
	relative_position_id = SOL_hoof_of_empress

	cost = 5
	prerequisite = {
		focus = SOL_hoof_of_empress
		focus = SOL_imperial_workhorses
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_rapid_reloads"
		#Idea here
		###Possibly event of some of the dangers of how much the artillery corps is pushed to inflict more damage upon the enemy, in a specific series of field tests or the like, which ends up injuring a couple of the crew, although the end results of the impacts of the weapons is undeniably impressive
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_invincible_spotlights
	x = 0
	y = 1
	relative_position_id = SOL_rapid_reloads

	cost = 4
	prerequisite = { focus = SOL_rapid_reloads }
	mutually_exclusive = { focus = SOL_combined_assaults }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_invincible_spotlights"
		add_tech_bonus = {
			name = aa_bonus
			uses = 1
			bonus = 1
			category = cat_anti_air
		}
		add_tech_bonus = {
			name = artillery_bonus
			uses = 1
			bonus = 1
			category = artillery
		}
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_mundane_magic
	x = 1
	y = 1
	relative_position_id = SOL_combined_assaults

	cost = 4
	prerequisite = {
		focus = SOL_combined_assaults
		focus = SOL_invincible_spotlights
	}
	available = { has_war = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_mundane_magic"
		add_tech_bonus = {
			name = anti_tank_bonus
			uses = 2
			bonus = 1
			category = cat_anti_tank
		}
		###Possibly event of some weapons tests with the new anti-tank weaponry, and a pony or two nearly getting sawn in half when the AP rounds go farather than expected through the armor
	}
	ai_will_do = { factor = 40 }
}

shared_focus = {
	id = SOL_mobile_cannons
	x = 1
	y = 1
	relative_position_id = SOL_imperial_workhorses

	cost = 5
	prerequisite = {
		focus = SOL_imperial_workhorses
		focus = SOL_mage_army
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_mobile_cannons"
		add_tech_bonus = {
			name = heavy_tank_bonus
			uses = 2
			bonus = 1
			category = cat_heavy_armor
		}
	}
	ai_will_do = { factor = 40 }
}

shared_focus = {
	id = SOL_speedy_fields
	x = -1
	y = 1
	relative_position_id = SOL_mage_army

	cost = 4
	prerequisite = {
		focus = SOL_imperial_workhorses
		focus = SOL_mage_army
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_speedy_fields"
		add_tech_bonus = {
			name = motorized_bonus
			uses = 1
			bonus = 3
			category = motorized_equipment
		}
	}
	ai_will_do = { factor = 40 }
}

shared_focus = {
	id = SOL_mighty_hoofs
	x = 0
	y = 2
	relative_position_id = SOL_speedy_fields

	cost = 5
	prerequisite = { focus = SOL_speedy_fields }
	mutually_exclusive = { focus = SOL_magical_adaptations }
	available = { has_war = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_mighty_hoofs"
		#Idea here
		###Possibly event of following a tank commander as he prepares to storm a city, without a care for the civilians or buildings he'll destroy, as they have sealed their fate already by working with the enemy
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_modernized_knights
	x = 1
	y = 1
	relative_position_id = SOL_mighty_hoofs

	cost = 6
	prerequisite = { focus = SOL_mighty_hoofs }
	available = { has_war = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_modernized_knights"
		add_tech_bonus = {
			name = medium_tank_bonus
			uses = 2
			bonus = 1
			ahead_reduction = 1
			category = cat_medium_armor
		}
	}
	ai_will_do = { factor = 40 }
}

###Air Force###
shared_focus = {
	id = SOL_sky_domain
	icon = GFX_goal_generic_build_airforce
	x = 0
	y = 1
	relative_position_id = SOL_modernize_relic

	cost = 4
	prerequisite = { focus = SOL_modernize_relic }
	available = {
		OR = {
			has_completed_focus = SOL_god_empress
			has_completed_focus = SOL_empress_mother
			has_completed_focus = SOL_empress_protector
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_mighty_hoofs"
		air_experience = 50
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_abolish_wonderbolts
	x = 0
	y = 1
	relative_position_id = SOL_sky_domain

	cost = 5
	prerequisite = { focus = SOL_sky_domain }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_abolish_wonderbolts"
		###Event of the Wonderbolts headquarters in either Canterlot or Cloudsdale getting raided and ponies who serve there being arrested and those that resist executed, as they have been deemed a symbol of anti-Order activities and will be turned into something greater, and it's ensured that Spitfire knows that she will have a special place in the future air force, as a test pilot, or the like; Thunderlane was a mole who helped with the raid
		custom_effect_tooltip = available_chief_of_airforce
		show_ideas_tooltip = blaze
		custom_effect_tooltip = available_chief_of_airforce
		show_ideas_tooltip = thunderlane
		custom_effect_tooltip = available_theorist
		show_ideas_tooltip = wind_rider
		if = {
            limit = {
                has_dlc = "By Blood Alone"
            }
			add_tech_bonus = {
				name = fighter_bonus
				bonus = 0.75
				uses = 1
				category = light_air
			}
			add_tech_bonus = {
				name = cat_air_guns
				bonus = 0.75
				uses = 1
				category = cat_air_guns
			}
		}
		else = {
			add_tech_bonus = {
				name = fighter_bonus
				bonus = 0.75
				uses = 1
				category = light_fighter
				category = cat_heavy_fighter
			}
		}
	}
	search_filters = { FOCUS_FILTER_AIRFORCE_BONUS FOCUS_FILTER_RESEARCH }
}

shared_focus = {
	id = SOL_striking_battlefield
	x = -4
	y = 1
	relative_position_id = SOL_abolish_wonderbolts

	cost = 5
	prerequisite = { focus = SOL_abolish_wonderbolts }
	mutually_exclusive = { focus = SOL_punishing_world }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_striking_battlefield"
		add_doctrine_cost_reduction = {
			name = battlefield_support_bonus
			uses = 2
			cost_reduction = 0.5
			category = cat_battlefield_support
		}
	}
	ai_will_do = {
		factor = 50
		modifier = {
			has_completed_focus = SOL_god_empress
			factor = 2
		}
	}
}

shared_focus = {
	id = SOL_punishing_world
	x = 4
	y = 1
	relative_position_id = SOL_abolish_wonderbolts

	cost = 5
	prerequisite = { focus = SOL_abolish_wonderbolts }
	mutually_exclusive = { focus = SOL_striking_battlefield }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_punishing_world"
		add_doctrine_cost_reduction = {
			name = strategic_destruction_bonus
			uses = 2
			cost_reduction = 0.5
			category = cat_strategic_destruction
		}
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_durable_frames
	x = 0
	y = 1
	relative_position_id = SOL_striking_battlefield

	cost = 3
	prerequisite = { focus = SOL_striking_battlefield }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_durable_frames"
		add_tech_bonus = {
			name = cas_bonus
			bonus = 1
			uses = 1
			category = cas_bomber
		}
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_fear_tactics
	x = 2
	y = 1
	relative_position_id = SOL_striking_battlefield

	cost = 5
	prerequisite = { focus = SOL_striking_battlefield }
	mutually_exclusive = { focus = SOL_sky_flexibility }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_fear_tactics"
		###Event of some test subjects about the effects of attaching air horns to the bottom of planes as they go about a normal day, but then suddenly hear the test dive bombers, and begin to panic, and gives a couple even early signs of PTSD, since the bombers are testing everything, included dud bombs to mimic the dive bomb
	}
	ai_will_do = { factor = 75 }
}

shared_focus = {
	id = SOL_sky_flexibility
	x = 0
	y = 2
	relative_position_id = SOL_abolish_wonderbolts

	cost = 5
	prerequisite = { focus = SOL_abolish_wonderbolts }
	mutually_exclusive = { focus = SOL_fear_tactics }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_sky_flexibility"
		if = {
			limit = { has_dlc = "By Blood Alone" }
			add_tech_bonus = {
				name = fighter_bonus
				uses = 1
				bonus = 1
				category = light_air
			}
		}
		else = {
			add_tech_bonus = {
				name = fighter_bonus
				uses = 1
				bonus = 1
				category = light_fighter
			}
		}
		add_doctrine_cost_reduction = {
			name = air_doctrine_bonus
			uses = 1
			cost_reduction = 0.5
			category = air_doctrine
		}
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_streamline_expenses
	x = -1
	y = 1
	relative_position_id = SOL_punishing_world

	cost = 5
	prerequisite = { focus = SOL_punishing_world }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_streamline_expenses"
		#Idea here
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_reinforced_bomb_struts
	x = 0
	y = 1
	relative_position_id = SOL_durable_frames

	cost = 5
	prerequisite = { focus = SOL_durable_frames }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_reinforced_bomb_struts"
		if = {
			limit = { has_dlc = "By Blood Alone" }
			add_tech_bonus = {
				name = bomb_bonus
				uses = 1
				bonus = 0.75
				category = cat_air_bombs
			}
		}
		else = {
			add_tech_bonus = {
				name = bomber_bonus
				uses = 1
				bonus = 0.75
				category = tactical_bomber
			}
		}
		add_doctrine_cost_reduction = {
			name = battlefield_support_bonus
			uses = 1
			cost_reduction = 0.5
			category = cat_battlefield_support
		}
	}
	ai_will_do = { factor = 40 }
}

shared_focus = {
	id = SOL_field_tests
	x = 0
	y = 1
	relative_position_id = SOL_sky_flexibility

	cost = 5
	prerequisite = { focus = SOL_sky_flexibility }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_field_tests"
		###Event of Spitfire being strapped into another test for a prototype fighter, as part of her punishment for being tied to the Harmonists, and the experiment goes well at first, with testing early g-suits, but she soon blacks out and almost perishes in a crash, only saved by the suits durability itself
	}
	ai_will_do = { factor = 55 }
}

shared_focus = {
	id = SOL_invisible_eyes
	x = -1
	y = 1
	relative_position_id = SOL_streamline_expenses

	cost = 4
	prerequisite = { focus = SOL_sky_flexibility }
	prerequisite = { focus = SOL_streamline_expenses }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_invisible_eyes"
		if = {
			limit = { has_dlc = "By Blood Alone" }
			add_tech_bonus = {
				name = engine_bonus
				bonus = 1
				uses = 1
				category = cat_air_engine
			}
		}
		else = {
			add_tech_bonus = {
				name = fighter_bonus
				bonus = 0.5
				uses = 1
				category = light_fighter
			}
		}
		if = {
			limit = { has_dlc = "La Resistance" }
				add_tech_bonus = {
				name = scout_plane_bonus
				uses = 1
				bonus = 3
				category = cat_scout_plane
			}
		}
	}
	ai_will_do = { factor = 35 }
}

shared_focus = {
	id = SOL_adequate_defense
	x = 0
	y = 2
	relative_position_id = SOL_punishing_world

	cost = 5
	prerequisite = { focus = SOL_punishing_world }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_adequate_defense"
		if = {
			limit = { has_dlc = "By Blood Alone" }
			add_tech_bonus = {
				name = cat_air_guns
				uses = 1
				bonus = 1
				category = cat_air_guns
			}
		}
		add_tech_bonus = {
			name = heavy_fighter_bonus
			uses = 1
			bonus = 1
			category = cat_heavy_fighter
		}
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_bat_vision
	x = 2
	y = 2
	relative_position_id = SOL_punishing_world

	cost = 5
	prerequisite = { focus = SOL_punishing_world }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_bat_vision"
		#Idea here
	}
	ai_will_do = { factor = 40 }
}

shared_focus = {
	id = SOL_mimic_pegasi
	x = -1
	y = 1
	relative_position_id = SOL_reinforced_bomb_struts

	cost = 5
	prerequisite = { focus = SOL_reinforced_bomb_struts }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_mimic_pegasi"
		###Event of a new test pilot being thrown into a ground attack bomber, with improved diving brakes and the like, as well as increased maneuverability, which, after a short bit of time having fun, he does his test, and nearly crashes as he both blacks out and the automatic dive brakes fail at first, but he does manage to land after the wings are clipped by being so close to the ground, and it's deemed a success, despite almost dying
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_high_yield_explosives
	x = 0
	y = 2
	relative_position_id = SOL_fear_tactics

	cost = 4
	prerequisite = { focus = SOL_fear_tactics }
	prerequisite = { focus = SOL_reinforced_bomb_struts }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_high_yield_explosives"
		if = {
			limit = { has_dlc = "By Blood Alone" }
			add_tech_bonus = {
				name = cas_bonus
				uses = 1
				bonus = 0.75
				category = cas_bomber
			}
			add_tech_bonus = {
				name = cat_air_bombs
				uses = 1
				bonus = 1
				category = cat_air_bombs
			}
		}
		else = {
			add_tech_bonus = {
				name = cas_bonus
				uses = 1
				bonus = 1
				category = cas_bomber
				category = tactical_bomber
			}
		}
	}
	ai_will_do = { factor = 40 }
}

shared_focus = {
	id = SOL_hero_program
	x = 0
	y = 1
	relative_position_id = SOL_invisible_eyes

	cost = 6
	prerequisite = { focus = SOL_invisible_eyes }
	mutually_exclusive = { focus = SOL_flying_castles }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_hero_program"
		###Event of a propaganda piece that uses knock-off Wonderbolts, now the Solarbeams, to entice ponies to join the air force, and how they'll totally not be shot down in five seconds in war and that they will be an ace like them, and otherwise feed into the fantasy that Ace Combat taps into
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_flying_castles
	x = 0
	y = 1
	relative_position_id = SOL_adequate_defense

	cost = 6
	prerequisite = { focus = SOL_adequate_defense }
	mutually_exclusive = { focus = SOL_hero_program }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_flying_castles"
		#Idea here
		add_doctrine_cost_reduction = {
			name = strategic_destruction_bonus
			uses = 1
			cost_reduction = 0.5
			category = cat_strategic_destruction
		}
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_holy_deliverance
	x = 0
	y = 2
	relative_position_id = SOL_reinforced_bomb_struts

	cost = 5
	prerequisite = { focus = SOL_reinforced_bomb_struts }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_holy_deliverance"
		###Event of peforming napalm strikes on a suspected rebel encampment in the middle of the Empire, and the pilot grows nervous at just how effectively the new payload system has improved the craft's deadliness, which makes him hesitate before almost being shot from a pony on the ground, which motivates him to continue the bombing
	}
	ai_will_do = { factor = 70 }
}

shared_focus = {
	id = SOL_additional_prototypes
	x = -2
	y = 1
	relative_position_id = SOL_hero_program

	cost = 4
	prerequisite = { focus = SOL_hero_program }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_additional_prototypes"
		if = {
			limit = {
				has_dlc = "By Blood Alone"
			}
			add_tech_bonus = {
				name = fighter_bonus
				uses = 1
				bonus = 1
				category = light_air
			}
		}
		else = {
			add_tech_bonus = {
				name = fighter_bonus
				uses = 1
				bonus = 1
				category = light_fighter
			}
		}
		add_tech_bonus = {
			name = heavy_fighter_bonus
			uses = 1
			bonus = 1
			category = cat_heavy_fighter
		}
	}
	ai_will_do = { factor = 30 }
}

shared_focus = {
	id = SOL_fire_from_sky
	x = 1
	y = 1
	relative_position_id = SOL_hero_program

	cost = 5
	prerequisite = {
		focus = SOL_hero_program
		focus = SOL_flying_castles
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_fire_from_sky"
		###Event of Daybreaker being shown around the new napalm factory for the bombs to use for her bombers in the case of war, with statistics of what would happen if used in a widespread capacity, and Daybreaker is more than pleased, merely asking that they find a way to make them even faster, and if can burn better than ever
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_targeted_destruction
	x = -1
	y = 2
	relative_position_id = SOL_high_yield_explosives

	cost = 3
	prerequisite = {
		focus = SOL_holy_deliverance
		focus = SOL_high_yield_explosives
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_targeted_destruction"
		add_doctrine_cost_reduction = {
			name = battlefield_support_bonus
			uses = 1
			cost_reduction = 0.5
			category = cat_battlefield_support
		}
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_modern_bombers
	x = -1
	y = 2
	relative_position_id = SOL_hero_program

	cost = 4
	prerequisite = { focus = SOL_hero_program }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_modern_bombers"
		if = {
			limit = {
				has_dlc = "By Blood Alone"
			}
			add_tech_bonus = {
				name = air_modules_bonus
				bonus = 0.66
				uses = 1
				category = plane_modules_tech
			}
		}
		add_tech_bonus = {
			name = bomber_bonus
			uses = 1
			bonus = 1.25
			category = tactical_bomber
		}
	}
	ai_will_do = { factor = 30 }
}

shared_focus = {
	id = SOL_area_bombardment
	icon = GFX_goal_generic_air_doctrine
	x = 2
	y = 1
	relative_position_id = SOL_fire_from_sky

	cost = 3
	prerequisite = { focus = SOL_fire_from_sky }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_area_bombardment"
		add_doctrine_cost_reduction = {
			name = strategic_destruction_bonus
			uses = 1
			cost_reduction = 0.5
			category = cat_strategic_destruction
		}
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_deliver_death
	x = 2
	y = 1
	relative_position_id = SOL_targeted_destruction

	cost = 8
	prerequisite = { focus = SOL_targeted_destruction }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_deliver_death"
		if = {
			limit = { has_dlc = "By Blood Alone" }
			add_tech_bonus = {
				name = jet_bonus
				bonus = 1
				uses = 2
				ahead_reduction = 0.5
				technology = modern_small_airframe
				technology = modern_small_airframe_2
			}
		}
		else = {
			add_tech_bonus = {
				name = jet_bonus
				bonus = 1
				uses = 2
				ahead_reduction = 0.5
				technology = jet_fighter1
				technology = jet_fighter2
			}
		}
		add_tech_bonus = {
			name = jet_engine_bonus
			bonus = 1
			uses = 1
			ahead_reduction = 0.33
			technology = jet_engines
		}
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_desolation_engines
	x = -2
	y = 1
	relative_position_id = SOL_area_bombardment

	cost = 8
	prerequisite = { focus = SOL_area_bombardment }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_desolation_engines"
		if = {
			limit = { has_dlc = "By Blood Alone" }
			add_tech_bonus = {
				name = jet_bonus
				bonus = 1
				uses = 2
				ahead_reduction = 0.5
				technology = modern_large_airframe
				technology = modern_large_airframe_2
				technology = super_large_airframe
			}
		}
		else = {
			add_tech_bonus = {
				name = jet_bonus
				bonus = 1
				uses = 2
				ahead_reduction = 0.5
				technology = jet_strategic_bomber_a
				technology = jet_strategic_bomber_x
			}
		}
		add_tech_bonus = {
			name = jet_engine_bonus
			bonus = 1
			uses = 1
			ahead_reduction = 0.33
			technology = jet_engines
		}
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_judge_ground
	x = 0
	y = 2
	relative_position_id = SOL_targeted_destruction

	cost = 5
	prerequisite = { focus = SOL_targeted_destruction }
	mutually_exclusive = { focus = SOL_order_skies }
	mutually_exclusive = { focus = SOL_heavenly_backdrop }
	available = { has_war = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_judge_ground"
		###As a battle unfolds beneath her, a fighter pilot, leading a couple of other divebombers, takes charge of a sortie to try and free up a pinned down position near the back, and she effectively ingores all the dangers, including those that damage her plane, as she delivers a large payload of destruction against the enemy beneath her
	}
	ai_will_do = { factor = 75 }
}

shared_focus = {
	id = SOL_order_skies
	x = 2
	y = 1
	relative_position_id = SOL_deliver_death

	cost = 5
	prerequisite = {
		focus = SOL_deliver_death
		focus = SOL_desolation_engines
	}
	mutually_exclusive = { focus = SOL_judge_ground }
	mutually_exclusive = { focus = SOL_heavenly_backdrop }
	available = { has_war = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_order_skies"
		###Event of about half a dozen ponies, two different flight groups, getting into a bit of a scuffle after spending a day at the canteen in the air base, as they both believe they have the better skills, and it causes a bit of havoc as they aim to test munitions for good on some target dummies, not realizing how damaging to the base it would be
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_heavenly_backdrop
	x = 0
	y = 2
	relative_position_id = SOL_area_bombardment

	cost = 5
	prerequisite = { focus = SOL_area_bombardment }
	mutually_exclusive = { focus = SOL_judge_ground }
	mutually_exclusive = { focus = SOL_order_skies }
	available = { has_war = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_heavenly_backdrop"
		###Event of a sole pilot, as the others are sleeping overnight, as he flies high toward his destination target far into enemy territory to destroy some different targets, and he finds the beauty of the night rather haunting, especially since he's supposed to be loyal to the day, and wishes that he could spend all his time in the high altitude of flight, given how amazing it is, and to an extent regrets the damage he will have to do
	}
	ai_will_do = { factor = 75 }
}

shared_focus = {
	id = SOL_breyns_dream
	x = 0
	y = 2
	relative_position_id = SOL_deliver_death

	cost = 5
	prerequisite = {
		focus = SOL_judge_ground
		focus = SOL_order_skies
		focus = SOL_heavenly_backdrop
	}
	available = { has_war = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_breyns_dream"
		add_tech_bonus = {
			name = rocket_bonus
			uses = 2
			bonus = 1.25
			category = rocketry
		}
	}
	ai_will_do = { factor = 30 }
}

shared_focus = {
	id = SOL_project_solar_flare
	icon = GFX_focus_wonderweapons
	x = 0
	y = 2
	relative_position_id = SOL_desolation_engines

	cost = 5
	prerequisite = {
		focus = SOL_judge_ground
		focus = SOL_order_skies
		focus = SOL_heavenly_backdrop
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_project_solar_flare"
		add_tech_bonus = {
			name = secret_bonus
			uses = 2
			bonus = 1.25
			ahead_reduction = 0.75
			category = nuclear
		}
	}
	ai_will_do = { factor = 30 }
}

shared_focus = {
	id = SOL_skyborn
	x = 0
	y = 2
	relative_position_id = SOL_order_skies

	cost = 7
	prerequisite = {
		focus = SOL_judge_ground
		focus = SOL_order_skies
		focus = SOL_heavenly_backdrop
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_skyborn"
		#Idea here
	}
}

###Navy###
shared_focus = {
	id = SOL_rebuild_admiralty
	x = 14
	y = 1
	relative_position_id = SOL_modernize_relic

	cost = 4
	prerequisite = { focus = SOL_modernize_relic }
	available = {
		OR = {
			has_completed_focus = SOL_god_empress
			has_completed_focus = SOL_empress_mother
			has_completed_focus = SOL_empress_protector
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_skyborn"
		navy_experience = 50
	}
	ai_will_do = { factor = 40 }
}

shared_focus = {
	id = SOL_scraping_barrels
	x = -2
	y = 1
	relative_position_id = SOL_rebuild_admiralty

	cost = 7
	prerequisite = { focus = SOL_rebuild_admiralty }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_scraping_barrels"
		###Event of Daybreaker meeting with some of the new admiralty to see what the state of the Imperial Navy is, since other nations around them are also building to a larger standard, and she knows that the Navy has been neglected, despite its size, and they are a bit nervous, since they only have some mothballs to help in the meantime, and she isn't impressed, but sadly accepts they need them as protection, and agrees after she sees how inadequate they are
	}
	ai_will_do = { factor = 40 }
}

shared_focus = {
	id = SOL_saltless_blood
	x = 1
	y = 1
	relative_position_id = SOL_rebuild_admiralty

	cost = 6
	prerequisite = { focus = SOL_rebuild_admiralty }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_saltless_blood"
		###Event of an eager new captain being met by Daybreaker, who grills them to see if they are truly ready for any of the dangers of the sea, including going down with the ship, which scares them, but she does agree in the end; alternately a live fire drill with Daybreaker watching some of the new captains handle the situation
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_practical_needs
	x = 0
	y = 2
	relative_position_id = SOL_rebuild_admiralty

	cost = 4
	prerequisite = { focus = SOL_rebuild_admiralty }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_practical_needs"
		add_tech_bonus = {
			name = dd_bonus
			uses = 2
			bonus = 1
			category = dd_tech
		}
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_strong_dissuasion
	x = 2
	y = 2
	relative_position_id = SOL_rebuild_admiralty

	cost = 4
	prerequisite = { focus = SOL_rebuild_admiralty }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_strong_dissuasion"
		add_tech_bonus = {
			name = cl_bonus
			uses = 1
			bonus = 1
			category = cl_tech
		}
		add_tech_bonus = {
			name = ca_bonus
			uses = 1
			bonus = 1
			category = ca_tech
		}
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_surrender_waves
	x = -2
	y = 1
	relative_position_id = SOL_practical_needs

	cost = 5
	prerequisite = {
		focus = SOL_practical_needs
		focus = SOL_strong_dissuasion
	}
	mutually_exclusive = { focus = SOL_crushing_sea }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_surrender_waves"
		add_doctrine_cost_reduction ={
			name = base_strike_bonus
			uses = 2
			cost_reduction = 0.5
			category = cat_base_strike
		}
	}
	ai_will_do = {
		factor = 60
		modifier = {
			has_completed_focus = SOL_god_empress
			factor = 0
		}
	}
}

shared_focus = {
	id = SOL_crushing_sea
	x = 2
	y = 1
	relative_position_id = SOL_practical_needs

	cost = 5
	prerequisite = {
		focus = SOL_practical_needs
		focus = SOL_strong_dissuasion
	}
	mutually_exclusive = { focus = SOL_surrender_waves }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_crushing_sea"
		add_doctrine_cost_reduction = {
			name = fleet_in_being_bonus
			uses = 2
			cost_reduction = 0.5
			category = cat_fleet_in_being
		}
	}
	ai_will_do = { factor = 80 }
}

shared_focus = {
	id = SOL_mobile_airfields
	x = -2
	y = 1
	relative_position_id = SOL_surrender_waves

	cost = 4
	prerequisite = { focus = SOL_surrender_waves }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_mobile_airfields"
		###Event of Daybreaker being shown some of the first of a new line of carriers, which she isn't normally much of a fan of, but it does include a small firepower demonstration, plus the destruction of targets they set up, which does actually impress her, especially since it is more effective than a battleship
		add_tech_bonus = {
			name = cv_bonus
			uses = 2
			bonus = 1
			category = cv_tech
		}
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_fillydelphia_rivalry
	x = 0
	y = 1
	relative_position_id = SOL_surrender_waves

	cost = 5
	prerequisite = { focus = SOL_surrender_waves }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_fillydelphia_rivalry"
		###Maybe short event of some production foreman for a new navy contract calling up a rival in Manehattan, to just rub into their face about how Fillydelphia is going to outproduce Manehattan with the new designs that the Empire wants, and how that makes them better
		12 = {
			add_extra_state_shared_building_slots = 3
			add_building_construction = {
				type = dockyard
				level = 3
				instant_build = yes
			}
			add_building_construction = {
				type = naval_base
				level = 4
				instant_build = yes
				province = 950
			}
		}
	}
	ai_will_do = { factor = 70 }
}

shared_focus = {
	id = SOL_semper_fi
	x = 0
	y = 2
	relative_position_id = SOL_practical_needs

	cost = 5
	prerequisite = { focus = SOL_practical_needs }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_semper_fi"
		add_tech_bonus = {
			name = marine_bonus
			bonus = 1
			uses = 2
			category = marine_tech
		}
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_expand_manehattan_dockyards
	x = 0
	y = 1
	relative_position_id = SOL_crushing_sea

	cost = 5
	prerequisite = { focus = SOL_crushing_sea }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_expand_manehattan_dockyards"
		###Maybe short event of some ponies being inspected on the new dockyards by one of the ponies from the military, and the pony being overly nitpicky about all the details, since it has to be perfect for the Empress
		75 = {
			add_extra_state_shared_building_slots = 3
			add_building_construction = {
				type = dockyard
				level = 3
				instant_build = yes
			}
			add_building_construction = {
				type = naval_base
				level = 4
				instant_build = yes
				province = 11710
			}
		}
	}
	ai_will_do = { factor = 70 }
}

shared_focus = {
	id = SOL_first_rates
	x = 2
	y = 1
	relative_position_id = SOL_crushing_sea

	cost = 4
	prerequisite = { focus = SOL_crushing_sea }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_first_rates"
		add_tech_bonus = {
			name = bb_bonus
			bonus = 1
			uses = 2
			category = bb_tech
		}
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_birds_of_water
	x = -2
	y = 1
	relative_position_id = SOL_mobile_airfields

	cost = 5
	prerequisite = { focus = SOL_mobile_airfields }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_birds_of_water"
		###Maybe short event of a new pilot being trained on carrier aircraft coming in for a landing and nearly crashing, which gets dramatic since it is the second or third pass, and he almost falls off on it, but manages to land it in the end
		if = {
			limit = { has_dlc = "By Blood Alone" }
			add_tech_bonus = {
				name = naval_air
				uses = 1
				bonus = 1
				category = naval_air
			}
			add_tech_bonus = {
				name = plane_modules_tech
				uses = 1
				bonus = 1
				category = plane_modules_tech
			}
		}
		else = {
			add_tech_bonus = {
				name = naval_bomber
				uses = 1
				bonus = 1
				category = naval_bomber
			}
		}
	}
	ai_will_do = { factor = 40 }
}

shared_focus = {
	id = SOL_modern_sea
	x = 0
	y = 1
	relative_position_id = SOL_mobile_airfields

	cost = 3
	prerequisite = { focus = SOL_mobile_airfields }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_modern_sea"
		add_doctrine_cost_reduction = {
			name = base_strike_bonus
			uses = 1
			cost_reduction = 0.5
			category = cat_base_strike
		}
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_grand_expeditions
	x = 0
	y = 1
	relative_position_id = SOL_semper_fi

	cost = 4
	prerequisite = { focus = SOL_semper_fi }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_grand_expeditions"
		add_tech_bonus = {
			name = tp_bonus
			uses = 2
			bonus = 1
			category = tp_tech
		}
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_imperial_dreadnoughts
	x = 0
	y = 2
	relative_position_id = SOL_first_rates

	cost = 5
	prerequisite = { focus = SOL_first_rates }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_imperial_dreadnoughts"
		###Event of a new battleship captain, who is still a bit eager to prove his worth, finding the base of some pirates, promising them amnesty, just so he could get them out on the field, and then begins to shower them with shells, which he enjoys to a perturbing degree, since he feels invincible in his battleship
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_floating_cities
	x = 1
	y = 1
	relative_position_id = SOL_birds_of_water

	cost = 7
	prerequisite = { focus = SOL_birds_of_water }
	prerequisite = { focus = SOL_modern_sea }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_floating_cities"
		#Idea here
		add_tech_bonus = {
			name = cv_bonus
			uses = 1
			bonus = 1
			category = cv_tech
		}
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_roach_guards
	x = 0
	y = 1
	relative_position_id = SOL_grand_expeditions

	cost = 7
	prerequisite = { focus = SOL_grand_expeditions }
	mutually_exclusive = { focus = SOL_magisteel_plating }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_roach_guards"
		#Idea here
		add_doctrine_cost_reduction = {
			name = naval_doctrine_bonus
			uses = 1
			cost_reduction = 0.5
			category = naval_doctrine
		}
	}
	ai_will_do = { factor = 40 }
}

shared_focus = {
	id = SOL_magisteel_plating
	x = 0
	y = 2
	relative_position_id = SOL_expand_manehattan_dockyards

	cost = 7
	prerequisite = { focus = SOL_expand_manehattan_dockyards }
	mutually_exclusive = { focus = SOL_roach_guards }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_magisteel_plating"
		add_doctrine_cost_reduction = {
			name = fleet_in_being_bonus
			uses = 1
			cost_reduction = 0.5
			category = cat_fleet_in_being
		}
		#Idea here
	}
	ai_will_do = { factor = 80 }
}

shared_focus = {
	id = SOL_swarms_upon_sea
	x = 0
	y = 3
	relative_position_id = SOL_fillydelphia_rivalry

	cost = 5
	prerequisite = { focus = SOL_fillydelphia_rivalry }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_swarms_upon_sea"
		add_tech_bonus = {
			name = cv_bonus
			uses = 1
			bonus = 1
			category = cv_tech
		}
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_old_guns
	x = 0
	y = 1
	relative_position_id = SOL_magisteel_plating

	cost = 5
	prerequisite = { focus = SOL_imperial_dreadnoughts }
	prerequisite = {
		focus = SOL_roach_guards
		focus = SOL_magisteel_plating
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_old_guns"
		add_tech_bonus = {
			name = bb_bonus
			uses = 1
			bonus = 1
			category = bb_tech
		}
		add_doctrine_cost_reduction = {
			name = fleet_in_being_bonus
			uses = 1
			cost_reduction = 0.5
			category = cat_fleet_in_being
		}
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_practical_reductions
	x = 0
	y = 2
	relative_position_id = SOL_imperial_dreadnoughts

	cost = 5
	prerequisite = { focus = SOL_imperial_dreadnoughts }
	mutually_exclusive = { focus = SOL_sea_fortress }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_practical_reductions"
		#Idea here
	}
	ai_will_do = { factor = 30 }
}

shared_focus = {
	id = SOL_sea_fortress
	x = 2
	y = 2
	relative_position_id = SOL_imperial_dreadnoughts

	cost = 5
	prerequisite = { focus = SOL_imperial_dreadnoughts }
	mutually_exclusive = { focus = SOL_practical_reductions }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_sea_fortress"
		###Perhaps event of Daybreaker being given a blueprint presentation of the Daybreak-class superheavy, as a way to impress her, and also gain her good graces by a designer from Manehattan, who had been accused of anti-Order activities, and she is indeed suitably impressed, although asks if it can come in orange as a joke
		add_tech_bonus = {
			name = shbb_bonus
			uses = 1
			bonus = 2
			category = shbb_tech
		}
		custom_effect_tooltip = SOL_biggest_guns_tt #Mention that player will get a design once researched (or already researched), and one production line of Daybreak-Class at 50% completion
	}
	ai_will_do = { factor = 100 }
}

shared_focus = {
	id = SOL_adapt_tide
	x = 1
	y = 1
	relative_position_id = SOL_swarms_upon_sea

	cost = 5
	prerequisite = { focus = SOL_swarms_upon_sea }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_adapt_tide"
		#Idea here
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_steady_going
	x = -1
	y = 1
	relative_position_id = SOL_old_guns

	cost = 5
	prerequisite = { focus = SOL_old_guns }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_steady_going"
		#Idea here
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_sun_never_sets
	x = 1
	y = 1
	relative_position_id = SOL_adapt_tide

	cost = 6
	prerequisite = {
		focus = SOL_adapt_tide
		focus = SOL_steady_going
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_sun_never_sets"
		###Event of Daybreaker stepping upon the Daybreak, and going out to see to experience the waves at her hooftips once more, which makes her feel freer. Freer to test her weaponry, since she knows she's gathering a crowd, and she wants to make sure she impresses them, and if there are a few bits of collateral damage, she can live with it if it means that Order is maintained
	}
	ai_will_do = { factor = 70 }
}

###Industry###
shared_focus = {
	id = SOL_tabulate_ponies
	x = 0
	y = 1
	relative_position_id = examine_the_situation

	cost = 4
	prerequisite = { focus = examine_the_situation }
	available = { eqs_not_has_civil_war = yes }
	allow_branch = { is_EQS_SOL = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_tabulate_ponies"
		add_political_power = 100
		add_stability = 0.05
	}
	ai_will_do = { factor = 70 }
}

shared_focus = {
	id = SOL_transequestrian_raillines
	icon = GFX_goal_rct_fancy_train
	cost = 5
	dynamic = yes
	ai_will_do = { factor = 80 }
	prerequisite = {
		focus = examine_the_situation
	}
	available = {
		eqs_not_has_civil_war = yes
	}
	allow_branch = { is_EQS_SOL = yes }
	bypass = { has_completed_focus = transequestrian_raillines }
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus transequestrian_raillines"
			build_railway = {
                level = 2
				start_province = 9887
                target_province = 11754
                build_only_on_allied = yes
            }
	}
	search_filters = { FOCUS_FILTER_INDUSTRY }
	relative_position_id = examine_the_situation
	x = 4
	y = 1

}

shared_focus = {
	id = SOL_need_to_reinovate
	icon = GFX_goal_industrial_pony
	cost = 7
	ai_will_do = { factor = 80 }
	prerequisite = {
		focus = examine_the_situation
	}
	available = {
		eqs_not_has_civil_war = yes
	}
	allow_branch = { is_EQS_SOL = yes }
	relative_position_id = examine_the_situation
	x = 7
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus need_to_reinovate"
		add_tech_bonus = {
			name = industrial_bonus
			bonus = 1.0
			uses = 2
			category = industry
		}
		add_resource = {
			type = steel
			amount = 15
			state = 157
		}
	}
	search_filters = { FOCUS_FILTER_INDUSTRY FOCUS_FILTER_RESEARCH }

}

shared_focus = {
	id = SOL_industry_manehattan
	icon = GFX_goal_generic_construct_civ_factory
	cost = 10.00
	ai_will_do = { factor = 100 }
	prerequisite = {
		focus = SOL_tabulate_ponies
	}
	available = {
		eqs_not_has_civil_war = yes
		75 = { is_owned_and_controlled_by = ROOT }
	}
	cancel_if_invalid = yes
	continue_if_invalid = no
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus industry_manehattan"
		75 = {	add_extra_state_shared_building_slots = 3
			add_building_construction = {
				type = industrial_complex
				level = 3
				instant_build = yes
			}
		}
		add_resource = {
			type = steel
			amount = 10
			state = 75
		}
	}
	search_filters = { FOCUS_FILTER_INDUSTRY }
	relative_position_id = SOL_tabulate_ponies
	x = -2
	y = 1
}

shared_focus = {
	id = SOL_industry_las_pegasus
	icon = GFX_goal_generic_consumer_goods
	cost = 10.00
	ai_will_do = { factor = 75 }
	prerequisite = { focus = SOL_tabulate_ponies }
	available = {
		eqs_not_has_civil_war = yes
		66 = { is_owned_and_controlled_by = ROOT }
	}
	cancel_if_invalid = yes
	continue_if_invalid = no
	relative_position_id = SOL_tabulate_ponies
	x = 3
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus industry_las_pegasus"
		66 = {	add_extra_state_shared_building_slots = 3
			add_building_construction = {
				type = industrial_complex
				level = 3
				instant_build = yes
			}
		}
	}
	search_filters = { FOCUS_FILTER_INDUSTRY FOCUS_FILTER_RESEARCH }
}

shared_focus = {
	id = SOL_manehattan_line
	icon = GFX_goal_generic_construct_infrastructure
	cost = 7
	ai_will_do = { factor = 70 }
	prerequisite = { focus = SOL_transequestrian_raillines }
	available = {
		eqs_not_has_civil_war = yes
	}
	bypass = { has_completed_focus = manehattan_line }
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus manehattan_line"
			build_railway = {
                level = 2
				start_province = 950
                target_province = 758
                build_only_on_allied = yes
            }
			build_railway = {
                level = 2
				start_province = 758
                target_province = 874
                build_only_on_allied = yes
            }
			build_railway = {
                level = 2
				start_province = 874
                target_province = 11052
                build_only_on_allied = yes
            }
			build_railway = {
                level = 2
				start_province = 11052
                target_province = 9208
                build_only_on_allied = yes
            }
			build_railway = {
                level = 2
				start_province = 9208
                target_province = 3162
                build_only_on_allied = yes
            }
            75 = {
				add_building_construction = {
					type = supply_node
					level = 1
					instant_build = yes
					province = 970
				}
            }
	}
	search_filters = { FOCUS_FILTER_INDUSTRY }
	relative_position_id = SOL_transequestrian_raillines
	x = 1
	y = 1

}

shared_focus = {
	id = SOL_mil_industry_fillydelphia
	icon = GFX_goal_eqs_fillydelphia_cars
	cost = 10.00
	ai_will_do = { factor = 70 }
	prerequisite = {
		focus = SOL_need_to_reinovate
	}
	available = {
		eqs_not_has_civil_war = yes
		12 = { is_owned_and_controlled_by = ROOT }
	}
	cancel_if_invalid = yes
	continue_if_invalid = no
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus mil_industry_fillydelphia"
		12 = {	add_extra_state_shared_building_slots = 6
			add_building_construction = {
				type = arms_factory
				level = 6
				instant_build = yes
			}
		}
	}
	search_filters = { FOCUS_FILTER_INDUSTRY }
	relative_position_id = SOL_need_to_reinovate
	x = 0
	y = 1

}

shared_focus = {
	id = SOL_Spitfire_research
	icon = GFX_goal_generic_air_fighter2
	cost = 7
	ai_will_do = { factor = 80 }
	prerequisite = {
		focus = SOL_need_to_reinovate
	}
	available = {
		eqs_not_has_civil_war = yes
	}
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus Spitfire_research"
		74 = { add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = arms_factory
				level = 1
				instant_build = yes
			}
		}
		if = {
            limit = {
                has_dlc = "By Blood Alone"
            }
			add_tech_bonus = {
				name = fighter_bonus
				bonus = 0.75
				uses = 1
				ahead_reduction = 2
				category = light_air
				category = medium_air
			}
			add_tech_bonus = {
				name = cat_air_guns
				bonus = 0.75
				uses = 1
				category = cat_air_guns
			}
		}
		else = {
			add_tech_bonus = {
				name = fighter_bonus
				bonus = 1.0
				uses = 1
				ahead_reduction = 2
				category = light_fighter
				category = cat_heavy_fighter
			}
		}
		if = {
			limit = {
				has_dlc = "By Blood Alone"
			}
			if = {
				limit = {
					has_tech = basic_small_airframe
				}
				EQS_add_hawker_hurricane_template = yes
				EQS_add_hawker_sea_hurricane_template = yes
				EQS_add_blackburn_skua_template = yes
			}
			else = {
				custom_effect_tooltip = once_basic_small_airframe_researched_tt
				effect_tooltip = {
					EQS_add_hawker_hurricane_template = yes
					EQS_add_hawker_sea_hurricane_template = yes
					EQS_add_blackburn_skua_template = yes
				}
			}
			if = {
				limit = {
					has_tech = improved_small_airframe
				}
				EQS_add_supermarine_spitfire_template = yes
				EQS_add_supermarine_seafire_template = yes
				EQS_add_hawker_typhoon_template = yes
			}
			else = {
				custom_effect_tooltip = once_improved_small_airframe_researched_tt
				effect_tooltip = {
					EQS_add_supermarine_spitfire_template = yes
					EQS_add_supermarine_seafire_template = yes
					EQS_add_hawker_typhoon_template = yes
				}
			}
			if = {
				limit = {
					has_tech = advanced_small_airframe
				}
				EQS_add_supermarine_spiteful_template = yes
				EQS_add_hawker_tempest_template = yes
			}
			else = {
				custom_effect_tooltip = once_advanced_small_airframe_researched_tt
				effect_tooltip = {
					EQS_add_supermarine_spiteful_template = yes
					EQS_add_hawker_tempest_template = yes
				}
			}
			if = {
				limit = {
					has_tech = modern_small_airframe
				}
				EQS_add_gloster_meteor_template = yes
				EQS_add_hawker_sea_fury_template = yes
			}
			else = {
				custom_effect_tooltip = once_modern_small_airframe_researched_tt
				effect_tooltip = {
					EQS_add_gloster_meteor_template = yes
					EQS_add_hawker_sea_fury_template = yes
				}
			}
		}
	}
	search_filters = { FOCUS_FILTER_INDUSTRY FOCUS_FILTER_RESEARCH }
	relative_position_id = SOL_need_to_reinovate
	x = 2
	y = 1

}

shared_focus = { #Imperial Collegiate of Blessed Unicorns
	id = SOL_unicorn_academy_f
	icon = GFX_goal_unicorn_academy
	cost = 7
	ai_will_do = { factor = 85 }
	prerequisite = {
		focus = SOL_industry_manehattan
		focus = SOL_industry_las_pegasus
	}
	available = {
		eqs_not_has_civil_war = yes
	}
	relative_position_id = SOL_industry_manehattan
	x = 2
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_unicorn_academy_f"
		country_event = equestria.4
		effect_tooltip = {
			add_ideas = unicorn_academy
		}
	}
	search_filters = { FOCUS_FILTER_RESEARCH }
}

shared_focus = {
	id = SOL_imperial_unions
	x = 2
	y = 1
	relative_position_id = SOL_industry_las_pegasus

	cost = 5
	prerequisite = { focus = SOL_industry_las_pegasus }
	mutually_exclusive = { focus = SOL_imperial_production_committee }
	available = { eqs_not_has_civil_war = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_imperial_unions"
		#Idea here
		###Maybe event of workers of the Empire organizing in a way that is acceptable to Daybreaker, which means they really can't do that much with what they have, but they will work to do what they can; also maybe just being a busybody union worker to make trouble with factory owners
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_imperial_production_committee
	x = 0
	y = 1
	relative_position_id = SOL_mil_industry_fillydelphia

	cost = 5
	prerequisite = { focus = SOL_mil_industry_fillydelphia }
	mutually_exclusive = { focus = SOL_imperial_unions }
	available = { eqs_not_has_civil_war = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_imperial_production_committee"
		#Idea here
		###Maybe an inspector from the committee having a long chat with a bunch of workers, and using one as an example (of being fired, despite being a hard worker), of what happens when ponies fail meeting the Empress's quotas
	}
	ai_will_do = { factor = 80 }
}

shared_focus = {
	id = SOL_Matilda_research
	icon = GFX_goal_Timberwolf_research
	cost = 10.00
	ai_will_do = { factor = 60 }
	prerequisite = {
		focus = SOL_Spitfire_research
	}
	available = {
		eqs_not_has_civil_war = yes
	}
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus Matilda_research"
		12 = {	add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = arms_factory
				level = 1
				instant_build = yes
			}
		}
		add_tech_bonus = {
			name = armor_bonus
			bonus = 1
			uses = 1
			category = armor
		}
		add_tech_bonus = {
			name = armor_bonus
			bonus = 1.0
			uses = 1
			category = cat_anti_tank
		}
		custom_effect_tooltip = EQS_Timberwolf_tooltip
			if = {
				limit = {
					AND = {
						has_tech = basic_medium_tank_chassis
						has_dlc = "No Step Back"
					}
				}
					create_equipment_variant = {
						name = "Timberwolf Mk I"
						type = medium_tank_chassis_1
						parent_version = 0
						modules = {
							main_armament_slot = tank_high_velocity_cannon
							turret_type_slot = tank_medium_three_man_tank_turret
							suspension_type_slot = tank_bogie_suspension
							armor_type_slot = tank_riveted_armor
							engine_type_slot = tank_gasoline_engine
							special_type_slot_1 = tank_radio_1
							special_type_slot_2 = smoke_launchers
						}
						upgrades = {
							tank_nsb_engine_upgrade = 4
							tank_nsb_armor_upgrade = 9
						}
						icon = "gfx/interface/technologies/armour_folder/commonwealth_2d/EQS_timberwolf.dds"
					}
			}
	}
	search_filters = { FOCUS_FILTER_INDUSTRY FOCUS_FILTER_RESEARCH }
	relative_position_id = SOL_Spitfire_research
	x = 2
	y = 1

}

shared_focus = {
	id = SOL_trawl_mountain_depths
	x = -1
	y = 2
	relative_position_id = SOL_industry_manehattan

	cost = 8
	prerequisite = { focus = SOL_industry_manehattan }
	available = {
		eqs_not_has_civil_war = yes
		39 = { is_owned_and_controlled_by = ROOT }
		128 = { is_owned_and_controlled_by = ROOT }
		127 = { is_owned_and_controlled_by = ROOT }
		18 = { is_owned_and_controlled_by = ROOT }
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_trawl_mountain_depths"
		39 = {
			add_resource = {
				type = crystals
				amount = 15
			}
			add_resource = {
				type = steel
				amount = 5
			}
		}
		128 = {
			add_resource = {
				type = crystals
				amount = 5
			}
			add_resource = {
				type = steel
				amount = 5
			}
		}
		127 = {
			add_resource = {
				type = aluminium
				amount = 10
			}
		}
		18 = {
			add_resource = {
				type = aluminium
				amount = 6
			}
		}
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_magical_studies
	icon = GFX_goal_generic_magic
	cost = 10.00
	ai_will_do = { factor = 80 }
	prerequisite = { focus = SOL_unicorn_academy_f }
	relative_position_id = SOL_unicorn_academy_f
	x = -1
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_magical_studies"
		add_doctrine_cost_reduction = {
			name = land_doc_bonus
			cost_reduction = 0.5
			uses = 1
			category = land_doctrine
		}
		add_tech_bonus = {
			name = race_tech_bonus
			bonus = 1.5
			uses = 1
			category = race_tech
		}
	}
	search_filters = { FOCUS_FILTER_RESEARCH }
}

shared_focus = {
	id = SOL_tools_of_empire
	x = 0
	y = 2
	relative_position_id = SOL_industry_las_pegasus

	cost = 5
	prerequisite = { focus = SOL_industry_las_pegasus }
	available = { eqs_not_has_civil_war = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_tools_of_empire"
		add_tech_bonus = {
			name = industrial_bonus
			uses = 1
			bonus = 0.75
			category = industry
		}
		add_tech_bonus = {
			name = concentration_bonus
			uses = 1
			bonus = 1
			category = concentrated_industry_category
			category = dispsersed_industry_category
		}
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_roadways_across_SOL
	x = 0
	y = 1
	relative_position_id = SOL_imperial_unions

	cost = 6
	prerequisite = { focus = SOL_imperial_unions }
	available = { eqs_not_has_civil_war = yes }
	bypass = {
		all_owned_state = {
			infrastructure > 4
		}
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_roadways_across_SOL"
		random_state = {
			if = {
				limit = {
					infrastructure < 5
					is_owned_and_controlled_by = ROOT
				}
				add_building_construction = {
					type = infrastructure
					level = 2
					instant_build = yes
				}
			}
		}
		random_state = {
			if = {
				limit = {
					infrastructure < 5
					is_owned_and_controlled_by = ROOT
				}
				add_building_construction = {
					type = infrastructure
					level = 2
					instant_build = yes
				}
			}
		}
		random_state = {
			if = {
				limit = {
					infrastructure < 5
					is_owned_and_controlled_by = ROOT
				}
				add_building_construction = {
					type = infrastructure
					level = 2
					instant_build = yes
				}
			}
		}
		random_state = {
			if = {
				limit = {
					infrastructure < 5
					is_owned_and_controlled_by = ROOT
				}
				add_building_construction = {
					type = infrastructure
					level = 2
					instant_build = yes
				}
			}
		}
		random_state = {
			if = {
				limit = {
					infrastructure < 5
					is_owned_and_controlled_by = ROOT
				}
				add_building_construction = {
					type = infrastructure
					level = 2
					instant_build = yes
				}
			}
		}
	}
	ai_will_do = { factor = 40 }
}

shared_focus = {
	id = SOL_motivation_teams
	x = 0
	y = 1
	relative_position_id = SOL_imperial_production_committee

	cost = 6
	prerequisite = { focus = SOL_imperial_production_committee }
	available = { eqs_not_has_civil_war = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_motivation_teams"
		###Event of somepony being chosen as the newest representative of one of the best factories to be part of a propaganda film, which he does with a bit of hesitation, since it's just in his factory, and he has to do what they want while still keeping production the same
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_revitalize_imperial_shipyards
	x = 2
	y = 1
	relative_position_id = SOL_imperial_production_committee

	cost = 7
	prerequisite = { focus = SOL_imperial_production_committee }
	available = {
		eqs_not_has_civil_war = yes
		66 = { is_owned_and_controlled_by = ROOT }
		15 = { is_owned_and_controlled_by = ROOT }
		13 = { is_owned_and_controlled_by = ROOT }
	}

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_revitalize_imperial_shipyards"
		66 = {
			add_extra_state_shared_building_slots = 2
			add_building_construction = {
				type = dockyard
				level = 2
				instant_build = yes
			}
		}
		15 = {
			add_extra_state_shared_building_slots = 2
			add_building_construction = {
				type = dockyard
				level = 2
				instant_build = yes
			}
		}
		13 = {
			add_extra_state_shared_building_slots = 2
			add_building_construction = {
				type = dockyard
				level = 2
				instant_build = yes
			}
		}
		if = {
			limit = {
				14 = { is_owned_and_controlled_by = ROOT }
			}
			14 = {
				add_extra_state_shared_building_slots = 3
				add_building_construction = {
					type = dockyard
					level = 3
					instant_build = yes
				}
			}
		}
		else = {
			custom_effect_tooltip = SOL_retake_yo_country_boi_tt
		}
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_project_starscream
	x = 0
	y = 1
	relative_position_id = SOL_Matilda_research

	cost = 7
	prerequisite = { focus = SOL_Matilda_research }
	available = { eqs_not_has_civil_war = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_project_starscream"
		75 = {
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = arms_factory
				level = 1
				instant_build = yes
			}
		}
		add_tech_bonus = {
			name = superheavy_bonus
			uses = 1
			bonus = 1.25
			ahead_reduction = 2
			category = superheavy_armor
		}
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_promote_mit
	x = -1
	y = 1
	relative_position_id = SOL_magical_studies

	cost = 8
	prerequisite = { focus = SOL_magical_studies }
	mutually_exclusive = { focus = SOL_luna_nova_academy }
	available = { eqs_not_has_civil_war = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_promote_mit"
		if = {
			limit = { amount_research_slots < 5 }
			add_research_slot = 1
		}
		#Idea here
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_luna_nova_academy
	icon = GFX_goal_luna_nova
	dynamic = yes
	cost = 7
	ai_will_do = { factor = 80 }
	prerequisite = {
		focus = SOL_unicorn_academy_f
	}
	mutually_exclusive = { focus = SOL_promote_mit }
	available = {
		eqs_not_has_civil_war = yes
	}
	relative_position_id = SOL_unicorn_academy_f
	x = 1
	y = 2

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus luna_nova_academy"
		country_event = equestria.5
		if = {
			limit = { amount_research_slots < 5 }
			add_research_slot = 1
		}
		effect_tooltip = {
			swap_ideas = { remove_idea = unicorn_academy add_idea = unicorn_academy1 }
		}
	}
	ai_will_do = { factor = 80 }
}

shared_focus = {
	id = SOL_crystal_creator_machines
	x = 0
	y = 1
	relative_position_id = SOL_tools_of_empire

	cost = 7
	prerequisite = { focus = SOL_tools_of_empire }
	prerequisite = { focus = SOL_roadways_across_SOL }
	available = { eqs_not_has_civil_war = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_crystal_creator_machines"
		###Event of somepony working alongside one of the first-generation robots, which are extremely buggy and usually develop a mind of their own, which makes them go rogue multiple times, which it does in this scenario, and he has to quickly find a way to unplug it before it destroys part of the factory
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_magical_crypto_machines
	icon = GFX_focus_Computer_2
	cost = 10.00
	ai_will_do = { factor = 75 }
	prerequisite = {
		focus = SOL_roadways_across_SOL
		focus = SOL_motivation_teams
	}
	available = {
		eqs_not_has_civil_war = yes
		has_tech = tech_unicorn
		OR = {
			has_tech = tech_pony_magical_infantry
			has_tech = tech_pony_unicorns
		}
	}
	relative_position_id = SOL_roadways_across_SOL
	x = 1
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_magical_crypto_machines"
		add_tech_bonus = {
			name = secret_bonus
			bonus = 1.0
			uses = 3
			category = electronics
		}
	}
	search_filters = { FOCUS_FILTER_RESEARCH }

}

shared_focus = {
	id = SOL_practical_metal_applications
	x = 0
	y = 1
	relative_position_id = SOL_revitalize_imperial_shipyards

	cost = 6
	prerequisite = { focus = SOL_revitalize_imperial_shipyards }
	prerequisite = { focus = SOL_project_starscream }
	available = { eqs_not_has_civil_war = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_magical_crypto_machines"
		#Idea here
	}
	ai_will_do = { factor = 80 }
}

shared_focus = {
	id = SOL_grants_for_tithes
	x = -1
	y = 2
	relative_position_id = SOL_trawl_mountain_depths

	cost = 5
	prerequisite = { focus = SOL_trawl_mountain_depths }
	available = { eqs_not_has_civil_war = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_grants_for_tithes"
		#Unlock decision here
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_magical_training
	icon = GFX_goal_eqs_magic_horn
	cost = 10.00
	ai_will_do = { factor = 84 }
	prerequisite = {
		focus = SOL_promote_mit
	}
	available = { eqs_not_has_civil_war = yes }
	relative_position_id = SOL_promote_mit
	x = 0
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_magical_training"
		add_ideas = magical_trainingidea
		add_tech_bonus = {
			name = magical_tech_bonus
			bonus = 1.0
			uses = 1
			technology = magical_weapons
			technology = magical_weapons1
		}
		add_tech_bonus = {
			name = magical_tech_bonus2
			bonus = 1.0
			uses = 1
			technology = tech_pony_magical_infantry
			technology = tech_pony_magical_infantry2
			technology = tech_pony_magical_infantry3
			technology = tech_pony_magical_infantry4
			technology = tech_pony_magical_infantry5
		}
		add_tech_bonus = {
			name = magical_tech_bonus2
			bonus = 1
			uses = 2
			technology = tech_pony_unicorns
			technology = tech_pony_unicorns2
			technology = tech_pony_unicorns3
			technology = tech_pony_unicorns4
			technology = tech_pony_unicorns5
		}
	}
	search_filters = { FOCUS_FILTER_ARMY_BONUS FOCUS_FILTER_RESEARCH }
}

shared_focus = {
	id = SOL_pony_mystics
	x = 0
	y = 1
	relative_position_id = SOL_luna_nova_academy

	cost = 6
	prerequisite = { focus = SOL_luna_nova_academy }
	available = { eqs_not_has_civil_war = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_pony_mystics"
		#Idea here
		add_tech_bonus = {
			name = race_tech_bonus
			uses = 2
			bonus = 1
			category = race_tech
		}
		add_tech_bonus = {
			name = magical_tech_bonus
			bonus = 1
			uses = 1
			category = magical_tech
		}
	}
	ai_will_do = { factor = 70 }
}

shared_focus = {
	id = SOL_arms_potential
	icon = GFX_goal_eqs_star_energy
	cost = 7
	ai_will_do = { factor = 80 }
	prerequisite = {
		focus = SOL_roadways_across_SOL
	}
	available = {
		eqs_not_has_civil_war = yes
		59 = { is_owned_and_controlled_by = ROOT }
		65 = { is_owned_and_controlled_by = ROOT }
	}
	relative_position_id = SOL_roadways_across_SOL
	x = -1
	y = 2
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_arms_potential"
		59 = {
			add_extra_state_shared_building_slots = 2
			add_building_construction = {
				type = arms_factory
				level = 2
				instant_build = yes
			}
		}
		65 = {
			add_building_construction = {
				type = supply_node
				level = 1
				instant_build = yes
				province = 6547
			}
		}
	}
	search_filters = { FOCUS_FILTER_INDUSTRY }
}

shared_focus = {
	id = SOL_new_radar
	x = 1
	y = 1
	relative_position_id = SOL_magical_crypto_machines

	cost = 6
	prerequisite = {
		focus = SOL_magical_crypto_machines
		focus = SOL_practical_metal_applications
	}
	available = { eqs_not_has_civil_war = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_new_radar"
		#Idea here
		add_tech_bonus = {
			name = secret_bonus
			uses = 1
			bonus = 1
			category = electronics
		}
		add_tech_bonus = {
			name = radar_bonus
			uses = 1
			bonus = 1
			category = radar
		}
	}
	ai_will_do = { factor = 60 }
}

shared_focus = {
	id = SOL_bounties_of_earth
	x = -1
	y = 1
	relative_position_id = SOL_grants_for_tithes

	cost = 6
	prerequisite = { focus = SOL_grants_for_tithes }
	mutually_exclusive = { focus = SOL_exploit_bosom }
	available = { eqs_not_has_civil_war = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_bounties_of_earth"
		#Idea here
		###Maybe event of a farmer trying to get some of his last fertilizer or seed for the season, which he is finding troublesome because of imperial bureaucracy and also a distrust that he might be secretly a rebel
	}
	ai_will_do = { factor = 50 }
}

shared_focus = {
	id = SOL_exploit_bosom
	x = 1
	y = 1
	relative_position_id = SOL_grants_for_tithes

	cost = 6
	prerequisite = { focus = SOL_grants_for_tithes }
	mutually_exclusive = { focus = SOL_bounties_of_earth }
	available = { eqs_not_has_civil_war = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_exploit_bosom"
		#Idea here
		###Maybe event of an earth pony farmer trying desperately to fight off or otherwise get rid of a bunch of miners or prosperctors, since he's had his land for generations, but he is informed that he is going to give it up anyway, since they bought it through the Empress's grants directly
	}
	ai_will_do = { factor = 80 }
}

shared_focus = {
	id = SOL_CTL_center_of_research
	icon = GFX_goal_eqs_canterlot
	cost = 10.00
	dynamic = yes
	ai_will_do = { factor = 200 }
	prerequisite = {
		focus = SOL_magical_training
		focus = SOL_pony_mystics
	}
	available = {
		eqs_not_has_civil_war = yes
		capital_scope = { is_controlled_by = ROOT }
	}
	relative_position_id = SOL_magical_training
	x = 2
	y = 1
	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus CTL_center_of_research"
		if = {
			limit = { amount_research_slots < 5 }
			add_research_slot = 1
		}
		#Idea here
	}
	search_filters = { FOCUS_FILTER_RESEARCH }
}

shared_focus = {
	id = SOL_military_industrial_complex
	x = 1
	y = 1
	relative_position_id = SOL_arms_potential

	cost = 7
	prerequisite = {
		focus = SOL_arms_potential
		focus = SOL_new_radar
	}
	available = { eqs_not_has_civil_war = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_military_industrial_complex"
		###Event of Flim and Flam meeting with Daybreaker again with another pitch for one of their new weapons, since they've gotten multiple grants before, and as they show it off to her, she's far from the most impressed, and promises they'll get money for it, if they don't mess up like the last one where it had multiple, strange problems maybe over a dinner or something
	}
	ai_will_do = { factor = 80 }
}

shared_focus = {
	id = SOL_early_matrix_machines
	x = 0
	y = 1
	relative_position_id = SOL_new_radar

	cost = 10
	prerequisite = { focus = SOL_new_radar }
	available = { eqs_not_has_civil_war = yes }

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus SOL_early_matrix_machines"
		#Idea here
		###Maybe an event of a scientist interacting with an early matrix computer, and basically having a HAL-9000 conversation with it, since it managed to gain some sentience
	}
}

shared_focus = {
	id = SOL_EQS_ease_the_rules_of_EEA
	icon = GFX_goal_ease_EEA
	cost = 9
	ai_will_do = { factor = 75 }
	prerequisite = {
		focus = SOL_CTL_center_of_research
	}
	mutually_exclusive = {
		focus = SOL_EQS_strengthen_EEA_authority
	}
	available = {
		eqs_not_has_civil_war = yes
	}
	relative_position_id = SOL_CTL_center_of_research
	x = 1
	y = 1

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus EQS_ease_the_rules_of_EEA"
		swap_ideas = {
			add_idea = unicorn_academy4
			remove_idea = unicorn_academy2
		}
	}
	search_filters = { FOCUS_FILTER_POLITICAL FOCUS_FILTER_RESEARCH }
}
shared_focus = {
	id = SOL_EQS_strengthen_EEA_authority
	icon = GFX_goal_EEA
	cost = 9
	ai_will_do = { factor = 75 }
	prerequisite = {
		focus = SOL_CTL_center_of_research
	}
	available = {
		eqs_not_has_civil_war = yes
	}
	mutually_exclusive = {
		focus = SOL_EQS_ease_the_rules_of_EEA
	}
	relative_position_id = SOL_CTL_center_of_research
	x = -1
	y = 1

	completion_reward = {
		log = "[GetDateText]: [Root.GetName]: Focus EQS_strengthen_EEA_authority"
		swap_ideas = {
			add_idea = unicorn_academy3
			remove_idea = unicorn_academy2
		}
	}
	search_filters = { FOCUS_FILTER_RESEARCH }
}

#shared_focus = {
#	id = SOL_more_research
#	icon = GFX_focus_indy_technological_supremacy
#	cost = 10.00
#	dynamic = yes
#	ai_will_do = { factor = 200 }
#	prerequisite = {
#		focus = SOL_magical_training
#	}
#	available = {
#		eqs_not_has_civil_war = yes
#		amount_research_slots < 5
#	}
#	allow_branch = {
#		hidden_trigger = { is_EQS_SOL = yes }
#		amount_research_slots < 5
#	}
#	relative_position_id = SOL_CTL_center_of_research
#	x = 0
#	y = 4
#	completion_reward = {
#		log = "[GetDateText]: [Root.GetName]: Focus SOL_more_research"
#		add_research_slot = 1
#	}
#	search_filters = { FOCUS_FILTER_RESEARCH }
#
#}

#shared_focus = {
#	id = SOL_Fund_public_schools
#	icon = GFX_goal_eqs_public_schools
#	cost = 10.00
#	ai_will_do = { factor = 75 }
#	prerequisite = {
#		focus = SOL_luna_nova_academy
#	}
#	available = {
#		eqs_not_has_civil_war = yes
#	}
#	relative_position_id = SOL_luna_nova_academy
#	x = 0
#	y = 1
#
#	completion_reward = {
#		log = "[GetDateText]: [Root.GetName]: Focus Fund_public_schools"
#		country_event = equestria.6
#		effect_tooltip = {
#			swap_ideas = { remove_idea = unicorn_academy1 add_idea = unicorn_academy2 }
#		}
#	}
#
#}
