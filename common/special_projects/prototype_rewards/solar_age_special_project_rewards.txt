@reward_weight_factor_theme = 0.25

sp_sun_laser_increased_magic_output = {
    narrative = {
        #First efforts to concentrate solar power yields better understanding of ponies' magical abilities; how to proceed
        name = EQS_solar_focused
        desc = EQS_solar_focused_desc
    }

    threshold = {
        min = 0
        max = 100
    }

    fire_only_once = yes

    weight = {
        factor = 100
    }

    #Improve magical energy weapons slightly
    option = {
        token = sp_EQS_better_magic_guns

        default = yes

        iteration_output = {
            equipment_bonus = {
                magical_equipment = {
                    soft_attack = 0.03
                    breakthrough = 0.03
                    instant = yes
                }
            }
        }
    }

    #Improve mage companies noticeably
    option = {
        token = sp_EQS_better_mages

        iteration_output = {
            sub_unit_bonus = {
                unicorn_company = {
                    soft_attack = 0.05
                    defense = 0.1
                }
            }
        }
    }
}

sp_sun_laser_increased_safety = {
    narrative = {
        #Concentrating so much power runs risk of harming mages who have to cast it; can ignore, or find ward spells that will protect against intense heat
        name = EQS_sunburn
        desc = EQS_sunburn_desc
    }

    threshold = {
        min = 15
        max = 100
    }

    fire_only_once = yes

    weight = {
        factor = 100
    }

    #Ignore dangers and press on
    option = {
        token = sp_EQS_burn_em_all

        default = yes

        iteration_output = {
            country_effects = {
                set_country_flag = SOL_careless_attacks #Will make the delay between shots longer by 60 days as new mages have to be trained to replace ones lost
                custom_effect_tooltip = SOL_careless_attacks_tt
                add_political_power = 50
                #Maybe a magic research bonus of 25%?
            }
        }
    }

    #Accept the delay and allow wards to be researched
    option = {
        token = sp_EQS_sunblock

        iteration_output = {
            #Give 25% magic breakthrough, reduce progress by 8%, +50% magic research speed buff
            country_effects = {
                add_breakthrough_progress = {
                    specialization = specialization_magical
                    value = 0.25
                }
                add_tech_bonus = {
                    name = magical_tech_bonus
                    uses = 1
                    bonus = 0.5
                    category = magical_tech
                }
                sp:sp_EQS_sun_laser = {
                    add_project_progress_ratio = -0.08
                }
            }
        }
    }
}


sp_sun_laser_solar_concentration_application = {
    narrative = {
        #Concentrating all the sunlight gives new light to ways to improve the use of crystal lenses for different purposes
        name = EQS_lazah
        desc = EQS_lazah_desc
    }

    threshold = {
        min = 40
        max = 100
    }

    fire_only_once = yes

    weight = {
        factor = 100
    }

    #Use it for punching through armor
    option = {
        token = sp_EQS_laser_bores

        iteration_output = {
            equipment_bonus = {
                armor = {
                    ap_attack = 0.05
                }
            }
        }
    }

    #Use it for rending flesh
    option = {
        token = sp_EQS_laser_snipes

        default = yes

        iteration_output = {
            equipment_bonus = {
                magical_equipment = {
                    breakthrough = 0.1
                    build_cost_ic = 0.03
                }
            }
        }
    }

    #Use it for advanced manufacturing
    option = {
        token = sp_EQS_laser_assembly_lines

        iteration_output = {
            country_effects = {
                custom_effect_tooltip = SOL_laser_assembly_lines_tt
                hidden_effect = {
                    add_ideas = SOL_laser_assembly_lines
                }
            }
            #+0.02% output and +0.02% retention
        }
    }
}

sp_sun_laser_faulty_concentration_spell = {
    narrative = {
        #Early tests point to the incantations to be slightly off and it takes more magical energy to focus on forming the laser, which requires rectification
        name = EQS_performance_anxiety
        desc = EQS_performance_anxiety_desc
    }

    threshold = {
        min = 60
        max = 100
    }

    fire_only_once = yes

    weight = {
        factor = 100
    }

    #Do not delay the final product
    option = {
        token = sp_EQS_no_therapy

        iteration_output = {
            country_effects = {
                set_country_flag = SOL_expensive_attacks #Add another 45 days between shots
                custom_effect_tooltip = SOL_expensive_attacks_tt
            }
        }
    }

    #Rectify the issue
    option = {
        token = sp_EQS_basic_therapy

        default = yes

        iteration_output = {
            country_effects = {
                #Literally no effects
                custom_effect_tooltip = SOL_ya_got_shrinked_tt
                sp:sp_EQS_sun_laser = {
                    add_project_progress_ratio = -0.05
                }
            }
        }
    }

    #Use chance to improve spell
    option = {
        token = sp_EQS_full_therapy

        iteration_output = {
            country_effects = {
                set_country_flag = SOL_devastating_attacks #Increase casualties by 25% and reduce war support of owner of state by 5% (from 10% already - to be programmed in)
                custom_effect_tooltip = SOL_devastating_attacks_tt
                sp:sp_EQS_sun_laser = {
                    add_project_progress_ratio = -0.12
                }
            }
        }
    }
}

#Maybe
sp_sun_laser_fusion_catalyst = {
    narrative = {
        #While finishing the spell, the scientist has determined how to make small, concentrated spell matrices of the same super-heated bomb, and it can be used for nuclear reactions
        name = EQS_kaboom
        desc = EQS_kaboom_desc
    }

    threshold = {
        min = 85
        max = 100
    }

    fire_only_once = yes

    weight = {
        factor = 100
    }

    #Use it for megaspell material replacements
    option = {
        token = sp_EQS_fallout_equestria_simulator

        default = yes

        iteration_output = {
            #Increase nuke casualties by 20%
        }
    }

    #Split its use between production and nukes
    option = {
        token = sp_EQS_spread_thin

        iteration_output = {
            #Increase nuke casualties by 10% and nuke production by 5%
            country_effects = {
                custom_effect_tooltip = SOL_equal_nuke_bonus_tt
                hidden_effect = {
                    add_ideas = SOL_sun_laser_equal_nuke_bonus
                }
                #Modify variables here
            }
        }
    }

    #Use it for improved megaspell production
    option = {
        token = sp_EQS_crank_out_booms

        iteration_output = {
            #Increase nuke production by 10%
            country_effects = {
                custom_effect_tooltip = SOL_only_nuke_bonus_tt
                hidden_effect = {
                    add_ideas = SOL_sun_laser_only_nuke_bonus
                }
            }
        }
    }
}

sp_sun_laser_exhaustive_casting = {
    narrative = {
        #Further practice shows that the spell is too much for most unicorns and can lead to heart attacks after casting and will have to be reworked
        name = EQS_cardiac_arrest
        desc = EQS_cardiac_arrest_desc
    }

    threshold = {
        min = 85
        max = 100
    }

    fire_only_once = yes

    weight = {
        factor = 100
    }

    #A few mages lost is no big deal
    option = {
        token = sp_EQS_bad_parent

        default = yes

        iteration_output = {
            country_effects = {
                set_country_flag = SOL_bad_momma #Every firing will remove 15000 manpower from SOL
                custom_effect_tooltip = SOL_tik_tok_parent_tt
            }
        }
    }

    #Give them performance enhancing drugs to push them through, regardless of consequences
    option = {
        token = sp_EQS_wanna_try_fantasy_meth

        iteration_output = {
            country_effects = {
                set_country_flag = SOL_even_worse_momma #Every firing will remove 10000 manpower from SOL and deal another 15% casualties
                custom_effect_tooltip = SOL_trailer_park_momma_tt
            }
        }
    }

    #Rewrite the spell to be less straining
    option = {
        token = sp_EQS_caring_parent

        iteration_output = {
            country_effects = {
                #Literally nothing again
                custom_effect_tooltip = SOL_empress_cares_tt
                sp:sp_EQS_sun_laser = {
                    add_project_progress_ratio = -0.1
                }
            }
        }
    }
}

sp_adeptus_astartes_initial_perfection = {
    narrative = {
        #Daybreaker has agreed to donate a portion of her DNA and genetic structure to be used in enhancing ponies, and it is a taxing process; decide which part must be used to enhance the super soldiers
        name = EQS_gene_seed
        desc = EQS_gene_seed_desc
    }

    threshold = {
        min = 0
        max = 100
    }

    fire_only_once = yes

    weight = {
        factor = 100
    }

    #Focus on her grace
    option = {
        token = sp_EQS_graceful_death

        iteration_output = {
            #Increase speed by 5%
            sub_unit_bonus = {
                adeptus_astartes = {
                    maximum_speed = 0.05
                }
            }
        }
    }

    #Focus on her strength
    option = {
        token = sp_EQS_durable_death

        default = yes

        iteration_output = {
            #Increase HP by 5%
            sub_unit_bonus = {
                adeptus_astartes = {
                    max_strength = 0.05
                }
            }
        }
    }

    #Focus on her power
    option = {
        token = sp_EQS_dies_of_death

        iteration_output = {
            #Increase breakthrough by 3%
            sub_unit_bonus = {
                adeptus_astartes = {
                    breakthrough = 0.03
                }
            }
        }
    }
}

sp_adeptus_astartes_power_overwhelming = {
    narrative = {
        #Ponies cannot handle the power and magic coursing through them and the first test subjects went insane and killed most of the scientific staff; a few are held still, and can be used if restrained with more magic, or the sequencing can be redone to fix the flaws
        name = EQS_more_minerals
        desc = EQS_more_minerals_desc
    }

    threshold = {
        min = 20
        max = 100
    }

    fire_only_once = yes

    weight = {
        factor = 100
    }

    #Carefully twine with normal pony DNA
    option = {
        token = sp_EQS_throwing_science_at_the_wall

        default = yes

        iteration_output = {
            #-5% progress and +2% HP
            sub_unit_bonus = {
                adeptus_astartes = {
                    max_strength = 0.02
                }
            }
            country_effects = {
                sp:sp_EQS_adeptus_astartes = {
                    add_project_progress_ratio = -0.05
                }
            }
        }
    }

    #Dominate with magic and use the aggression instead
    option = {
        token = sp_EQS_see_what_sticks

        iteration_output = {
            #+5% progress, -20% org, +5% attack
            sub_unit_bonus = {
                adeptus_astartes = {
                    soft_attack = 0.05
                    hard_attack = 0.05
                    max_organisation = -0.2
                }
            }
            country_effects = {
                sp:sp_EQS_adeptus_astartes = {
                    add_project_progress_ratio = 0.05
                }
            }
        }
    }

    #Rework sequencing to give ponies enough capacity to handle Daybreaker's power
    option = {
        token = sp_EQS_thinking_with_portals

        iteration_output = {
            #-10% progress, +5% org, +2% breakthrough
            sub_unit_bonus = {
                adeptus_astartes = {
                    max_organisation = 0.05
                    breakthrough = 0.02
                }
            }
            country_effects = {
                sp:sp_EQS_adeptus_astartes = {
                    add_project_progress_ratio = -0.1
                }
            }
        }
    }
}

sp_adeptus_astartes_armor_applications = {
    narrative = {
        #The first prototypes for the armor used for praetorians have been shown and there are some novel applications of defensive magic which can be applied to other areas of the military, or further improved for the praetorians
        name = EQS_walking_tanks
        desc = EQS_walking_tanks_desc
    }

    threshold = {
        min = 45
        max = 100
    }

    fire_only_once = yes

    weight = {
        factor = 100
    }

    #Apply to infantry armor
    option = {
        token = sp_EQS_not_walking_tanks

        iteration_output = {
            #+2% infantry HP, +1% defense
            sub_unit_bonus = {
                infantry = {
                    max_strength = 0.02
                    defense = 0.01
                }
                magical_infantry = {
                    max_strength = 0.02
                    defense = 0.01
                }
            }
        }
    }

    #Harden tank armor further
    option = {
        token = sp_EQS_literal_tanks

        default = yes

        iteration_output = {
            #+3% armor, +1% defense
            sub_unit_bonus = {
                category_tanks = {
                    armor_value = 0.03
                    defense = 0.01
                }
            }
        }
    }

    #Iterate what's there
    option = {
        token = sp_EQS_literal_walking_tanks

        iteration_output = {
            #+10% armor, +3% prod cost
            equipment_bonus = {
                space_marine_armor = {
                    armor_value = 0.1 build_cost_ic = 0.03 instant = yes
                }
            }
        }
    }
}

sp_adeptus_astartes_weapon_applications = {
    narrative = {
        #The first iterations of the weapons to be used by the praetorians have been delivered and there are still problems with it; multiple designers have offered to finish it, and each have some benefits and drawbacks to decide from
        name = EQS_shootas
        desc = EQS_shootas_desc
    }

    threshold = {
        min = 65
        max = 100
    }

    fire_only_once = yes

    weight = {
        factor = 100
    }

    #Use the cheapest option, Flim Flam Arms
    option = {
        token = sp_EQS_blown_brains

        iteration_output = {
            #-10% attack and reliability, -15% prod cost
            equipment_bonus = {
                space_marine_bolt_gun = { soft_attack = -0.1 hard_attack = -0.1 reliability = -0.1 build_cost_ic = -0.15 instant = yes }
            }
        }
    }

    #Stick with Bitterbury Arms
    option = {
        token = sp_EQS_standard_procedure

        default = yes

        iteration_output = {
            country_effects = {
                sp:sp_EQS_adeptus_astartes = {
                    add_project_progress_ratio = 0.05
                }
            }
        }
    }

    #Search for the best forges in Canterlot to make it
    option = {
        token = sp_EQS_legendary_roll

        iteration_output = {
            #+10% reliability, +5% attack, +5% defense, +10% prod cost, -15% progress
            equipment_bonus = {
                space_marine_bolt_gun = { soft_attack = 0.05 hard_attack = 0.05 defense = 0.05 reliability = 0.075 build_cost_ic = 0.125 instant = yes }
            }
            country_effects = {
                sp:sp_EQS_adeptus_astartes = {
                    add_project_progress_ratio = -0.15
                }
            }
        }
    }
}

sp_adeptus_astartes_magical_abilities = {
    narrative = {
        #Since Daybreaker is an alicorn, her magic contains aspects of all three pony races, and one must be prioritized for soldiers to keep the DNA conflict minimal
        name = EQS_magic_is_as_magic_does
        desc = EQS_magic_is_as_magic_does_desc
    }

    threshold = {
        min = 85
        max = 100
    }

    fire_only_once = yes

    weight = {
        factor = 100
    }

    #Focus on unicorn magic
    option = {
        token = sp_EQS_cheaty_mages

        default = yes

        iteration_output = {
            #+5% breakthrough
            sub_unit_bonus = {
                adeptus_astartes = {
                    breakthrough = 0.05
                }
            }
        }
    }

    #Focus on pegasi magic
    option = {
        token = sp_EQS_cheaty_rangers

        iteration_output = {
            #+10% speed
            sub_unit_bonus = {
                adeptus_astartes = {
                    maximum_speed = 0.1
                }
            }
        }
    }

    #Focus on earth pony magic
    option = {
        token = sp_EQS_cheaty_fighters

        iteration_output = {
            #+5% armor
            sub_unit_bonus = {
                adeptus_astartes = {
                    armor_value = 0.05
                }
            }
        }
    }
}

sp_enhanced_matrices_crystal_decisions = {
    narrative = {
        #Matrices are comprised of a specific kind of crystal, but it is possible to modify them to be made of multiple types, or of a rarer, more powerful crystal
        name = EQS_tinker_tinker
        desc = EQS_tinker_tinker_desc
    }

    threshold = {
        min = 0
        max = 100
    }

    fire_only_once = yes

    weight = {
        factor = 100
    }

    #Amalgamate different crystals together
    option = {
        token = sp_EQS_cheap_out

        default = yes

        iteration_output = {
            equipment_bonus = {
                magical_equipment = {
                    reliability = -0.02
                    soft_attack = -0.02
                    build_cost_ic = -0.03
                }
            }
        }
    }

    #Use more durable crystal
    option = {
        token = sp_EQS_spend_mony

        iteration_output = {
            equipment_bonus = {
                magical_equipment = {
                    reliability = 0.03
                    build_cost_ic = 0.02
                }
            }
        }
    }
}

sp_enhanced_matrices_unstable_matrices = {
    narrative = {
        #While working on improving storage of magical energy, the matrix prototype exploded, which damaged parts of the facility, but gave the scientist an idea to use it as grenades or fallbacks for keeping equipment out of enemy hooves
        name = EQS_explosive_personality
        desc = EQS_explosive_personality_desc
    }

    threshold = {
        min = 25
        max = 100
    }

    fire_only_once = yes

    weight = {
        factor = 100
    }

    #Use as a kind of magical grenade
    option = {
        token = sp_EQS_boom_baby

        iteration_output = {
            equipment_bonus = {
                magical_equipment = {
                    soft_attack = 0.02
                    breakthrough = 0.01
                }
            }
            country_effects = {
                sp:sp_EQS_enhanced_matrices = {
                    add_project_progress_ratio = -0.05
                }
            }
        }
    }

    #Use it to prevent capture
    option = {
        token = sp_EQS_self_destructive

        default = yes

        iteration_output = {
            equipment_bonus = {
                magical_equipment = {
                    reliability = -0.02
                    ap_attack = 0.03
                }
            }
            country_effects = {
                sp:sp_EQS_enhanced_matrices = {
                    add_project_progress_ratio = -0.05
                }
            }
        }
    }

    #Fix the flaw
    option = {
        token = sp_EQS_self_reflective

        iteration_output = {
            equipment_bonus = {
                magical_equipment = {
                    reliability = 0.04
                }
            }
            country_effects = {
                sp:sp_EQS_enhanced_matrices = {
                    add_project_progress_ratio = -0.1
                }
            }
        }
    }
}

sp_super_flamers_flame_compound = {
    narrative = {
        #The current proposed flame compound melts the armor of the tank over time, and can be reduced in intensity to preserve some of the protective qualities of the tank
        name = EQS_getting_hot_in_here
        desc = EQS_getting_hot_in_here_desc
    }

    threshold = {
        min = 30
        max = 100
    }

    fire_only_once = yes

    weight = {
        factor = 100
    }

    #Continue as planned
    option = {
        token = sp_EQS_getting_hot

        default = yes

        iteration_output = {
            #Increase soft_attack by 25%, reduce armor by 15%
            sub_unit_bonus = {
                light_flame_tank = { soft_attack = 0.25 armor_value = -0.15 }
                medium_flame_tank = { soft_attack = 0.25 armor_value = -0.15 }
                heavy_flame_tank = { soft_attack = 0.25 armor_value = -0.15 }
                super_heavy_flame_tank = { soft_attack = 0.25 armor_value = -0.15 }
                modern_flame_tank = { soft_attack = 0.25 armor_value = -0.15 }
            }
        }
    }

    #Reduce the flame's intensity
    option = {
        token = sp_EQS_take_chill_pill

        iteration_output = {
            #Decrease soft attack by 15%, increase armor by 10%
            sub_unit_bonus = {
                light_flame_tank = { soft_attack = -0.15 armor_value = 0.1 }
                medium_flame_tank = { soft_attack = -0.15 armor_value = 0.1 }
                heavy_flame_tank = { soft_attack = -0.15 armor_value = 0.1 }
                super_heavy_flame_tank = { soft_attack = -0.15 armor_value = 0.1 }
                modern_flame_tank = { soft_attack = -0.15 armor_value = 0.1 }
            }
        }
    }

    #Redesign the armor scheme entirely
    option = {
        token = sp_EQS_door_number_c

        iteration_output = {
            #increase soft attack by 10%, armor by 5%, and production cost by 5%
            sub_unit_bonus = {
                light_flame_tank = { soft_attack = 0.1 armor_value = 0.05 }
                medium_flame_tank = { soft_attack = 0.1 armor_value = 0.05 }
                heavy_flame_tank = { soft_attack = 0.1 armor_value = 0.05 }
                super_heavy_flame_tank = { soft_attack = 0.1 armor_value = 0.05 }
                modern_flame_tank = { soft_attack = 0.1 armor_value = 0.05 }
            }
            country_effects = {
                sp:sp_EQS_super_flamers = {
                    add_project_progress_ratio = -0.1
                }
            }
        }
    }
}

sp_super_flamers_sticky_or_liquid_compound = {
    narrative = {
        #There are two avenues that can be taken with the magical fuel, either be like napalm and stick to anything it can, and better; or be coalesced into an incredibly runny but coherent liquid that will spread rapidly and burn anything it touches
        name = EQS_fires_of_tartarus
        desc = EQS_fires_of_tartarus_desc
    }

    threshold = {
        min = 65
        max = 100
    }

    fire_only_once = yes

    weight = {
        factor = 100
    }

    #Stick to anything
    option = {
        token = sp_EQS_safe_route

        default = yes

        iteration_output = {
            #Increase attack bonus of flame tanks by 5% in close quarters environments: urban, fort, forest, jungle
            sub_unit_bonus = {
                light_flame_tank = { urban = { attack = 0.05 } fort = { attack = 0.05 } forest = { attack = 0.05 } jungle = { attack = 0.05 } }
                medium_flame_tank = { urban = { attack = 0.05 } fort = { attack = 0.05 } forest = { attack = 0.05 } jungle = { attack = 0.05 } }
                heavy_flame_tank = { urban = { attack = 0.05 } fort = { attack = 0.05 } forest = { attack = 0.05 } jungle = { attack = 0.05 } }
                super_heavy_flame_tank = { urban = { attack = 0.05 } fort = { attack = 0.05 } forest = { attack = 0.05 } jungle = { attack = 0.05 } }
                modern_flame_tank = { urban = { attack = 0.05 } fort = { attack = 0.05 } forest = { attack = 0.05 } jungle = { attack = 0.05 } }
            }
        }
    }

    #Run like heck
    option = {
        token = sp_EQS_unsafe_route

        iteration_output = {
            #Increase attack bonus of flame tanks by 5% in open areas: plains, hills, desert, marsh
            sub_unit_bonus = {
                light_flame_tank = { desert = { attack = 0.05 } plains = { attack = 0.05 } marsh = { attack = 0.05 } hills = { attack = 0.05 } }
                medium_flame_tank = { desert = { attack = 0.05 } plains = { attack = 0.05 } marsh = { attack = 0.05 } hills = { attack = 0.05 } }
                heavy_flame_tank = { desert = { attack = 0.05 } plains = { attack = 0.05 } marsh = { attack = 0.05 } hills = { attack = 0.05 } }
                super_heavy_flame_tank = { desert = { attack = 0.05 } plains = { attack = 0.05 } marsh = { attack = 0.05 } hills = { attack = 0.05 } }
                modern_flame_tank = { desert = { attack = 0.05 } plains = { attack = 0.05 } marsh = { attack = 0.05 } hills = { attack = 0.05 } }
            }
        }
    }
}

sp_plasma_cannons_reducing_load = {
    narrative = {
        #The prototype plasma cannons are extremely heavy, to the point of impacting naval performance of the battleships; the designs themselves can't be changed, but the ships can, and there are options for this
        name = EQS_big_boned
        desc = EQS_big_boned_desc
    }

    threshold = {
        min = 25
        max = 100
    }

    fire_only_once = yes

    weight = {
        factor = 100
    }

    #Reduce unnecessary armaments
    option = {
        token = sp_EQS_light_hit

        iteration_output = {
            #Increase range of battleships and battlecruisers by 5%, but reduce light attack by 5%
            equipment_bonus = {
                ship_hull_heavy = { naval_range = 0.05 lg_attack = -0.05 instant = yes }
            }
            country_effects = {
                sp:sp_EQS_plasma_cannons = {
                    add_project_progress_ratio = -0.08
                }
            }
        }
    }

    #Reduce armor plating around noncritical areas
    option = {
        token = sp_EQS_lightweight

        default = yes

        iteration_output = {
            #Increase range of battleships by 5%, but reduce armor by 5%
            equipment_bonus = {
                ship_hull_heavy = { naval_range = 0.05 armor_value = -0.05 instant = yes }
            }
            country_effects = {
                sp:sp_EQS_plasma_cannons = {
                    add_project_progress_ratio = -0.08
                }
            }
        }
    }

    #Redesign the engine system instead
    option = {
        token = sp_EQS_heavyweight

        iteration_output = {
            #Increase range of battleship by 10% but increase production cost by 3% and fuel usage by 5%
            equipment_bonus = {
                ship_hull_heavy = { naval_range = 0.1 fuel_consumption = 0.05 build_cost_ic = 0.03 instant = yes }
            }
            country_effects = {
                sp:sp_EQS_plasma_cannons = {
                    add_project_progress_ratio = -0.15
                }
            }
        }
    }
}

sp_plasma_cannons_traditional_usage = {
    narrative = {
        #The spells used to craft the plasma shots can also be applied to traditional weapons, too, and it's a matter of which aspect it should be dedicated to for development
        name = EQS_plasma_spazz
        desc = EQS_plasma_spazz_desc
    }

    threshold = {
        min = 60
        max = 100
    }

    fire_only_once = yes

    weight = {
        factor = 100
    }

    #Apply these to our tank weapons
    option = {
        token = sp_EQS_tank_melters

        iteration_output = {
            #Increase armor piercing by 5%, increase production cost by 2%
            equipment_bonus = {
                armor = { ap_attack = 0.05 build_cost_ic = 0.02 instant = yes }
            }
        }
    }

    #Utilize these on traditional heavy guns
    option = {
        token = sp_EQS_stacking_modifiers

        default = yes

        iteration_output = {
            #Increase heavy piercing by 3%
            equipment_bonus = {
                ship_hull_heavy = { hg_armor_piercing = 0.03 instant = yes }
            }
        }
    }

    #Utilize these on light guns
    option = {
        token = sp_EQS_supplemental_choice

        iteration_output = {
            #Increase light piercing by 5%
            equipment_bonus = {
                ship_hull_heavy = { lg_armor_piercing = 0.05 instant = yes }
            }
        }
    }
}

sp_inferno_cas_flight_problem = {
    narrative = {
        #The initial idea of the CAS bomber was just strapping loads of bombs onto it but that is causing takeoff problems, and there needs to be a solution, even after changing the initial parameters, since it'll still be a heavier load than any previous cas bomber
        name = EQS_emotional_damage
        desc = EQS_emotional_damage_desc
    }

    threshold = {
        min = 0
        max = 100
    }

    fire_only_once = yes

    weight = {
        factor = 100
    }

    #Just strap more engines to it
    option = {
        token = sp_EQS_nom

        iteration_output = {
            #+5% prod cost, +5% thrust
            equipment_bonus = {
                super_cas_equipment = { thrust = 0.05 build_cost_ic = 0.05 instant = yes }
            }
        }
    }

    #Cut as much unneeded weight as possible without sacrificing payload
    option = {
        token = sp_EQS_diet_time

        default = yes

        iteration_output = {
            #-10% reliability, -5% prod cost
            equipment_bonus = {
                super_cas_equipment = { reliability = -0.1 build_cost_ic = -0.05 instant = yes }
            }
        }
    }

    #Redesign the chassis out of lighter materials like full-body aluminium
    option = {
        token = sp_EQS_advanced_stuff

        iteration_output = {
            #-5% progress, +2% prod cost, +3% reliability
            equipment_bonus = {
                super_cas_equipment = { reliability = 0.03 build_cost_ic = 0.03 instant = yes }
            }
            country_effects = {
                sp:sp_EQS_inferno_cas = {
                    add_project_progress_ratio = -0.05
                }
            }
        }
    }
}

sp_inferno_cas_bobomb = {
    narrative = {
        #The magic that's used for the explosives in the bombs for this cas can be tweaked slightly to either spread more effectively on the ground and burn more of a battlefield, bite through armor on ships, or have general heat improvements to burn better on both, and should be chosen to iterate upon
        name = EQS_chomp
        desc = EQS_chomp_desc
    }

    threshold = {
        min = 15
        max = 100
    }

    fire_only_once = yes

    weight = {
        factor = 100
    }

    #Burn everything
    option = {
        token = sp_EQS_pyro

        iteration_output = {
            #+5% ground attack, -3% agility
            equipment_bonus = {
                super_cas_equipment = { air_ground_attack = 0.05 air_agility = -0.03 instant = yes }
            }
        }
    }

    #Burn the ships
    option = {
        token = sp_EQS_fire_water

        iteration_output = {
            #+15% naval targeting, -5% ground attack
            equipment_bonus = {
                super_cas_equipment = { air_ground_attack = -0.05 naval_strike_targetting = 0.15 instant = yes }
            }
        }
    }

    #Burn both a bit better
    option = {
        token = sp_EQS_fire_good

        default = yes

        iteration_output = {
            #+2% ground attack, +5% naval targeting
            equipment_bonus = {
                super_cas_equipment = { air_ground_attack = 0.02 naval_strike_targetting = 0.05 instant = yes }
            }
        }
    }
}

sp_inferno_cas_flimsy_wings = {
    narrative = {
        #The wings that are on the planes still can't handle the load of the bombs properly, even if the chassis now can, and they frequently rip off while trying to take flight and need to be adjusted with a couple of options to choose from
        name = EQS_wimpy_planes
        desc = EQS_wimpy_planes_desc
    }

    threshold = {
        min = 40
        max = 100
    }

    fire_only_once = yes

    weight = {
        factor = 100
    }

    #Lighten the loads
    option = {
        token = sp_EQS_so_weak

        default = yes

        iteration_output = {
            #-5% ground attack, -5% naval target, -3% prod cost, -5% progress
            equipment_bonus = {
                super_cas_equipment = { air_ground_attack = -0.05 naval_strike_targetting = -0.05 build_cost_ic = -0.03 instant = yes }
            }
            country_effects = {
                sp:sp_EQS_inferno_cas = {
                    add_project_progress_ratio = -0.05
                }
            }
        }
    }

    #Reinforce the struts
    option = {
        token = sp_EQS_less_weak

        iteration_output = {
            #-10% progress, +2% prod cost, +5% reliability
            equipment_bonus = {
                super_cas_equipment = { reliability = 0.05 build_cost_ic = 0.02 instant = yes }
            }
            country_effects = {
                sp:sp_EQS_inferno_cas = {
                    add_project_progress_ratio = -0.1
                }
            }
        }
    }
}

sp_inferno_cas_taking_flight = {
    narrative = {
        #With successful prototypes, the first flights indicate that the bomber lacks much maneuverability compared to normal fighters and needs to have compensation applied in some way, with a few options possible to choose from
        name = EQS_big_birbs
        desc = EQS_big_birbs_desc
    }

    threshold = {
        min = 65
        max = 100
    }

    fire_only_once = yes

    weight = {
        factor = 100
    }

    #Apply more armor
    option = {
        token = sp_EQS_beefy_bois

        default = yes

        iteration_output = {
            #+15% defense, +4% prod cost, -5% progress
            equipment_bonus = {
                super_cas_equipment = { air_defence = 0.15 build_cost_ic = 0.03 instant = yes }
            }
            country_effects = {
                sp:sp_EQS_inferno_cas = {
                    add_project_progress_ratio = -0.05
                }
            }
        }
    }

    #Redesign with more effective control surfaces
    option = {
        token = sp_EQS_semi_speedy_bois

        iteration_output = {
            #+5% agility, +1% prod cost, -5% progress
            equipment_bonus = {
                super_cas_equipment = { air_agility = 0.05 build_cost_ic = 0.01 instant = yes }
            }
            country_effects = {
                sp:sp_EQS_inferno_cas = {
                    add_project_progress_ratio = -0.05
                }
            }
        }
    }

    #Enchant the wings with lightening spells to improve handling
    option = {
        token = sp_EQS_speedy_bois

        iteration_output = {
            #+15% agility, +5% prod cost, -10% progress
            equipment_bonus = {
                super_cas_equipment = { air_agility = 0.15 build_cost_ic = 0.05 instant = yes }
            }
            country_effects = {
                sp:sp_EQS_inferno_cas = {
                    add_project_progress_ratio = -0.1
                }
            }
        }
    }
}

sp_inferno_cas_unstable_bombs = {
    narrative = {
        #There have been numerous accidents as the final mixture of components for the bombs have been made, and it's been determined that it is volatile to the point of jostling it too hard can make it explode, which means that it must be dealt with in some way, to improve safety
        name = EQS_gentle_giant
        desc = EQS_gentle_giant_desc
    }

    threshold = {
        min = 85
        max = 100
    }

    fire_only_once = yes

    weight = {
        factor = 100
    }

    #Warn the pilots to be careful
    option = {
        token = sp_EQS_no_OSHA_compliance

        default = yes

        iteration_output = {
            #-5% reliability, +5% progress
            equipment_bonus = {
                super_cas_equipment = { reliability = -0.05 instant = yes }
            }
            country_effects = {
                sp:sp_EQS_inferno_cas = {
                    add_project_progress_ratio = 0.05
                }
            }
        }
    }

    #Reinforce the bomb shells to hold the spells better
    option = {
        token = sp_EQS_some_OSHA_compliance

        iteration_output = {
            #-2% ground attack, +5% reliability, -5% progress
            equipment_bonus = {
                super_cas_equipment = { air_ground_attack = -0.02 reliability = 0.05 instant = yes }
            }
            country_effects = {
                sp:sp_EQS_inferno_cas = {
                    add_project_progress_ratio = -0.05
                }
            }
        }
    }

    #Redesign container spell inside the bomb to hold the spell more effectively
    option = {
        token = sp_EQS_OSHA_compliance

        iteration_output = {
            #+3% ground attack, -10% progress
            equipment_bonus = {
                super_cas_equipment = { air_ground_attack = 0.03 instant = yes }
            }
            country_effects = {
                sp:sp_EQS_inferno_cas = {
                    add_project_progress_ratio = -0.1
                }
            }
        }
    }
}

sp_portable_solar_panels_material_procurement = {
    narrative = {
        #As design is wrapping up on the solar panels, a decision should be made on what the final bill of materials will be, as there are some compounds that are harder to get but better suited for the role, whereas others are easier to get but not as effective
        name = EQS_hippy_time
        desc = EQS_hippy_time_desc
    }

    threshold = {
        min = 80
        max = 100
    }

    fire_only_once = yes

    weight = {
        factor = 100
    }

    #Use readily available materials
    option = {
        token = sp_EQS_quantity

        iteration_output = {
            #Reduce range factors by 5% and supply range by 3%, increase supply hub build speed by 5%, and reduce ic cost of planes and ships by 2%
            #Should be hidden idea
            country_effects = {
                custom_effect_tooltip = SOL_when_complete_tt
                custom_effect_tooltip = SOL_skimped_out_tt
                set_country_flag = SOL_weaker_solar_panel_bonus #Will affect the final output
            }
        }
    }

    #Use a mix
    option = {
        token = sp_EQS_status_quo

        default = yes

        iteration_output = {
            #Literally nothing changes
            country_effects = {
                custom_effect_tooltip = SOL_feeling_bold_today_eh_tt
            }
        }
    }

    #Use the rarer and more efficient materials
    option = {
        token = sp_EQS_quality

        iteration_output = {
            #Increase range factors by 3% and supply range by 2%, decrease supply hub build speed by 5% and increase ic cost of planes and ships by 2%
            #Should be hidden idea
            country_effects = {
                custom_effect_tooltip = SOL_when_complete_tt
                custom_effect_tooltip = SOL_big_spender_tt
                set_country_flag = SOL_stronger_solar_panel_bonus #Will affect final output
            }
        }
    }
}

sp_pilot_drug_programs_test_subject_groups = {
    narrative = {
        #For the first step of the program, it must be decided if the air force will test their own pilots or civilians will be used instead, which may benefit the economy slightly
        name = EQS_far_out_dude
        desc = EQS_far_out_dude_desc
    }

    threshold = {
        min = 0
        max = 100
    }

    fire_only_once = yes

    weight = {
        factor = 100
    }

    #Use civilians
    option = {
        token = sp_EQS_ethical_smethical

        default = yes

        iteration_output = {
            #Increase factory output by 2%, decrease monthly population by 2%
            country_effects = {
                custom_effect_tooltip = SOL_hippie_populace_tt
                hidden_effect = {
                    add_ideas = SOL_drugged_populace
                }
            }
        }
    }

    #Use the air force
    option = {
        token = sp_EQS_smethical_ethical

        iteration_output = {
            #Increase manpower requirements by 2%, increase agility by 1% and attack by 1%
            country_effects = {
                custom_effect_tooltip = SOL_hippie_pilots_tt
                hidden_effect = {
                    add_ideas = SOL_drugged_pilots
                }
            }
        }
    }
}

sp_hot_fusion_reactor_venting_problems = {
    narrative = {
        #For the first steps at preparing for the heat needed for large-scale fusion, there are problems with the reactors getting to the point of meltdown, and venting problems will have to be figured out
        name = EQS_spicy_pillow
        desc = EQS_spicy_pillow_desc
    }

    threshold = {
        min = 0
        max = 100
    }

    fire_only_once = yes

    weight = {
        factor = 100
    }

    #Create new vents for the reactors
    option = {
        token = sp_EQS_glow_much

        default = yes

        iteration_output = {
            #Increase reactor build speed by 10%, reduce output of nukes by 5%
            country_effects = {
                custom_effect_tooltip = SOL_nuclear_nonproliferation_tt
                sp:sp_EQS_hot_fusion = {
                    add_project_progress_ratio = -0.08
                }
                hidden_effect = {
                    add_ideas = SOL_nuke_safety_concerns
                }
            }
        }
    }

    #Rebuild the cores with more thermally resistant materials
    option = {
        token = sp_EQS_normie_choice

        iteration_output = {
            #Literally nothing
            country_effects = {
                custom_effect_tooltip = SOL_no_meltdown_today_tt
                sp:sp_EQS_hot_fusion = {
                    add_project_progress_ratio = -0.08
                }
            }
        }
    }

    #Develop coolants and proper heat exhausts for use with the reactors
    option = {
        token = sp_EQS_based_choice

        iteration_output = {
            #Decrease reactor build speed by 5%, increase nuke output by 5%
            country_effects = {
                custom_effect_tooltip = SOL_buck_the_nuclear_rules_tt
                hidden_effect = {
                    add_ideas = SOL_nuke_safety_nonconcerns
                }
                sp:sp_EQS_hot_fusion = {
                    add_project_progress_ratio = -0.12
                }
            }
        }
    }
}

sp_hot_fusion_reactor_by_products = {
    narrative = {
        #The fusion process leaves behind products which can be utilized for various purposes, as it ultimately caps out at iron, which is about as pure as can be, and can be used for different purposes when extracted
        name = EQS_not_rocket_science
        desc = EQS_not_rocket_science_desc
    }

    threshold = {
        min = 65
        max = 100
    }

    fire_only_once = yes

    weight = {
        factor = 100
    }

    #Utilize it for tank armor
    option = {
        token = sp_EQS_tanks_for_that

        iteration_output = {
            #Increase tank armor by 3%, breakthrough by 3%
            equipment_bonus = {
                armor = { armor_value = 0.03 breakthrough = 0.03 instant = yes }
            }
        }
    }

    #Utilize it for ship armor
    option = {
        token = sp_EQS_ship_to_ship_battle

        iteration_output = {
            #Increase all ship armor by 5%, hp by 2%
            equipment_bonus = {
                capital_ship = { armor_value = 0.05 max_strength = 0.02 }
                screen_ship = { armor_value = 0.05 max_strength = 0.02 }
                submarine = { max_strength = 0.02 }
            }
        }
    }

    #Utilize it for stronger buildings
    option= {
        token = sp_EQS_infinite_construction

        default = yes

        iteration_output = {
            #Decrease factory bomb vulnerability by 10%
            country_effects = {
                custom_effect_tooltip = SOL_freaky_factories_tt
                hidden_effect = {
                    add_ideas = SOL_protected_factories
                }
            }
        }
    }
}
